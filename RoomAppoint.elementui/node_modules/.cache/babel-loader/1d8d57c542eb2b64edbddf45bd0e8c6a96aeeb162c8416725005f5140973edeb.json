{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport store from '@/store';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'Room',\n  computed: {\n    ...mapGetters(['UserInfo', \"Token\", \"UserId\"])\n  },\n  data() {\n    return {\n      activeName: \"选座列表\",\n      RoomId: undefined,\n      RoomDetail: null,\n      DateList: [],\n      SeatArrange: null,\n      SelectDate: null,\n      CommentList: []\n    };\n  },\n  created() {\n    this.RoomId = this.$route.query.RoomId;\n    this.GetRoomApi();\n    this.GetSevenDaysApi();\n    this.CommentListApi();\n  },\n  methods: {\n    //得到自习室详情接口\n    async GetRoomApi() {\n      let {\n        Data\n      } = await this.$Post(\"/Room/Get\", {\n        Id: this.RoomId\n      });\n      this.RoomDetail = Data;\n    },\n    // 得到最近7天\n    async GetSevenDaysApi() {\n      let {\n        Data\n      } = await this.$Post(\"/Seat/GetSevenDays\", {});\n      this.DateList = Data;\n      this.SelectDate = this.DateList[0];\n      this.GetArrange();\n    },\n    // 得到选中日期的座位信息\n    // 处理 SeatArrange 数据，使 IsOccpuy 为布尔值\n    async GetArrange() {\n      let {\n        Data\n      } = await this.$Post('/Seat/GetArrange', {\n        RoomId: this.RoomId,\n        SelectDate: this.SelectDate + \" 00:00:00\"\n      }, {\n        params: {\n          _random: Date.now()\n        }\n      });\n      this.SeatArrange = Data;\n\n      // 将所有座位的 IsOccpuy 转换为布尔值\n      this.SeatArrange.AmSeatDtoList.forEach(row => {\n        row.forEach(col => {\n          col.IsOccpuy = Boolean(col.IsOccpuy); // 确保 IsOccpuy 为布尔值\n        });\n      });\n      this.SeatArrange.PmSeatDtoList.forEach(row => {\n        row.forEach(col => {\n          col.IsOccpuy = Boolean(col.IsOccpuy);\n        });\n      });\n      this.SeatArrange.NmSeatDtoList.forEach(row => {\n        row.forEach(col => {\n          col.IsOccpuy = Boolean(col.IsOccpuy);\n        });\n      });\n    },\n    // 选中日期\n    async handleClick(e) {\n      console.log(e);\n      this.GetArrange();\n    },\n    // 返回上一页\n    goBack() {\n      this.$router.go(-1);\n    },\n    // 去预约\n    async ToAppoint(col, type) {\n      if (col.IsOccpuy) {\n        return;\n      }\n      if (!this.Token) {\n        this.$message.warning(\"请先登录后再操作\");\n        return;\n      }\n      let body = {\n        RoomId: this.RoomId,\n        UserId: this.UserId,\n        SeatId: col.Id,\n        AppointDateType: type,\n        AppointDate: this.SelectDate + \" 00:00:00\"\n      };\n      let {\n        Success\n      } = await this.$Post(\"/AppointRecord/CheckIsAbleAppoint\", body);\n      let tick = new Date().getTime();\n      localStorage.setItem(tick, JSON.stringify(body));\n      if (Success) {\n        this.$router.push({\n          path: '/Front/ToOrder',\n          query: {\n            tick: tick\n          }\n        });\n      }\n    },\n    //查询评论记录\n    async CommentListApi() {\n      let {\n        Data: {\n          Items\n        }\n      } = await this.$Post(\"/AppointRecord/List\", {\n        RoomId: this.RoomId,\n        AppointStatus: 3\n      });\n      this.CommentList = Items;\n    }\n  }\n};","map":{"version":3,"names":["store","mapGetters","name","computed","data","activeName","RoomId","undefined","RoomDetail","DateList","SeatArrange","SelectDate","CommentList","created","$route","query","GetRoomApi","GetSevenDaysApi","CommentListApi","methods","Data","$Post","Id","GetArrange","params","_random","Date","now","AmSeatDtoList","forEach","row","col","IsOccpuy","Boolean","PmSeatDtoList","NmSeatDtoList","handleClick","e","console","log","goBack","$router","go","ToAppoint","type","Token","$message","warning","body","UserId","SeatId","AppointDateType","AppointDate","Success","tick","getTime","localStorage","setItem","JSON","stringify","push","path","Items","AppointStatus"],"sources":["src/views/Front/Room.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"RoomDetail\">\r\n    <el-page-header class=\"Card margin-top-lg\" @back=\"goBack\" :content=\"RoomDetail.Name\">\r\n    </el-page-header>\r\n    <div class=\" Card margin-top-lg margin-bottom-lg\">\r\n      <div>\r\n        <img :src=\"RoomDetail.Cover\" style=\"width: 100%;border-radius: 10px;\">\r\n      </div>\r\n      <div class=\"container\">\r\n        <el-tabs v-model=\"activeName\">\r\n          <el-tab-pane label=\"详情介绍\" name=\"详情介绍\">\r\n            <div class=\"content\" v-html=\"RoomDetail.Content\"></div>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"选座列表\" name=\"选座列表\">\r\n            <h4>先选择日期</h4>\r\n            <el-tabs v-model=\"SelectDate\" @tab-click=\"handleClick\">\r\n              <el-tab-pane v-for=\"(item, index) in DateList\" :key=\"item.id || index\" :label=\"item\" :name=\"item\">\r\n              </el-tab-pane>\r\n            </el-tabs>\r\n            <template v-if=\"SeatArrange\">\r\n              <h4>上午</h4>\r\n              <div class=\"seat-list\">\r\n                <div class=\"seat-row\" v-for=\"(row, rowIndex) in SeatArrange.AmSeatDtoList\">\r\n                  <div class=\"seat-col\" v-for=\"(col, colIndex) in row\">\r\n                    <div v-if=\"col.Id\" @click=\"ToAppoint(col, 1)\">\r\n                      <img v-if=\"col.IsOccupy\" :src=\"require('@/assets/seatCheck.png')\" alt=\"已占用\">\r\n                      <img v-else :src=\"require('@/assets/seat.png')\" alt=\"未占用\">\r\n                      <div class=\"tit\"><span>{{ col.No }}</span></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <h4>下午</h4>\r\n              <div class=\"seat-list\">\r\n                <div class=\"seat-row\" v-for=\"(row, rowIndex) in SeatArrange.PmSeatDtoList\">\r\n                  <div class=\"seat-col\" v-for=\"(col, colIndex) in row\" :key=\"col.Id\">\r\n                    <div v-if=\"col.Id\" @click=\"ToAppoint(col, 2)\">\r\n                      <img v-if=\"col.IsOccupy\" :src=\"require('@/assets/seatCheck.png')\" alt=\"已占用\">\r\n                      <img v-else :src=\"require('@/assets/seat.png')\" alt=\"未占用\">\r\n                      <div class=\"tit\"><span>{{ col.No }}</span></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <h4>晚上</h4>\r\n              <div class=\"seat-list\">\r\n                <div class=\"seat-row\" v-for=\"(row, rowIndex) in SeatArrange.NmSeatDtoList\">\r\n                  <div class=\"seat-col\" v-for=\"(col, colIndex) in row\" :key=\"col.Id\">\r\n                    <div v-if=\"col.Id\" @click=\"ToAppoint(col, 3)\">\r\n                      <img v-if=\"col.IsOccupy\" :src=\"require('@/assets/seatCheck.png')\" alt=\"已占用\">\r\n                      <img v-else :src=\"require('@/assets/seat.png')\" alt=\"未占用\">\r\n                      <div class=\"tit\"><span>{{ col.No }}</span></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </el-tab-pane>\r\n          <el-tab-pane label=\"使用评价\" name=\"使用评价\">\r\n            <div class=\"comment-list\">\r\n              <div class=\"comment-item\" v-for=\"(item, index) in CommentList\" :key=\"index\">\r\n                <div class=\"comment-header\">\r\n                  <img class=\"head\"\r\n                    :src=\"item.UserDto.ImageUrls ? item.UserDto.ImageUrls : require('@/assets/空头像.png')\">\r\n                  <div class=\"user-info\">\r\n                    <span class=\"name\">{{ item.UserDto.Name }}</span>\r\n                    <el-rate disabled v-model=\"item.CommentScore\"></el-rate>\r\n                  </div>\r\n                </div>\r\n                <div class=\"content\">\r\n                  {{ item.SComment }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport store from '@/store';\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  name: 'Room',\r\n  computed: {\r\n    ...mapGetters(['UserInfo', \"Token\", \"UserId\"])\r\n  },\r\n  data() {\r\n    return {\r\n      activeName: \"选座列表\",\r\n      RoomId: undefined,\r\n      RoomDetail: null,\r\n      DateList: [],\r\n      SeatArrange: null,\r\n      SelectDate: null,\r\n      CommentList: [],\r\n\r\n    }\r\n  },\r\n  created() {\r\n    this.RoomId = this.$route.query.RoomId;\r\n    this.GetRoomApi();\r\n    this.GetSevenDaysApi();\r\n    this.CommentListApi();\r\n\r\n  },\r\n  methods: {\r\n    //得到自习室详情接口\r\n    async GetRoomApi() {\r\n      let { Data } = await this.$Post(\"/Room/Get\", { Id: this.RoomId });\r\n      this.RoomDetail = Data;\r\n    },\r\n    // 得到最近7天\r\n    async GetSevenDaysApi() {\r\n      let { Data } = await this.$Post(\"/Seat/GetSevenDays\", {});\r\n      this.DateList = Data;\r\n      this.SelectDate = this.DateList[0];\r\n      this.GetArrange();\r\n\r\n    },\r\n    // 得到选中日期的座位信息\r\n    // 处理 SeatArrange 数据，使 IsOccpuy 为布尔值\r\n    async GetArrange() {\r\n      let { Data } = await this.$Post('/Seat/GetArrange', { RoomId: this.RoomId, SelectDate: this.SelectDate + \" 00:00:00\" }, { params: { _random: Date.now() } });\r\n      this.SeatArrange = Data;\r\n\r\n      // 将所有座位的 IsOccpuy 转换为布尔值\r\n      this.SeatArrange.AmSeatDtoList.forEach(row => {\r\n        row.forEach(col => {\r\n          col.IsOccpuy = Boolean(col.IsOccpuy); // 确保 IsOccpuy 为布尔值\r\n        });\r\n      });\r\n\r\n      this.SeatArrange.PmSeatDtoList.forEach(row => {\r\n        row.forEach(col => {\r\n          col.IsOccpuy = Boolean(col.IsOccpuy);\r\n        });\r\n      });\r\n\r\n      this.SeatArrange.NmSeatDtoList.forEach(row => {\r\n        row.forEach(col => {\r\n          col.IsOccpuy = Boolean(col.IsOccpuy);\r\n        });\r\n      });\r\n    },\r\n\r\n    // 选中日期\r\n    async handleClick(e) {\r\n      console.log(e);\r\n      this.GetArrange();\r\n    },\r\n    // 返回上一页\r\n    goBack() {\r\n      this.$router.go(-1);\r\n    },\r\n    // 去预约\r\n    async ToAppoint(col, type) {\r\n      if (col.IsOccpuy) {\r\n        return;\r\n      }\r\n      if (!this.Token) {\r\n        this.$message.warning(\"请先登录后再操作\")\r\n        return;\r\n      }\r\n\r\n      let body = {\r\n        RoomId: this.RoomId,\r\n        UserId: this.UserId,\r\n        SeatId: col.Id,\r\n        AppointDateType: type,\r\n        AppointDate: this.SelectDate + \" 00:00:00\"\r\n      };\r\n\r\n\r\n\r\n      let { Success } = await this.$Post(\"/AppointRecord/CheckIsAbleAppoint\", body);\r\n      let tick = new Date().getTime();\r\n      localStorage.setItem(tick, JSON.stringify(body));\r\n\r\n\r\n      if (Success) {\r\n        this.$router.push({\r\n          path: '/Front/ToOrder',\r\n          query: {\r\n            tick: tick\r\n          }\r\n        })\r\n      }\r\n    },\r\n    //查询评论记录\r\n    async CommentListApi() {\r\n      let { Data: { Items } } = await this.$Post(\"/AppointRecord/List\", { RoomId: this.RoomId, AppointStatus: 3 });\r\n      this.CommentList = Items;\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.content {\r\n  font-family: Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 50px;\r\n  color: #333;\r\n}\r\n\r\n.seat-list {\r\n  margin: 0 auto;\r\n}\r\n\r\n.seat-list .seat-row {\r\n  display: flex;\r\n  margin: 0 auto;\r\n  width: fit-content;\r\n  cursor: pointer;\r\n}\r\n\r\n.seat-list .seat-row .seat-col {\r\n  margin-top: 20px;\r\n  margin-right: 20px;\r\n  width: 70px;\r\n  height: 70px;\r\n}\r\n\r\n.seat-list .seat-row .seat-col img {\r\n  width: 40px;\r\n  height: 40px;\r\n  pointer-events: none;\r\n}\r\n\r\n.seat-list .seat-row .seat-col .tit {\r\n  font-weight: bold;\r\n}\r\n\r\n.comment-list {}\r\n\r\n.comment-list .comment-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* 使用列布局 */\r\n  margin-bottom: 20px;\r\n  /* 增加间距 */\r\n}\r\n\r\n.comment-list .comment-item .head {\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  margin-right: 10px;\r\n  /* 头像与用户信息之间的间距 */\r\n}\r\n\r\n.comment-list .comment-item .user-info {\r\n  display: flex;\r\n  align-items: center;\r\n  /* 垂直居中 */\r\n  margin-bottom: 10px;\r\n  /* 用户信息与评论内容之间的间距 */\r\n}\r\n\r\n.comment-list .comment-item .name {\r\n  font-weight: bold;\r\n  color: darkblue;\r\n  margin-right: 10px;\r\n  /* 名字与评分之间的间距 */\r\n}\r\n\r\n.comment-list .comment-item .el-rate {\r\n  /* 评分组件的样式，根据需要调整 */\r\n}\r\n\r\n.comment-list .comment-item .content {\r\n  font-family: Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: #333;\r\n}\r\n</style>"],"mappings":";AAkFA,OAAAA,KAAA;AACA,SAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,QAAA;IACA,GAAAF,UAAA;EACA;EACAG,KAAA;IACA;MACAC,UAAA;MACAC,MAAA,EAAAC,SAAA;MACAC,UAAA;MACAC,QAAA;MACAC,WAAA;MACAC,UAAA;MACAC,WAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAP,MAAA,QAAAQ,MAAA,CAAAC,KAAA,CAAAT,MAAA;IACA,KAAAU,UAAA;IACA,KAAAC,eAAA;IACA,KAAAC,cAAA;EAEA;EACAC,OAAA;IACA;IACA,MAAAH,WAAA;MACA;QAAAI;MAAA,eAAAC,KAAA;QAAAC,EAAA,OAAAhB;MAAA;MACA,KAAAE,UAAA,GAAAY,IAAA;IACA;IACA;IACA,MAAAH,gBAAA;MACA;QAAAG;MAAA,eAAAC,KAAA;MACA,KAAAZ,QAAA,GAAAW,IAAA;MACA,KAAAT,UAAA,QAAAF,QAAA;MACA,KAAAc,UAAA;IAEA;IACA;IACA;IACA,MAAAA,WAAA;MACA;QAAAH;MAAA,eAAAC,KAAA;QAAAf,MAAA,OAAAA,MAAA;QAAAK,UAAA,OAAAA,UAAA;MAAA;QAAAa,MAAA;UAAAC,OAAA,EAAAC,IAAA,CAAAC,GAAA;QAAA;MAAA;MACA,KAAAjB,WAAA,GAAAU,IAAA;;MAEA;MACA,KAAAV,WAAA,CAAAkB,aAAA,CAAAC,OAAA,CAAAC,GAAA;QACAA,GAAA,CAAAD,OAAA,CAAAE,GAAA;UACAA,GAAA,CAAAC,QAAA,GAAAC,OAAA,CAAAF,GAAA,CAAAC,QAAA;QACA;MACA;MAEA,KAAAtB,WAAA,CAAAwB,aAAA,CAAAL,OAAA,CAAAC,GAAA;QACAA,GAAA,CAAAD,OAAA,CAAAE,GAAA;UACAA,GAAA,CAAAC,QAAA,GAAAC,OAAA,CAAAF,GAAA,CAAAC,QAAA;QACA;MACA;MAEA,KAAAtB,WAAA,CAAAyB,aAAA,CAAAN,OAAA,CAAAC,GAAA;QACAA,GAAA,CAAAD,OAAA,CAAAE,GAAA;UACAA,GAAA,CAAAC,QAAA,GAAAC,OAAA,CAAAF,GAAA,CAAAC,QAAA;QACA;MACA;IACA;IAEA;IACA,MAAAI,YAAAC,CAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,CAAA;MACA,KAAAd,UAAA;IACA;IACA;IACAiB,OAAA;MACA,KAAAC,OAAA,CAAAC,EAAA;IACA;IACA;IACA,MAAAC,UAAAZ,GAAA,EAAAa,IAAA;MACA,IAAAb,GAAA,CAAAC,QAAA;QACA;MACA;MACA,UAAAa,KAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,IAAAC,IAAA;QACA1C,MAAA,OAAAA,MAAA;QACA2C,MAAA,OAAAA,MAAA;QACAC,MAAA,EAAAnB,GAAA,CAAAT,EAAA;QACA6B,eAAA,EAAAP,IAAA;QACAQ,WAAA,OAAAzC,UAAA;MACA;MAIA;QAAA0C;MAAA,eAAAhC,KAAA,sCAAA2B,IAAA;MACA,IAAAM,IAAA,OAAA5B,IAAA,GAAA6B,OAAA;MACAC,YAAA,CAAAC,OAAA,CAAAH,IAAA,EAAAI,IAAA,CAAAC,SAAA,CAAAX,IAAA;MAGA,IAAAK,OAAA;QACA,KAAAZ,OAAA,CAAAmB,IAAA;UACAC,IAAA;UACA9C,KAAA;YACAuC,IAAA,EAAAA;UACA;QACA;MACA;IACA;IACA;IACA,MAAApC,eAAA;MACA;QAAAE,IAAA;UAAA0C;QAAA;MAAA,eAAAzC,KAAA;QAAAf,MAAA,OAAAA,MAAA;QAAAyD,aAAA;MAAA;MACA,KAAAnD,WAAA,GAAAkD,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}