{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ValidCode from '@/components/Code/canvas.vue';\nexport default {\n  components: {\n    ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        Email: '',\n        PhoneNumber: '',\n        Name: '',\n        Code: ''\n      },\n      rules: {\n        UserName: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        Password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        Email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱格式',\n          trigger: 'blur'\n        }],\n        PhoneNumber: [{\n          required: true,\n          message: '请输入手机号',\n          trigger: 'blur'\n        }, {\n          validator: (_, value, callback) => {\n            if (!/^1[3 - 9]\\d{9}$/.test(value)) callback(new Error('请输入正确的手机号'));else callback();\n          },\n          trigger: 'blur'\n        }],\n        Name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        Code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          validator: (_, value, callback) => {\n            const code = this.$refs.ValidCode.getCode();\n            if (value !== code) callback(new Error('验证码错误'));else callback();\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.initStarrySky();\n  },\n  methods: {\n    initStarrySky() {\n      const canvas = document.getElementById('starrySky');\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      canvas.style.position = 'fixed';\n      canvas.style.top = '0';\n      canvas.style.left = '0';\n      canvas.style.zIndex = '-1';\n      const centerX = canvas.width / 2;\n      const centerY = canvas.height / 2;\n      const stars = [];\n      const starCount = 200;\n      for (let i = 0; i < starCount; i++) {\n        const radius = Math.random() * Math.min(centerX, centerY);\n        const angle = Math.random() * 2 * Math.PI;\n        stars.push({\n          radius: radius,\n          angle: angle,\n          size: Math.random() * 1.5 + 0.5,\n          speed: Math.random() * 0.005 + 0.001 // 随机旋转速度\n        });\n      }\n      const animate = () => {\n        ctx.fillStyle = '#000033';\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        stars.forEach(star => {\n          star.angle += star.speed;\n          const x = centerX + star.radius * Math.cos(star.angle);\n          const y = centerY + star.radius * Math.sin(star.angle);\n          ctx.beginPath();\n          ctx.arc(x, y, star.size, 0, Math.PI * 2);\n          ctx.fillStyle = '#FFFF00'; // 黄色星星\n          ctx.shadowColor = '#FFFF00';\n          ctx.shadowBlur = star.size * 2;\n          ctx.fill();\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n      window.addEventListener('resize', () => {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n      });\n    },\n    async RegisterBtn() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          this.$message.success('注册成功！');\n          this.$router.push('/Login');\n        } else {\n          this.$message.error('信息填写有误，请检查');\n          this.$refs.ValidCode.refreshCode();\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidCode","components","data","formData","UserName","Password","Email","PhoneNumber","Name","Code","rules","required","message","trigger","type","validator","_","value","callback","test","Error","code","$refs","getCode","mounted","initStarrySky","methods","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","style","position","top","left","zIndex","centerX","centerY","stars","starCount","i","radius","Math","random","min","angle","PI","push","size","speed","animate","fillStyle","fillRect","forEach","star","x","cos","y","sin","beginPath","arc","shadowColor","shadowBlur","fill","requestAnimationFrame","addEventListener","RegisterBtn","loginForm","validate","valid","$message","success","$router","error","refreshCode"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas id=\"starrySky\"></canvas>\n    <div class=\"container\">\n      <div class=\"register-box\">\n        <h2 class=\"welcome-title\">用户注册</h2>\n        <el-form ref=\"loginForm\" :model=\"formData\" label-width=\"80px\" label-position=\"left\" :rules=\"rules\">\n          <el-form-item label=\"账号\" prop=\"UserName\">\n            <el-input type=\"text\" v-model.trim=\"formData.UserName\" placeholder=\"请输入账号\" />\n          </el-form-item>\n          <el-form-item label=\"密码\" prop=\"Password\">\n            <el-input type=\"password\" v-model.trim=\"formData.Password\" placeholder=\"请输入密码\" />\n          </el-form-item>\n          <el-form-item label=\"邮箱\" prop=\"Email\">\n            <el-input type=\"email\" v-model.trim=\"formData.Email\" placeholder=\"请输入邮箱\" />\n          </el-form-item>\n          <el-form-item label=\"联系方式\" prop=\"PhoneNumber\">\n            <el-input type=\"tel\" v-model.trim=\"formData.PhoneNumber\" placeholder=\"请输入11位手机号\" />\n          </el-form-item>\n          <el-form-item label=\"姓名\" prop=\"Name\">\n            <el-input type=\"text\" v-model.trim=\"formData.Name\" placeholder=\"请输入姓名\" />\n          </el-form-item>\n          <el-form-item label=\"验证码\" prop=\"Code\">\n            <div class=\"code-container\">\n              <el-input type=\"text\" v-model.trim=\"formData.Code\" placeholder=\"请输入验证码\" />\n              <div class=\"valid-code\">\n                <ValidCode ref=\"ValidCode\" />\n              </div>\n            </div>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"RegisterBtn\" class=\"register-btn\">注 册</el-button>\n          </el-form-item>\n        </el-form>\n        <div class=\"login-link\">\n          已有账号？<RouterLink :to=\"{ path: '/Login' }\">立即登录</RouterLink>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ValidCode from '@/components/Code/canvas.vue'\n\nexport default {\n  components: { ValidCode },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        Email: '',\n        PhoneNumber: '',\n        Name: '',\n        Code: ''\n      },\n      rules: {\n        UserName: [{ required: true, message: '请输入账号', trigger: 'blur' }],\n        Password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n        Email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n        ],\n        PhoneNumber: [\n          { required: true, message: '请输入手机号', trigger: 'blur' },\n          {\n            validator: (_, value, callback) => {\n              if (!/^1[3 - 9]\\d{9}$/.test(value)) callback(new Error('请输入正确的手机号'));\n              else callback();\n            }, trigger: 'blur'\n          }\n        ],\n        Name: [{ required: true, message: '请输入姓名', trigger: 'blur' }],\n        Code: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            validator: (_, value, callback) => {\n              const code = this.$refs.ValidCode.getCode()\n              if (value !== code) callback(new Error('验证码错误'));\n              else callback();\n            }, trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.initStarrySky()\n  },\n  methods: {\n    initStarrySky() {\n      const canvas = document.getElementById('starrySky')\n      const ctx = canvas.getContext('2d')\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n      canvas.style.position = 'fixed'\n      canvas.style.top = '0'\n      canvas.style.left = '0'\n      canvas.style.zIndex = '-1'\n\n      const centerX = canvas.width / 2\n      const centerY = canvas.height / 2\n      const stars = []\n      const starCount = 200\n\n      for (let i = 0; i < starCount; i++) {\n        const radius = Math.random() * Math.min(centerX, centerY)\n        const angle = Math.random() * 2 * Math.PI\n        stars.push({\n          radius: radius,\n          angle: angle,\n          size: Math.random() * 1.5 + 0.5,\n          speed: (Math.random() * 0.005 + 0.001) // 随机旋转速度\n        })\n      }\n\n      const animate = () => {\n        ctx.fillStyle = '#000033'\n        ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n        stars.forEach(star => {\n          star.angle += star.speed\n          const x = centerX + star.radius * Math.cos(star.angle)\n          const y = centerY + star.radius * Math.sin(star.angle)\n\n          ctx.beginPath()\n          ctx.arc(x, y, star.size, 0, Math.PI * 2)\n          ctx.fillStyle = '#FFFF00' // 黄色星星\n          ctx.shadowColor = '#FFFF00'\n          ctx.shadowBlur = star.size * 2\n          ctx.fill()\n        })\n\n        requestAnimationFrame(animate)\n      }\n\n      animate()\n\n      window.addEventListener('resize', () => {\n        canvas.width = window.innerWidth\n        canvas.height = window.innerHeight\n      })\n    },\n    async RegisterBtn() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n          this.$message.success('注册成功！')\n          this.$router.push('/Login')\n        } else {\n          this.$message.error('信息填写有误，请检查')\n          this.$refs.ValidCode.refreshCode()\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.register-box {\n  background: rgba(255, 255, 255, 0.95);\n  padding: 40px 50px;\n  border-radius: 15px;\n  box-shadow: 0 12px 30px rgba(0, 0, 51, 0.2);\n  width: 420px;\n}\n\n.welcome-title {\n  font-size: 24px;\n  font-weight: 600;\n  color: #000033;\n  text-align: center;\n  margin-bottom: 30px;\n  letter-spacing: 1px;\n}\n\n.el-form-item {\n  margin-bottom: 20px;\n}\n\n.el-input__inner {\n  height: 44px;\n  border-radius: 8px;\n  border: 1px solid #e0e6ed;\n  font-size: 15px;\n  transition: all 0.3s ease;\n}\n\n.el-input__inner:focus {\n  border-color: #4f6d7a;\n  box-shadow: 0 0 0 3px rgba(79, 109, 122, 0.1);\n}\n\n.code-container {\n  display: flex;\n  gap: 15px;\n}\n\n.valid-code {\n  flex-shrink: 0;\n  width: 120px;\n  height: 44px;\n  border-radius: 8px;\n  overflow: hidden;\n}\n\n.register-btn {\n  height: 48px;\n  font-size: 16px;\n  border-radius: 8px;\n  background-color: #4f6d7a;\n  border: none;\n  transition: all 0.3s ease;\n}\n\n.register-btn:hover {\n  background-color: #6a8b9a;\n  transform: translateY(-2px);\n}\n\n.login-link {\n  text-align: center;\n  margin-top: 20px;\n  font-size: 14px;\n  color: #666;\n}\n\n.login-link RouterLink {\n  color: #4f6d7a;\n  font-weight: 500;\n  margin-left: 5px;\n  transition: color 0.3s ease;\n}\n\n.login-link RouterLink:hover {\n  color: #6a8b9a;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}