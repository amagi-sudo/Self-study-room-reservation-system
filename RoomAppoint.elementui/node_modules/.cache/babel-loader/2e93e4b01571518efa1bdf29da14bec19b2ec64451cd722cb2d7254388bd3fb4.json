{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { getToken, setToken, removeToken } from '@/utils/cache.js';\nimport { Post } from '@/api/http.js';\nVue.use(Vuex);\nconst getDefaultState = () => {\n  return {\n    Token: getToken(),\n    UserInfo: null,\n    RoleType: undefined,\n    HasUserInfo: false,\n    ColumnType: {\n      \"PHONE\": '1',\n      \"DATE\": '2',\n      \"DATETIME\": '3',\n      \"USERDEFINED\": '4',\n      \"DATESET\": '5',\n      \"JSON\": '6',\n      \"LONGTEXT\": '7',\n      \"SHORTTEXT\": '8',\n      \"SPLIT\": '9',\n      \"POPOVER\": '10',\n      \"HIDDEN\": '11',\n      \"IMAGES\": '12',\n      \"VIDEO\": \"13\",\n      \"CUSTOM\": \"14\",\n      \"AUDIO\": \"15\",\n      \"LINK\": \"16\",\n      \"IMAGE\": \"17\",\n      \"RICHTEXT\": \"18\",\n      \"FILESLINK\": \"19\",\n      \"BARCODE\": \"20\",\n      \"JUDGMENTTAG\": \"21\"\n    }\n  };\n};\nconst store = new Vuex.Store({\n  //  modules: {\n\n  state: getDefaultState(),\n  mutations: {\n    SET_TOKEN: (state, Token) => {\n      state.Token = Token;\n    },\n    SET_USER_INFO: (state, UserInfo) => {\n      state.UserInfo = UserInfo;\n      state.HasUserInfo = UserInfo != null;\n    },\n    SET_ROLE_TYPE: (state, RoleType) => {\n      state.RoleType = RoleType;\n    }\n  },\n  actions: {\n    //登录获取用户的token\n    async Login({\n      commit\n    }, UserInfo) {\n      let res = await Post(\"/User/SignIn\", UserInfo);\n      if (res.Success) {\n        commit('SET_TOKEN', res.Data);\n        setToken(res.Data);\n      }\n      return res;\n    },\n    // 根据token获取用户的信息\n    async GetInfo({\n      commit,\n      state\n    }) {\n      let res = await Post(\"/User/GetByToken\", {});\n      commit(\"SET_USER_INFO\", res.Data);\n      commit(\"SET_ROLE_TYPE\", res.Data.RoleTypeFormat);\n    },\n    //退出登录\n    async Logout({\n      commit\n    }, UserInfo) {\n      removeToken();\n      commit('SET_TOKEN', null);\n      commit(\"SET_USER_INFO\", null);\n      commit(\"SET_ROLE_TYPE\", null);\n    }\n  },\n  getters: {\n    Token: state => state.Token,\n    UserInfo: state => state.UserInfo,\n    RoleType: state => state.RoleType,\n    HasUserInfo: state => state.HasUserInfo,\n    ColumnType: state => state.ColumnType,\n    UserId: state => state.UserInfo && state.UserInfo.Id\n  }\n});\nexport default store;","map":{"version":3,"names":["Vue","Vuex","getToken","setToken","removeToken","Post","use","getDefaultState","Token","UserInfo","RoleType","undefined","HasUserInfo","ColumnType","store","Store","state","mutations","SET_TOKEN","SET_USER_INFO","SET_ROLE_TYPE","actions","Login","commit","res","Success","Data","GetInfo","RoleTypeFormat","Logout","getters","UserId","Id"],"sources":["D:/自习室预约系统/RoomAppoint.elementui/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { getToken, setToken, removeToken } from '@/utils/cache.js'\r\nimport { Post } from '@/api/http.js'\r\n\r\nVue.use(Vuex)\r\n\r\nconst getDefaultState = () => {\r\n    return {\r\n        Token: getToken(),\r\n        UserInfo: null,\r\n        RoleType: undefined,\r\n        HasUserInfo: false,\r\n        ColumnType: {\r\n            \"PHONE\": '1',\r\n            \"DATE\": '2',\r\n            \"DATETIME\": '3',\r\n            \"USERDEFINED\": '4',\r\n            \"DATESET\": '5',\r\n            \"JSON\": '6',\r\n            \"LONGTEXT\": '7',\r\n            \"SHORTTEXT\": '8',\r\n            \"SPLIT\": '9',\r\n            \"POPOVER\": '10',\r\n            \"HIDDEN\": '11',\r\n            \"IMAGES\": '12',\r\n            \"VIDEO\": \"13\",\r\n            \"CUSTOM\": \"14\",\r\n            \"AUDIO\": \"15\",\r\n            \"LINK\": \"16\",\r\n            \"IMAGE\": \"17\",\r\n            \"RICHTEXT\": \"18\",\r\n            \"FILESLINK\": \"19\",\r\n            \"BARCODE\": \"20\",\r\n            \"JUDGMENTTAG\": \"21\"\r\n        }\r\n    }\r\n}\r\n\r\nconst store = new Vuex.Store({\r\n    //  modules: {\r\n\r\n    state: getDefaultState(),\r\n    mutations: {\r\n        SET_TOKEN: (state, Token) => {\r\n            state.Token = Token\r\n        },\r\n        SET_USER_INFO: (state, UserInfo) => {\r\n            state.UserInfo = UserInfo;\r\n            state.HasUserInfo = UserInfo != null;\r\n        },\r\n        SET_ROLE_TYPE: (state, RoleType) => {\r\n            state.RoleType = RoleType;\r\n\r\n        },\r\n\r\n\r\n    },\r\n    actions: {\r\n\r\n        //登录获取用户的token\r\n        async Login({ commit }, UserInfo) {\r\n\r\n            let res = await Post(\"/User/SignIn\", UserInfo);\r\n\r\n            if (res.Success) {\r\n                commit('SET_TOKEN', res.Data);\r\n                setToken(res.Data)\r\n            }\r\n            return res;\r\n        },\r\n\r\n        // 根据token获取用户的信息\r\n        async GetInfo({ commit, state }) {\r\n            let res = await Post(\"/User/GetByToken\", {});\r\n\r\n            commit(\"SET_USER_INFO\", res.Data);\r\n            commit(\"SET_ROLE_TYPE\", res.Data.RoleTypeFormat);\r\n\r\n        },\r\n\r\n        //退出登录\r\n        async Logout({ commit }, UserInfo) {\r\n\r\n            removeToken();\r\n            commit('SET_TOKEN', null);\r\n            commit(\"SET_USER_INFO\", null);\r\n            commit(\"SET_ROLE_TYPE\", null);\r\n        },\r\n    },\r\n\r\n    getters: {\r\n        Token: state => state.Token,\r\n        UserInfo: state => state.UserInfo,\r\n        RoleType: state => state.RoleType,\r\n        HasUserInfo: state => state.HasUserInfo,\r\n        ColumnType: state => state.ColumnType,\r\n        UserId: state => state.UserInfo && state.UserInfo.Id,\r\n    }\r\n})\r\n\r\nexport default store\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}