{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ValidCode from '@/components/Code/canvas.vue';\nimport store from '@/store';\nexport default {\n  components: {\n    ValidCode: ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        RoleType: \"\",\n        Code: \"\"\n      },\n      roleOptions: [],\n      rules: {\n        UserName: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        Password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        RoleType: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }],\n        Code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            let identifyCode = this.$refs.ValidCode.getCode();\n            if (value != identifyCode) {\n              callback(new Error('请输入正确的验证码'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.GetRoleTypeApi();\n  },\n  mounted() {\n    this.initStarrySky();\n  },\n  beforeDestroy() {\n    if (this.starrySkyAnimation) {\n      cancelAnimationFrame(this.starrySkyAnimation);\n    }\n  },\n  methods: {\n    async GetRoleTypeApi() {\n      let {\n        Data: {\n          Items\n        }\n      } = await this.$Post(\"/Select/RoleType\");\n      this.roleOptions = Items;\n    },\n    LoginBtn() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          let res = await store.dispatch(\"Login\", this.formData);\n          if (res.Success) {\n            this.$message.success(\"登录成功!\");\n            this.$router.push({\n              path: \"/Admin\"\n            });\n          } else {\n            this.$refs.ValidCode.refreshCode();\n          }\n        } else {\n          this.$message.error(\"登录验证不通过\");\n          this.$refs.ValidCode.refreshCode();\n          return false;\n        }\n      });\n    },\n    // 去往前台\n    ToHome() {\n      this.$router.push({\n        path: \"/Front/Home\"\n      });\n    },\n    initStarrySky() {\n      const canvas = document.getElementById('starrySky');\n      const ctx = canvas.getContext('2d');\n      const width = canvas.width = window.innerWidth;\n      const height = canvas.height = window.innerHeight;\n      class Star {\n        constructor() {\n          this.x = Math.random() * width;\n          this.y = Math.random() * height;\n          this.size = Math.random() * 2;\n          this.speedX = Math.random() * 3 - 1.5;\n          this.speedY = Math.random() * 3 - 1.5;\n        }\n        update() {\n          this.x += this.speedX;\n          this.y += this.speedY;\n          if (this.x > width || this.x < 0) this.speedX = -this.speedX;\n          if (this.y > height || this.y < 0) this.speedY = -this.speedY;\n        }\n        draw() {\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n          ctx.fillStyle = '#FFFF00';\n          ctx.fill();\n        }\n      }\n      const stars = Array(200).fill(0).map(() => new Star());\n      function animate() {\n        ctx.fillStyle = '#000033';\n        ctx.fillRect(0, 0, width, height);\n        stars.forEach(star => {\n          star.update();\n          star.draw();\n        });\n        this.starrySkyAnimation = requestAnimationFrame(animate);\n      }\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["ValidCode","store","components","data","formData","UserName","Password","RoleType","Code","roleOptions","rules","required","message","trigger","validator","rule","value","callback","identifyCode","$refs","getCode","Error","created","GetRoleTypeApi","mounted","initStarrySky","beforeDestroy","starrySkyAnimation","cancelAnimationFrame","methods","Data","Items","$Post","LoginBtn","loginForm","validate","valid","res","dispatch","Success","$message","success","$router","push","path","refreshCode","error","ToHome","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","Star","constructor","x","Math","random","y","size","speedX","speedY","update","draw","beginPath","arc","PI","fillStyle","fill","stars","Array","map","animate","fillRect","forEach","star","requestAnimationFrame"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas id=\"starrySky\"></canvas>\n    <div style=\"height: 100vh; display: flex; align-items: center; justify-content: center;\">\n      <div style=\"display: flex; justify-content: center; background-color: white; padding: 15px; border-radius: 10px;\">\n        <div style=\"flex: 1\">\n          <img style=\"width: 500px; border-radius: 5px;\" src=\"@/assets/hongxing.jpg\">\n        </div>\n        <div style=\"flex: 1; margin-left: 30px; display: flex; flex-direction: column; justify-content: space-between;\">\n          <div style=\"width: 450px\">\n            <h2 class=\"welcome-title\">欢迎您~来到诚凛自习室预约系统</h2>\n            <el-form style=\"margin-top: 25px\" ref=\"loginForm\" :model=\"formData\" label-width=\"70px\" label-position=\"left\"\n              :rules=\"rules\">\n              <el-form-item label=\"账号\" prop=\"UserName\">\n                <el-input type=\"text\" v-model.trim=\"formData.UserName\" placeholder=\"请输入账号\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"密码\" prop=\"Password\">\n                <el-input type=\"password\" v-model.trim=\"formData.Password\" placeholder=\"请输入密码\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"角色\" prop=\"RoleType\">\n                <el-radio-group v-model=\"formData.RoleType\">\n                  <el-radio v-for=\"(item, index) in roleOptions\" :key=\"item.Code\" :label=\"item.Code\">{{ item.Label\n                    }}</el-radio>\n                </el-radio-group>\n              </el-form-item>\n              <el-form-item label=\"验证码\" prop=\"Code\">\n                <div style=\"display: flex;\">\n                  <el-input text=\"Code\" v-model.trim=\"formData.Code\" placeholder=\"请输入验证码\"></el-input>\n                  <div style=\"margin-left: 10px\">\n                    <ValidCode ref=\"ValidCode\"></ValidCode>\n                  </div>\n                </div>\n              </el-form-item>\n              <el-form-item>\n                <el-button style=\"width: 180px;\" type=\"primary\" @click=\"LoginBtn\">登 录</el-button>\n              </el-form-item>\n              <el-form-item>\n                <el-button style=\"width: 180px;\" type=\"danger\" @click=\"ToHome\">前 台</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n          <div style=\"display: flex; justify-content: space-between;\">\n            <div>\n              <span>如果没有账号可以</span>\n              <RouterLink :to=\"{ path: '/Register' }\"><span style=\"padding-left: 10px; color: #F98C54;\"\n                  class=\"pointer\">立即注册</span></RouterLink>\n            </div>\n            <div><span style=\"color: palevioletred\" class=\"pointer\">忘记密码</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ValidCode from '@/components/Code/canvas.vue'\nimport store from '@/store';\n\nexport default {\n  components: {\n    ValidCode: ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        RoleType: \"\",\n        Code: \"\"\n      },\n      roleOptions: [],\n      rules: {\n        UserName: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        Password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ],\n        RoleType: [\n          { required: true, message: '请选择角色', trigger: 'blur' },\n        ],\n        Code: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              let identifyCode = this.$refs.ValidCode.getCode();\n              if (value != identifyCode) {\n                callback(new Error('请输入正确的验证码'));\n              } else {\n                callback();\n              }\n            },\n            trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  created() {\n    this.GetRoleTypeApi();\n  },\n  mounted() {\n    this.initStarrySky();\n  },\n  beforeDestroy() {\n    if (this.starrySkyAnimation) {\n      cancelAnimationFrame(this.starrySkyAnimation);\n    }\n  },\n  methods: {\n    async GetRoleTypeApi() {\n      let { Data: { Items } } = await this.$Post(\"/Select/RoleType\");\n      this.roleOptions = Items;\n    },\n    LoginBtn() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n          let res = await store.dispatch(\"Login\", this.formData);\n          if (res.Success) {\n            this.$message.success(\"登录成功!\");\n            this.$router.push({\n              path: \"/Admin\"\n            });\n          } else {\n            this.$refs.ValidCode.refreshCode();\n          }\n        } else {\n          this.$message.error(\"登录验证不通过\");\n          this.$refs.ValidCode.refreshCode();\n          return false;\n        }\n      });\n    },\n    // 去往前台\n    ToHome() {\n      this.$router.push({\n        path: \"/Front/Home\"\n      });\n    },\n    initStarrySky() {\n      const canvas = document.getElementById('starrySky');\n      const ctx = canvas.getContext('2d');\n      const width = canvas.width = window.innerWidth;\n      const height = canvas.height = window.innerHeight;\n\n      class Star {\n        constructor() {\n          this.x = Math.random() * width;\n          this.y = Math.random() * height;\n          this.size = Math.random() * 2;\n          this.speedX = Math.random() * 3 - 1.5;\n          this.speedY = Math.random() * 3 - 1.5;\n        }\n\n        update() {\n          this.x += this.speedX;\n          this.y += this.speedY;\n          if (this.x > width || this.x < 0) this.speedX = -this.speedX;\n          if (this.y > height || this.y < 0) this.speedY = -this.speedY;\n        }\n\n        draw() {\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n          ctx.fillStyle = '#FFFF00';\n          ctx.fill();\n        }\n      }\n\n      const stars = Array(200).fill(0).map(() => new Star());\n\n      function animate() {\n        ctx.fillStyle = '#000033';\n        ctx.fillRect(0, 0, width, height);\n        stars.forEach(star => {\n          star.update();\n          star.draw();\n        });\n        this.starrySkyAnimation = requestAnimationFrame(animate);\n      }\n\n      animate();\n    }\n  }\n}\n</script>\n\n<style scoped>\n.welcome-title {\n  font-size: 28px;\n  font-weight: bold;\n  background: linear-gradient(90deg, #4f6d7a, #6a8b9a, #8b9bb7, #a2c1d6);\n  -webkit-background-clip: text;\n  color: transparent;\n  text-align: center;\n  margin-bottom: 20px;\n  letter-spacing: 2px;\n}\n\n#starrySky {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}