{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport store from '@/store';\nimport { mapGetters } from 'vuex';\nimport * as THREE from 'three';\nexport default {\n  data() {\n    return {\n      active: 'home'\n    };\n  },\n  mounted() {\n    // 初始化canvas绘制和图形动画\n    this.initCanvas();\n    console.log(this.UserInfo);\n  },\n  computed: {\n    ...mapGetters([\"UserInfo\", \"Token\"])\n  },\n  methods: {\n    ToLogin() {\n      // 跳转到登录页面\n      this.$router.push({\n        path: '/Login'\n      });\n    },\n    ToRegister() {\n      // 跳转到注册页面\n      this.$router.push({\n        path: '/Register'\n      });\n    },\n    async LoginOut() {\n      // 登出操作，调用store中的Logout方法，并跳转到登录页面\n      await this.$store.dispatch('Logout');\n      this.$router.push(`/Login`);\n    },\n    async ToPath(url) {\n      // 通用的页面跳转方法\n      this.$router.push({\n        path: url\n      });\n    },\n    async ToUserInfo() {\n      // 跳转到个人信息页面\n      this.$router.push({\n        path: \"/Front/UserPerson\"\n      });\n    },\n    async ToEditPassword() {\n      // 跳转到修改密码页面\n      this.$router.push({\n        path: \"/Front/PasswordEdit\"\n      });\n    },\n    goBack() {\n      // 返回上一个页面\n      this.$router.go(-1);\n    },\n    initCanvas() {\n      const canvas = document.getElementById('backgroundCanvas');\n      const renderer = new THREE.WebGLRenderer({\n        canvas\n      });\n      const scene = new THREE.Scene();\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 5;\n\n      // 定义图形类，包含位置和速度属性，以及更新和绘制方法\n      class Shape {\n        constructor(x, y, z, speedX, speedY, speedZ) {\n          this.x = x;\n          this.y = y;\n          this.z = z;\n          this.speedX = speedX;\n          this.speedY = speedY;\n          this.speedZ = speedZ;\n        }\n        update() {\n          this.x += this.speedX;\n          this.y += this.speedY;\n          this.z += this.speedZ;\n\n          // 简单边界碰撞检测\n          if (this.x < -5 || this.x > 5) {\n            this.speedX = -this.speedX;\n          }\n          if (this.y < -5 || this.y > 5) {\n            this.speedY = -this.speedY;\n          }\n          if (this.z < -5 || this.z > 5) {\n            this.speedZ = -this.speedZ;\n          }\n        }\n        draw() {\n          // 绘制圆形（示例，保留原2D圆形绘制方式）\n          const geometry = new THREE.CircleGeometry(0.5);\n          const material = new THREE.MeshBasicMaterial({\n            color: 0x00001e,\n            opacity: 0.5,\n            transparent: true\n          });\n          const mesh = new THREE.Mesh(geometry, material);\n          mesh.position.set(this.x, this.y, this.z);\n          scene.add(mesh);\n\n          // 绘制正方体\n          const cubeGeometry = new THREE.BoxGeometry(0.5);\n          const cubeMaterial = new THREE.MeshBasicMaterial({\n            color: 0x00001e,\n            opacity: 0.5,\n            transparent: true\n          });\n          const cubeMesh = new THREE.Mesh(cubeGeometry, cubeMaterial);\n          cubeMesh.position.set(this.x, this.y, this.z);\n          scene.add(cubeMesh);\n\n          // 绘制三棱锥\n          const tetrahedronGeometry = new THREE.TetrahedronGeometry(0.5);\n          const tetrahedronMaterial = new THREE.MeshBasicMaterial({\n            color: 0x00001e,\n            opacity: 0.5,\n            transparent: true\n          });\n          const tetrahedronMesh = new THREE.Mesh(tetrahedronGeometry, tetrahedronMaterial);\n          tetrahedronMesh.position.set(this.x, this.y, this.z);\n          scene.add(tetrahedronMesh);\n        }\n      }\n      const shapes = [];\n      const numShapes = 10;\n      for (let i = 0; i < numShapes; i++) {\n        const x = Math.random() * 4 - 2;\n        const y = Math.random() * 4 - 2;\n        const z = Math.random() * 4 - 2;\n        const speedX = Math.random() * 0.1 - 0.05;\n        const speedY = Math.random() * 0.1 - 0.05;\n        const speedZ = Math.random() * 0.1 - 0.05;\n        shapes.push(new Shape(x, y, z, speedX, speedY, speedZ));\n      }\n      const animate = () => {\n        requestAnimationFrame(animate);\n        renderer.render(scene, camera);\n        scene.children.forEach(child => scene.remove(child));\n        shapes.forEach(shape => {\n          shape.update();\n          shape.draw();\n        });\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["store","mapGetters","THREE","data","active","mounted","initCanvas","console","log","UserInfo","computed","methods","ToLogin","$router","push","path","ToRegister","LoginOut","$store","dispatch","ToPath","url","ToUserInfo","ToEditPassword","goBack","go","canvas","document","getElementById","renderer","WebGLRenderer","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","Shape","constructor","x","y","speedX","speedY","speedZ","update","draw","geometry","CircleGeometry","material","MeshBasicMaterial","color","opacity","transparent","mesh","Mesh","set","add","cubeGeometry","BoxGeometry","cubeMaterial","cubeMesh","tetrahedronGeometry","TetrahedronGeometry","tetrahedronMaterial","tetrahedronMesh","shapes","numShapes","i","Math","random","animate","requestAnimationFrame","render","children","forEach","child","remove","shape"],"sources":["src/views/Front/Layout/index.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-container>\r\n      <!-- 头部导航栏，设置半透明深灰色背景，调整样式使颜色统一 -->\r\n      <el-header\r\n        style=\"background-color: rgba(51, 51, 51, 0.8); display: flex; justify-content: space-between; align-items: center;\">\r\n        <div>\r\n          <el-menu :default-active=\"active\" class=\"main-container\" mode=\"horizontal\" text-color=\"purpleblue\"\r\n            active-text-color=\"white\">\r\n            <el-menu-item @click=\"ToPath('/Front/Home')\">\r\n              <img style=\"height: 60px;object-fit: cover;\" :src=\"require('@/assets/white.jpg')\">\r\n            </el-menu-item>\r\n            <el-menu-item index=\"/Front/Home\" @click=\"ToPath('/Front/Home')\">IKUN 自习室预约</el-menu-item>\r\n          </el-menu>\r\n        </div>\r\n        <div>\r\n          <el-menu :default-active=\"active\" class=\"main-container\" mode=\"horizontal\" text-color=\"purpleblue\"\r\n            active-text-color=\"white\">\r\n            <el-menu-item style=\"float: right;\" v-if=\"!Token\" @click=\"ToRegister()\">注册</el-menu-item>\r\n            <el-menu-item style=\"float: right;\" v-if=\"!Token\" @click=\"ToLogin()\">登录</el-menu-item>\r\n            <el-submenu style=\"float: right;font-weight: bold;\" v-if=\"Token\" index=\"userMenu\">\r\n              <template slot=\"title\">{{ UserInfo.UserName }}</template>\r\n              <el-menu-item index=\"user个人信息\" @click=\"ToUserInfo()\">个人信息</el-menu-item>\r\n              <el-menu-item index=\"user修改密码\" @click=\"ToEditPassword()\">修改密码</el-menu-item>\r\n              <el-menu-item index=\"user退出\" @click=\"LoginOut()\">退出</el-menu-item>\r\n            </el-submenu>\r\n            <el-menu-item style=\"float: right;\" index=\"/Front/AppointRecordList\"\r\n              @click=\"ToPath('/Front/AppointRecordList')\" v-if=\"Token\">我的预约记录</el-menu-item>\r\n            <el-menu-item style=\"float: right;\" index=\"/Front/IntegralList\" @click=\"ToPath('/Front/IntegralList')\"\r\n              v-if=\"Token\">我的积分</el-menu-item>\r\n          </el-menu>\r\n        </div>\r\n      </el-header>\r\n\r\n      <el-main class=\"main-container main-box\">\r\n        <!-- 用于绘制图形的canvas元素，设置了固定定位，覆盖在页面内容之上，并调整了位置和高度 -->\r\n        <canvas id=\"backgroundCanvas\"\r\n          style=\"position: fixed; top: 64px; left: 0; width: 100%; height: calc(100vh - 144px); z-index: -1;\"></canvas>\r\n        <transition name=\"page-fade\" mode=\"out-in\">\r\n          <router-view :key=\"$route.fullPath\"></router-view>\r\n        </transition>\r\n      </el-main>\r\n\r\n      <!-- 底部栏，设置半透明深灰色背景，缩小高度并与白色背景有间距 -->\r\n      <el-footer\r\n        style=\"background-color: rgba(51, 51, 51, 0.8); height: 60px; display: flex; align-items: center; justify-content: center; margin-top: 20px;\">\r\n        <div style=\"color: aliceblue; font-weight: bold;\">\r\n          系统归属于IKUN团队，版权所有 ©2024 - 2025 IKUN团队\r\n        </div>\r\n      </el-footer>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport store from '@/store';\r\nimport { mapGetters } from 'vuex';\r\nimport * as THREE from 'three';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      active: 'home',\r\n    }\r\n  },\r\n  mounted() {\r\n    // 初始化canvas绘制和图形动画\r\n    this.initCanvas();\r\n    console.log(this.UserInfo);\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"UserInfo\", \"Token\"])\r\n  },\r\n  methods: {\r\n    ToLogin() {\r\n      // 跳转到登录页面\r\n      this.$router.push({ path: '/Login' })\r\n    },\r\n    ToRegister() {\r\n      // 跳转到注册页面\r\n      this.$router.push({ path: '/Register' })\r\n    },\r\n    async LoginOut() {\r\n      // 登出操作，调用store中的Logout方法，并跳转到登录页面\r\n      await this.$store.dispatch('Logout');\r\n      this.$router.push(`/Login`);\r\n    },\r\n    async ToPath(url) {\r\n      // 通用的页面跳转方法\r\n      this.$router.push({ path: url });\r\n    },\r\n    async ToUserInfo() {\r\n      // 跳转到个人信息页面\r\n      this.$router.push({ path: \"/Front/UserPerson\" })\r\n    },\r\n    async ToEditPassword() {\r\n      // 跳转到修改密码页面\r\n      this.$router.push({ path: \"/Front/PasswordEdit\" })\r\n    },\r\n    goBack() {\r\n      // 返回上一个页面\r\n      this.$router.go(-1);\r\n    },\r\n    initCanvas() {\r\n      const canvas = document.getElementById('backgroundCanvas');\r\n      const renderer = new THREE.WebGLRenderer({ canvas });\r\n      const scene = new THREE.Scene();\r\n      const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n      camera.position.z = 5;\r\n\r\n      // 定义图形类，包含位置和速度属性，以及更新和绘制方法\r\n      class Shape {\r\n        constructor(x, y, z, speedX, speedY, speedZ) {\r\n          this.x = x;\r\n          this.y = y;\r\n          this.z = z;\r\n          this.speedX = speedX;\r\n          this.speedY = speedY;\r\n          this.speedZ = speedZ;\r\n        }\r\n\r\n        update() {\r\n          this.x += this.speedX;\r\n          this.y += this.speedY;\r\n          this.z += this.speedZ;\r\n\r\n          // 简单边界碰撞检测\r\n          if (this.x < -5 || this.x > 5) {\r\n            this.speedX = -this.speedX;\r\n          }\r\n          if (this.y < -5 || this.y > 5) {\r\n            this.speedY = -this.speedY;\r\n          }\r\n          if (this.z < -5 || this.z > 5) {\r\n            this.speedZ = -this.speedZ;\r\n          }\r\n        }\r\n\r\n        draw() {\r\n          // 绘制圆形（示例，保留原2D圆形绘制方式）\r\n          const geometry = new THREE.CircleGeometry(0.5);\r\n          const material = new THREE.MeshBasicMaterial({ color: 0x00001e, opacity: 0.5, transparent: true });\r\n          const mesh = new THREE.Mesh(geometry, material);\r\n          mesh.position.set(this.x, this.y, this.z);\r\n          scene.add(mesh);\r\n\r\n          // 绘制正方体\r\n          const cubeGeometry = new THREE.BoxGeometry(0.5);\r\n          const cubeMaterial = new THREE.MeshBasicMaterial({ color: 0x00001e, opacity: 0.5, transparent: true });\r\n          const cubeMesh = new THREE.Mesh(cubeGeometry, cubeMaterial);\r\n          cubeMesh.position.set(this.x, this.y, this.z);\r\n          scene.add(cubeMesh);\r\n\r\n          // 绘制三棱锥\r\n          const tetrahedronGeometry = new THREE.TetrahedronGeometry(0.5);\r\n          const tetrahedronMaterial = new THREE.MeshBasicMaterial({ color: 0x00001e, opacity: 0.5, transparent: true });\r\n          const tetrahedronMesh = new THREE.Mesh(tetrahedronGeometry, tetrahedronMaterial);\r\n          tetrahedronMesh.position.set(this.x, this.y, this.z);\r\n          scene.add(tetrahedronMesh);\r\n        }\r\n      }\r\n\r\n      const shapes = [];\r\n      const numShapes = 10;\r\n\r\n      for (let i = 0; i < numShapes; i++) {\r\n        const x = (Math.random() * 4 - 2);\r\n        const y = (Math.random() * 4 - 2);\r\n        const z = (Math.random() * 4 - 2);\r\n        const speedX = (Math.random() * 0.1 - 0.05);\r\n        const speedY = (Math.random() * 0.1 - 0.05);\r\n        const speedZ = (Math.random() * 0.1 - 0.05);\r\n        shapes.push(new Shape(x, y, z, speedX, speedY, speedZ));\r\n      }\r\n\r\n      const animate = () => {\r\n        requestAnimationFrame(animate);\r\n\r\n        renderer.render(scene, camera);\r\n\r\n        scene.children.forEach(child => scene.remove(child));\r\n\r\n        shapes.forEach(shape => {\r\n          shape.update();\r\n          shape.draw();\r\n        });\r\n      };\r\n\r\n      animate();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 原有样式保留 */\r\n.main-container {\r\n  width: 1300px;\r\n  margin: 0 auto;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-menu {\r\n  background-color: rgba(51, 51, 51, 0.8);\r\n}\r\n\r\n.el-menu-item.is-active {\r\n  background-color: #409EFF !important;\r\n  color: #fff !important;\r\n  text-shadow: 0 0 5px #ff00ff, 0 0 10px #ff00ff;\r\n}\r\n\r\n.main-box {\r\n  min-height: calc(100vh - 144px);\r\n  /* 调整高度适应底部 */\r\n}\r\n\r\n.el-main {\r\n  padding: 0 !important;\r\n}\r\n\r\n/* 新增页面过渡效果 */\r\n.page-fade-enter-active,\r\n.page-fade-leave-active {\r\n  transition: all 0.25s ease;\r\n}\r\n\r\n.page-fade-enter,\r\n.page-fade-leave-to {\r\n  opacity: 0;\r\n  transform: translateX(30px);\r\n}\r\n\r\n/* 菜单项过渡效果 */\r\n.el-menu-item {\r\n  transition:\r\n    opacity 0.3s ease,\r\n    transform 0.3s ease;\r\n}\r\n\r\n.el-menu-item:not(.is-active):hover {\r\n  opacity: 0.8;\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.el-submenu__title {\r\n  transition: opacity 0.3s ease;\r\n}\r\n\r\n.el-submenu:hover .el-submenu__title {\r\n  opacity: 0.9;\r\n}\r\n\r\n/* 白色背景透明度调整为0.8 */\r\n.router-view {\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}