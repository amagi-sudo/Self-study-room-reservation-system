{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ValidCode from '@/components/Code/canvas.vue';\nimport store from '@/store';\nexport default {\n  components: {\n    ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        Email: '',\n        PhoneNumber: '',\n        Name: '',\n        Code: ''\n      },\n      rules: {\n        UserName: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        Password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        Email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱格式',\n          trigger: 'blur'\n        }],\n        PhoneNumber: [{\n          required: true,\n          message: '请输入11位手机号',\n          trigger: 'blur'\n        }, {\n          validator: (_, value, callback) => {\n            if (!/^1[3-9]\\d{9}$/.test(value)) callback(new Error('请输入正确的手机号'));else callback();\n          },\n          trigger: 'blur'\n        }],\n        Name: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }],\n        Code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          validator: (_, value, callback) => {\n            const code = this.$refs.ValidCode.getCode();\n            if (value !== code) callback(new Error('验证码错误'));else callback();\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.initStarrySky();\n  },\n  methods: {\n    initStarrySky() {\n      const canvas = document.getElementById('starrySky');\n      const ctx = canvas.getContext('2d');\n      const width = canvas.width = window.innerWidth;\n      const height = canvas.height = window.innerHeight;\n      const centerX = width / 2;\n      const centerY = height / 2;\n      class Star {\n        constructor() {\n          this.radius = Math.random() * 200 + 100; // 半径范围100-300px\n          this.angle = Math.random() * 2 * Math.PI;\n          this.speed = (Math.random() * 2 + 1) * 0.01; // 角速度\n          this.size = Math.random() * 2 + 1; // 星星大小\n          this.color = `hsl(${Math.random() * 360}, 100%, 80%)`; // 随机颜色\n        }\n        update() {\n          this.angle += this.speed;\n          this.x = centerX + this.radius * Math.cos(this.angle);\n          this.y = centerY + this.radius * Math.sin(this.angle);\n        }\n        draw() {\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n          ctx.fillStyle = this.color;\n          ctx.fill();\n        }\n      }\n      const stars = Array(300).fill(0).map(() => new Star());\n      function animate() {\n        ctx.fillStyle = '#000022';\n        ctx.fillRect(0, 0, width, height);\n        stars.forEach(star => {\n          star.update();\n          star.draw();\n        });\n        requestAnimationFrame(animate);\n      }\n      animate();\n    },\n    async RegisterBtn() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          // 这里替换为实际注册接口\n          const res = {\n            Success: true\n          };\n          if (res.Success) {\n            this.$message.success('注册成功！');\n            this.$router.push('/Login');\n          } else {\n            this.$refs.ValidCode.refreshCode();\n            this.$message.error('注册失败，请重试');\n          }\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidCode","store","components","data","formData","UserName","Password","Email","PhoneNumber","Name","Code","rules","required","message","trigger","type","validator","_","value","callback","test","Error","code","$refs","getCode","mounted","initStarrySky","methods","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","centerX","centerY","Star","constructor","radius","Math","random","angle","PI","speed","size","color","update","x","cos","y","sin","draw","beginPath","arc","fillStyle","fill","stars","Array","map","animate","fillRect","forEach","star","requestAnimationFrame","RegisterBtn","loginForm","validate","valid","res","Success","$message","success","$router","push","refreshCode","error"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div>\n    <canvas id=\"starrySky\"></canvas>\n    <div style=\"height: 100vh; display: flex; align-items: center; justify-content: center; background-color: #F98C54;\">\n      <div\n        style=\"background-color: white; padding: 40px 60px; border-radius: 15px; box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1); width: 80%; max-width: 1000px;\">\n        <!-- 右侧表单区域 -->\n        <div style=\"flex: 1; max-width: 600px; margin: 0 auto;\">\n          <h2 class=\"welcome-title\" style=\"margin-bottom: 30px; font-size: 24px;\">用户注册</h2>\n          <el-form ref=\"loginForm\" :model=\"formData\" label-width=\"70px\" label-position=\"left\" :rules=\"rules\">\n            <el-form-item label=\"账号\" prop=\"UserName\" style=\"margin-bottom: 25px;\">\n              <el-input type=\"text\" v-model.trim=\"formData.UserName\" placeholder=\"请输入账号\"\n                style=\"height: 48px; padding: 0 18px; font-size: 16px;\"></el-input>\n            </el-form-item>\n\n            <el-input-group style=\"margin-bottom: 25px;\">\n              <el-form-item label=\"密码\" prop=\"Password\" style=\"margin-bottom: 0;\">\n                <el-input type=\"password\" v-model.trim=\"formData.Password\" placeholder=\"请输入密码\"\n                  style=\"height: 48px; padding: 0 18px; font-size: 16px;\"></el-input>\n              </el-form-item>\n            </el-input-group>\n\n            <el-form-item label=\"邮箱\" prop=\"Email\" style=\"margin-bottom: 25px;\">\n              <el-input type=\"email\" v-model.trim=\"formData.Email\" placeholder=\"请输入邮箱\"\n                style=\"height: 48px; padding: 0 18px; font-size: 16px;\"></el-input>\n            </el-form-item>\n\n            <el-form-item label=\"联系方式\" prop=\"PhoneNumber\" style=\"margin-bottom: 25px;\">\n              <el-input type=\"tel\" v-model.trim=\"formData.PhoneNumber\" placeholder=\"请输入11位手机号\"\n                style=\"height: 48px; padding: 0 18px; font-size: 16px;\"></el-input>\n            </el-form-item>\n\n            <el-form-item label=\"姓名\" prop=\"Name\" style=\"margin-bottom: 25px;\">\n              <el-input type=\"text\" v-model.trim=\"formData.Name\" placeholder=\"请输入姓名\"\n                style=\"height: 48px; padding: 0 18px; font-size: 16px;\"></el-input>\n            </el-form-item>\n\n            <el-form-item label=\"验证码\" prop=\"Code\"\n              style=\"margin-bottom: 30px; display: flex; align-items: center; gap: 20px;\">\n              <el-input type=\"text\" v-model.trim=\"formData.Code\" placeholder=\"请输入验证码\"\n                style=\"flex: 1; height: 48px; padding: 0 18px; font-size: 16px; min-width: 200px;\">\n              </el-input>\n              <div style=\"width: 140px; height: 48px;\">\n                <ValidCode ref=\"ValidCode\"></ValidCode>\n              </div>\n            </el-form-item>\n\n            <el-form-item style=\"margin-bottom: 30px;\">\n              <el-button type=\"primary\" @click=\"RegisterBtn\"\n                style=\"width: 100%; height: 52px; font-size: 18px; letter-spacing: 1px; border-radius: 10px;\">\n                注 册\n              </el-button>\n            </el-form-item>\n          </el-form>\n\n          <div style=\"text-align: center; font-size: 15px; color: #666;\">\n            已有账号？<RouterLink :to=\"{ path: '/Login' }\" style=\"color: #E91E63; font-weight: 600; margin-left: 8px;\">立即登录\n            </RouterLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ValidCode from '@/components/Code/canvas.vue'\nimport store from '@/store';\n\nexport default {\n  components: { ValidCode },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        Email: '',\n        PhoneNumber: '',\n        Name: '',\n        Code: ''\n      },\n      rules: {\n        UserName: [{ required: true, message: '请输入账号', trigger: 'blur' }],\n        Password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n        Email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱格式', trigger: 'blur' }\n        ],\n        PhoneNumber: [\n          { required: true, message: '请输入11位手机号', trigger: 'blur' },\n          {\n            validator: (_, value, callback) => {\n              if (!/^1[3-9]\\d{9}$/.test(value)) callback(new Error('请输入正确的手机号'));\n              else callback();\n            }, trigger: 'blur'\n          }\n        ],\n        Name: [{ required: true, message: '请输入姓名', trigger: 'blur' }],\n        Code: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            validator: (_, value, callback) => {\n              const code = this.$refs.ValidCode.getCode();\n              if (value !== code) callback(new Error('验证码错误'));\n              else callback();\n            }, trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  mounted() {\n    this.initStarrySky();\n  },\n  methods: {\n    initStarrySky() {\n      const canvas = document.getElementById('starrySky');\n      const ctx = canvas.getContext('2d');\n      const width = canvas.width = window.innerWidth;\n      const height = canvas.height = window.innerHeight;\n      const centerX = width / 2;\n      const centerY = height / 2;\n\n      class Star {\n        constructor() {\n          this.radius = Math.random() * 200 + 100; // 半径范围100-300px\n          this.angle = Math.random() * 2 * Math.PI;\n          this.speed = (Math.random() * 2 + 1) * 0.01; // 角速度\n          this.size = Math.random() * 2 + 1; // 星星大小\n          this.color = `hsl(${Math.random() * 360}, 100%, 80%)`; // 随机颜色\n        }\n\n        update() {\n          this.angle += this.speed;\n          this.x = centerX + this.radius * Math.cos(this.angle);\n          this.y = centerY + this.radius * Math.sin(this.angle);\n        }\n\n        draw() {\n          ctx.beginPath();\n          ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n          ctx.fillStyle = this.color;\n          ctx.fill();\n        }\n      }\n\n      const stars = Array(300).fill(0).map(() => new Star());\n\n      function animate() {\n        ctx.fillStyle = '#000022';\n        ctx.fillRect(0, 0, width, height);\n        stars.forEach(star => {\n          star.update();\n          star.draw();\n        });\n        requestAnimationFrame(animate);\n      }\n\n      animate();\n    },\n\n    async RegisterBtn() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n          // 这里替换为实际注册接口\n          const res = { Success: true };\n          if (res.Success) {\n            this.$message.success('注册成功！');\n            this.$router.push('/Login');\n          } else {\n            this.$refs.ValidCode.refreshCode();\n            this.$message.error('注册失败，请重试');\n          }\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.welcome-title {\n  font-size: 24px;\n  font-weight: 700;\n  background: linear-gradient(90deg, #4f6d7a 20%, #6a8b9a 50%, #8b9bb7 80%);\n  -webkit-background-clip: text;\n  color: transparent;\n  text-align: center;\n  letter-spacing: 2px;\n  margin-bottom: 20px;\n  display: block;\n}\n\n#starrySky {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  background: linear-gradient(180deg, #000033 0%, #000022 100%);\n}\n\n.el-form-item {\n  margin-bottom: 20px;\n}\n\n.el-input__inner {\n  transition: all 0.3s ease;\n  border-radius: 10px;\n  border-width: 2px;\n}\n\n.el-input__inner:focus {\n  border-color: #4f6d7a !important;\n  box-shadow: 0 0 0 4px rgba(79, 109, 122, 0.15);\n}\n\n.el-button--primary {\n  background-color: #4f6d7a;\n  border: none;\n  font-weight: 600;\n  transition: transform 0.2s ease, box-shadow 0.2s ease;\n}\n\n.el-button--primary:hover {\n  background-color: #6a8b9a;\n  transform: translateY(-3px);\n  box-shadow: 0 4px 12px rgba(79, 109, 122, 0.2);\n}\n\n/* 响应式调整 */\n@media (max-width: 768px) {\n  .welcome-title {\n    font-size: 20px;\n  }\n\n  .el-form {\n    max-width: 100%;\n    padding: 0 20px;\n  }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}