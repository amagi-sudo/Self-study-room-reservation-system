{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ValidCode from '@/components/Code/canvas.vue';\nimport store from '@/store';\nimport { settings } from 'nprogress';\nexport default {\n  components: {\n    ValidCode: ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        RoleType: \"2\",\n        Code: \"\"\n      },\n      roleOptions: [],\n      rules: {\n        UserName: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        Password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        \"Email\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"ImageUrls\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"Name\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"PhoneNumber\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            var reg = /^1[34578]\\d{9}$/;\n            if (!value || !reg.test(value)) {\n              callback(new Error('请输入正确的手机号'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }],\n        Code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            let identifyCode = this.$refs.ValidCode.getCode();\n            if (value != identifyCode) {\n              callback(new Error('请输入正确的验证码'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.GetRoleTypeApi();\n  },\n  methods: {\n    async GetRoleTypeApi() {\n      let {\n        Data: {\n          Items\n        }\n      } = await this.$Post(\"/Select/RoleType\");\n      this.roleOptions = Items;\n      console.log(this.roleOptions);\n    },\n    RegisterBtn() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          let res = await this.$Post(\"/User/Register\", this.formData);\n          console.log(res);\n          if (res.Success) {\n            this.$message.success(\"注册成功!\");\n            this.$router.push({\n              path: \"/Login\"\n            });\n          } else {\n            this.$refs.ValidCode.refreshCode();\n          }\n        } else {\n          this.$message.error(\"注册验证不通过\");\n          this.$refs.ValidCode.refreshCode();\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidCode","store","settings","components","data","formData","UserName","Password","RoleType","Code","roleOptions","rules","required","message","trigger","validator","rule","value","callback","reg","test","Error","identifyCode","$refs","getCode","created","GetRoleTypeApi","methods","Data","Items","$Post","console","log","RegisterBtn","loginForm","validate","valid","res","Success","$message","success","$router","push","path","refreshCode","error"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div>\n    <div style=\"height: 100vh; display: flex;align-items: center;justify-content: center;background-color: #F98C54;\">\n      <div style=\"display: flex;justify-content: center;background-color: white;padding:20px;border-radius: 10px;\">\n        <div style=\"flex:1\">\n          <img style=\"width:800px;border-radius: 5px;\" src=\"@/assets/login1.png\">\n\n        </div>\n        <div style=\"flex:1;margin-left: 35px;display: flex;flex-direction: column;justify-content: space-between;\">\n          <div style=\"width:500px\">\n            <h2>注册信息填写</h2>\n            <el-form style=\"margin-top:30px\" ref=\"loginForm\" :model=\"formData\" label-width=\"90px\" label-position=\"left\"\n              :rules=\"rules\">\n\n              <el-form-item label=\"账号\" prop=\"UserName\">\n                <el-input type=\"text\" v-model.trim=\"formData.UserName\" placeholder=\"请输入账号\">\n                </el-input>\n              </el-form-item>\n\n              <el-form-item label=\"密码\" prop=\"Password\">\n                <el-input type=\"password\" v-model.trim=\"formData.Password\" placeholder=\"请输入密码\"></el-input>\n              </el-form-item>\n\n              <el-form-item label=\"邮箱\" prop=\"Email\" placeholder=\"请输入邮箱\">\n                <el-input v-model.trim=\"formData.Email\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"联系方式\" prop=\"PhoneNumber\" placeholder=\"请输入联系方式\">\n                <el-input v-model.trim=\"formData.PhoneNumber\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"姓名\" prop=\"Name\" placeholder=\"请输入姓名\">\n                <el-input v-model.trim=\"formData.Name\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"验证码\" prop=\"Code\">\n                <div style=\"display: flex;\">\n                  <el-input text=\"Code\" v-model.trim=\"formData.Code\" placeholder=\"请输入验证码\"></el-input>\n                  <div style=\"margin-left:10px\">\n                    <ValidCode ref=\"ValidCode\"></ValidCode>\n                  </div>\n                </div>\n              </el-form-item>\n              <el-form-item>\n                <el-button style=\"width: 100%;\" type=\"primary\" @click=\"RegisterBtn\">注 册</el-button>\n\n              </el-form-item>\n            </el-form>\n          </div>\n          <div style=\"display: flex; justify-content: space-between;\">\n            <div>\n              <span>如果有账号 </span>\n              <RouterLink :to=\"{ path: '/Login' }\"><span style=\"padding-left:10px; color:red;\"\n                  class=\"pointer\">去登录</span></RouterLink>\n\n\n            </div>\n            <div><span style=\"color:#3366FF\" class=\"pointer\">忘记密码</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ValidCode from '@/components/Code/canvas.vue'\nimport store from '@/store';\nimport { settings } from 'nprogress';\nexport default {\n  components: {\n    ValidCode: ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        RoleType: \"2\",\n        Code: \"\"\n      },\n      roleOptions: [],\n      rules: {\n        UserName: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        Password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ],\n        \"Email\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"ImageUrls\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"Name\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n\n        \"PhoneNumber\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              var reg = /^1[34578]\\d{9}$/;\n              if (!value || !reg.test(value)) {\n                callback(new Error('请输入正确的手机号'));\n              }\n              else {\n                callback();\n              }\n            }, trigger: 'blur'\n          },\n        ],\n        Code: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              let identifyCode = this.$refs.ValidCode.getCode();\n\n              if (value != identifyCode) {\n                callback(new Error('请输入正确的验证码'));\n              } else {\n                callback();\n              }\n            }, trigger: 'blur'\n          }\n        ]\n      }\n    }\n\n  },\n  created() {\n    this.GetRoleTypeApi();\n  },\n  methods: {\n    async GetRoleTypeApi() {\n      let { Data: { Items } } = await this.$Post(\"/Select/RoleType\");\n\n      this.roleOptions = Items\n      console.log(this.roleOptions)\n    },\n    RegisterBtn() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n\n          let res = await this.$Post(\"/User/Register\", this.formData)\n          console.log(res);\n          if (res.Success) {\n            this.$message.success(\"注册成功!\");\n            this.$router.push({\n              path: \"/Login\"\n            })\n          }\n          else {\n\n            this.$refs.ValidCode.refreshCode();\n          }\n        } else {\n          this.$message.error(\"注册验证不通过\")\n          this.$refs.ValidCode.refreshCode();\n          return false;\n        }\n      });\n    }\n  }\n}\n</script>\n\n<style></style>"],"mappings":";AA+DA,OAAAA,SAAA;AACA,OAAAC,KAAA;AACA,SAAAC,QAAA;AACA;EACAC,UAAA;IACAH,SAAA,EAAAA;EACA;EACAI,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;MACA;MACAC,WAAA;MACAC,KAAA;QACAL,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,QAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA,UACA;UAAAF,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA,cACA;UAAAF,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA,SACA;UAAAF,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QAEA,gBACA;UAAAF,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAC,SAAA,EAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA,IAAAC,GAAA;YACA,KAAAF,KAAA,KAAAE,GAAA,CAAAC,IAAA,CAAAH,KAAA;cACAC,QAAA,KAAAG,KAAA;YACA,OACA;cACAH,QAAA;YACA;UACA;UAAAJ,OAAA;QACA,EACA;QACAL,IAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAC,SAAA,EAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA,IAAAI,YAAA,QAAAC,KAAA,CAAAvB,SAAA,CAAAwB,OAAA;YAEA,IAAAP,KAAA,IAAAK,YAAA;cACAJ,QAAA,KAAAG,KAAA;YACA;cACAH,QAAA;YACA;UACA;UAAAJ,OAAA;QACA;MAEA;IACA;EAEA;EACAW,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACA,MAAAD,eAAA;MACA;QAAAE,IAAA;UAAAC;QAAA;MAAA,eAAAC,KAAA;MAEA,KAAApB,WAAA,GAAAmB,KAAA;MACAE,OAAA,CAAAC,GAAA,MAAAtB,WAAA;IACA;IACAuB,YAAA;MACA,KAAAV,KAAA,CAAAW,SAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UAEA,IAAAC,GAAA,cAAAP,KAAA,wBAAAzB,QAAA;UACA0B,OAAA,CAAAC,GAAA,CAAAK,GAAA;UACA,IAAAA,GAAA,CAAAC,OAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;cACAC,IAAA;YACA;UACA,OACA;YAEA,KAAApB,KAAA,CAAAvB,SAAA,CAAA4C,WAAA;UACA;QACA;UACA,KAAAL,QAAA,CAAAM,KAAA;UACA,KAAAtB,KAAA,CAAAvB,SAAA,CAAA4C,WAAA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}