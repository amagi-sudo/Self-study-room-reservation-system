{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      isSongListVisible: false,\n      // 控制点歌台显示\n      songs: [],\n      // 歌曲列表\n      currentSong: null,\n      // 当前播放的歌曲\n      isPlaying: false,\n      // 播放状态\n      breadList: [{\n        path: '/Admin/Home',\n        meta: {\n          title: '控制台'\n        }\n      }\n      // 其他面包屑项目...\n      ],\n      UserInfo: {\n        Name: '管理员',\n        ImageUrls: 'https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png'\n      }\n    };\n  },\n  methods: {\n    // 显示/隐藏点歌台\n    toggleSongListVisibility() {\n      this.isSongListVisible = !this.isSongListVisible;\n    },\n    // 上传成功后处理\n    handleUploadSuccess(response, file, fileList) {\n      const song = {\n        name: file.name,\n        url: URL.createObjectURL(file.raw) // 临时URL用于播放\n      };\n      this.songs.push(song);\n    },\n    beforeUpload(file) {\n      const isMp4 = file.type === 'video/mp4';\n      if (!isMp4) {\n        this.$message.error('只能上传MP4格式的文件');\n      }\n      return isMp4;\n    },\n    // 播放歌曲\n    playSong(song) {\n      this.currentSong = song;\n      this.isPlaying = true;\n      this.$nextTick(() => {\n        const player = this.$refs.videoPlayer;\n        player.play();\n      });\n    },\n    // 播放/暂停\n    togglePlay() {\n      const player = this.$refs.videoPlayer;\n      if (this.isPlaying) {\n        player.pause();\n      } else {\n        player.play();\n      }\n      this.isPlaying = !this.isPlaying;\n    },\n    // 上一首\n    playPrevious() {\n      const currentIndex = this.songs.findIndex(song => song === this.currentSong);\n      const previousSong = this.songs[currentIndex - 1] || this.songs[this.songs.length - 1];\n      this.playSong(previousSong);\n    },\n    // 下一首\n    playNext() {\n      const currentIndex = this.songs.findIndex(song => song === this.currentSong);\n      const nextSong = this.songs[currentIndex + 1] || this.songs[0];\n      this.playSong(nextSong);\n    },\n    // 退出登录\n    LoginOut() {\n      // 退出登录的逻辑\n    }\n  }\n};","map":{"version":3,"names":["data","isSongListVisible","songs","currentSong","isPlaying","breadList","path","meta","title","UserInfo","Name","ImageUrls","methods","toggleSongListVisibility","handleUploadSuccess","response","file","fileList","song","name","url","URL","createObjectURL","raw","push","beforeUpload","isMp4","type","$message","error","playSong","$nextTick","player","$refs","videoPlayer","play","togglePlay","pause","playPrevious","currentIndex","findIndex","previousSong","length","playNext","nextSong","LoginOut"],"sources":["src/views/Admin/Layout/index.vue"],"sourcesContent":["<template>\n  <div>\n    <el-container style=\"height: 100vh\">\n      <!-- 头部 -->\n      <el-header>\n        <div class=\"bg-header\">\n          <div>\n            <span style=\"font-size: 24px; color: white; font-weight: bold;\">诚凛自习室管理端</span>\n          </div>\n          <div style=\"display: flex; align-items: center;\">\n            <el-avatar :size=\"60\" :src=\"UserInfo.ImageUrls\" size=\"medium\">\n              <img src=\"https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png\" />\n            </el-avatar>\n            <el-dropdown style=\"margin-left: 10px;\">\n              <span class=\"el-dropdown-link\" style=\"color: white;\">\n                {{ UserInfo.Name }}<i class=\"el-icon-arrow-down el-icon--right\"></i>\n              </span>\n              <el-dropdown-menu slot=\"dropdown\">\n                <el-dropdown-item>\n                  <RouterLink :to=\"{ path: '/Admin/UserPerson' }\">个人信息</RouterLink>\n                </el-dropdown-item>\n                <el-dropdown-item>\n                  <RouterLink :to=\"{ path: '/Admin/PasswordEdit' }\">修改密码</RouterLink>\n                </el-dropdown-item>\n                <el-dropdown-item>\n                  <div @click=\"LoginOut()\">退出</div>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </el-dropdown>\n          </div>\n        </div>\n      </el-header>\n\n      <!-- 侧边栏 -->\n      <el-aside width=\"200px\">\n        <el-menu class=\"menu-list\" :router=\"true\" active-text-color=\"blue\">\n          <el-menu-item index=\"/Admin/Home\">\n            <i class=\"el-icon-shujufenxi\"></i>\n            <span>控制台</span>\n          </el-menu-item>\n          <el-submenu index=\"/Admin/UserList\">\n            <template slot=\"title\">\n              <i class=\"el-icon-s-home\"></i>\n              <span>用户管理</span>\n            </template>\n            <el-menu-item index=\"/Admin/UserList\">\n              <span>用户信息</span>\n            </el-menu-item>\n          </el-submenu>\n          <el-menu-item index=\"/Admin/RoomList\">\n            <i class=\"el-icon-AIzixishi\"></i>\n            <span>自习室</span>\n          </el-menu-item>\n          <el-menu-item index=\"/Admin/SeatList\">\n            <i class=\"el-icon-zuowei\"></i>\n            <span>座位</span>\n          </el-menu-item>\n          <el-menu-item index=\"/Admin/AppointRecordList\">\n            <i class=\"el-icon-yuyuejilu\"></i>\n            <span>预约记录</span>\n          </el-menu-item>\n          <el-menu-item index=\"/Admin/BannerList\">\n            <i class=\"el-icon-wenanfengmian\"></i>\n            <span>封面</span>\n          </el-menu-item>\n          <el-menu-item index=\"/Admin/IntegralList\">\n            <i class=\"el-icon-jifen\"></i>\n            <span>积分</span>\n          </el-menu-item>\n          <el-menu-item @click=\"toggleSongListVisibility\">\n            <i class=\"el-icon-video-camera\"></i>\n            <span>点歌台</span>\n          </el-menu-item>\n        </el-menu>\n      </el-aside>\n\n      <!-- 主体 -->\n      <el-main class=\"admin-main\">\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\" class=\"margin-bottom-lg\">\n          <el-breadcrumb-item v-for=\"(item, index) in breadList\" :key=\"index\" :to=\"item.path\">\n            {{ item.meta.title }}\n          </el-breadcrumb-item>\n        </el-breadcrumb>\n\n        <!-- 点歌台区域 -->\n        <transition>\n          <div v-show=\"isSongListVisible\" class=\"song-list-container\">\n            <el-row>\n              <el-col :span=\"8\">\n                <el-upload action=\"/upload\" list-type=\"picture-card\" :on-success=\"handleUploadSuccess\"\n                  :before-upload=\"beforeUpload\">\n                  <i class=\"el-icon-plus\"></i>\n                </el-upload>\n                <el-table :data=\"songs\" style=\"width: 100%\">\n                  <el-table-column prop=\"name\" label=\"歌曲名称\" />\n                  <el-table-column label=\"操作\">\n                    <template slot-scope=\"scope\">\n                      <el-button @click=\"playSong(scope.row)\" size=\"mini\">播放</el-button>\n                    </template>\n                  </el-table-column>\n                </el-table>\n              </el-col>\n\n              <el-col :span=\"16\">\n                <div v-if=\"currentSong\" class=\"player-container\">\n                  <video ref=\"videoPlayer\" :src=\"currentSong.url\" controls></video>\n                  <div class=\"song-info\">\n                    <span>{{ currentSong.name }}</span>\n                  </div>\n                  <div class=\"controls\">\n                    <el-button @click=\"playPrevious\">上一首</el-button>\n                    <el-button @click=\"togglePlay\">{{ isPlaying ? '暂停' : '播放' }}</el-button>\n                    <el-button @click=\"playNext\">下一首</el-button>\n                  </div>\n                </div>\n              </el-col>\n            </el-row>\n          </div>\n        </transition>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isSongListVisible: false, // 控制点歌台显示\n      songs: [], // 歌曲列表\n      currentSong: null, // 当前播放的歌曲\n      isPlaying: false, // 播放状态\n      breadList: [\n        { path: '/Admin/Home', meta: { title: '控制台' } },\n        // 其他面包屑项目...\n      ],\n      UserInfo: {\n        Name: '管理员',\n        ImageUrls: 'https://cube.elemecdn.com/e/fd/0fc7d20532fdaf769a25683617711png.png',\n      },\n    };\n  },\n  methods: {\n    // 显示/隐藏点歌台\n    toggleSongListVisibility() {\n      this.isSongListVisible = !this.isSongListVisible;\n    },\n    // 上传成功后处理\n    handleUploadSuccess(response, file, fileList) {\n      const song = {\n        name: file.name,\n        url: URL.createObjectURL(file.raw), // 临时URL用于播放\n      };\n      this.songs.push(song);\n    },\n    beforeUpload(file) {\n      const isMp4 = file.type === 'video/mp4';\n      if (!isMp4) {\n        this.$message.error('只能上传MP4格式的文件');\n      }\n      return isMp4;\n    },\n    // 播放歌曲\n    playSong(song) {\n      this.currentSong = song;\n      this.isPlaying = true;\n      this.$nextTick(() => {\n        const player = this.$refs.videoPlayer;\n        player.play();\n      });\n    },\n    // 播放/暂停\n    togglePlay() {\n      const player = this.$refs.videoPlayer;\n      if (this.isPlaying) {\n        player.pause();\n      } else {\n        player.play();\n      }\n      this.isPlaying = !this.isPlaying;\n    },\n    // 上一首\n    playPrevious() {\n      const currentIndex = this.songs.findIndex((song) => song === this.currentSong);\n      const previousSong = this.songs[currentIndex - 1] || this.songs[this.songs.length - 1];\n      this.playSong(previousSong);\n    },\n    // 下一首\n    playNext() {\n      const currentIndex = this.songs.findIndex((song) => song === this.currentSong);\n      const nextSong = this.songs[currentIndex + 1] || this.songs[0];\n      this.playSong(nextSong);\n    },\n    // 退出登录\n    LoginOut() {\n      // 退出登录的逻辑\n    },\n  },\n};\n</script>\n\n<style scoped>\n.song-list-container {\n  padding: 20px;\n}\n\n.player-container {\n  text-align: center;\n}\n\n.controls {\n  margin-top: 20px;\n}\n\n.el-button {\n  margin: 0 10px;\n}\n\n.el-upload {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":";;;;AA6HA;EACAA,KAAA;IACA;MACAC,iBAAA;MAAA;MACAC,KAAA;MAAA;MACAC,WAAA;MAAA;MACAC,SAAA;MAAA;MACAC,SAAA,GACA;QAAAC,IAAA;QAAAC,IAAA;UAAAC,KAAA;QAAA;MAAA;MACA;MAAA,CACA;MACAC,QAAA;QACAC,IAAA;QACAC,SAAA;MACA;IACA;EACA;EACAC,OAAA;IACA;IACAC,yBAAA;MACA,KAAAZ,iBAAA,SAAAA,iBAAA;IACA;IACA;IACAa,oBAAAC,QAAA,EAAAC,IAAA,EAAAC,QAAA;MACA,MAAAC,IAAA;QACAC,IAAA,EAAAH,IAAA,CAAAG,IAAA;QACAC,GAAA,EAAAC,GAAA,CAAAC,eAAA,CAAAN,IAAA,CAAAO,GAAA;MACA;MACA,KAAArB,KAAA,CAAAsB,IAAA,CAAAN,IAAA;IACA;IACAO,aAAAT,IAAA;MACA,MAAAU,KAAA,GAAAV,IAAA,CAAAW,IAAA;MACA,KAAAD,KAAA;QACA,KAAAE,QAAA,CAAAC,KAAA;MACA;MACA,OAAAH,KAAA;IACA;IACA;IACAI,SAAAZ,IAAA;MACA,KAAAf,WAAA,GAAAe,IAAA;MACA,KAAAd,SAAA;MACA,KAAA2B,SAAA;QACA,MAAAC,MAAA,QAAAC,KAAA,CAAAC,WAAA;QACAF,MAAA,CAAAG,IAAA;MACA;IACA;IACA;IACAC,WAAA;MACA,MAAAJ,MAAA,QAAAC,KAAA,CAAAC,WAAA;MACA,SAAA9B,SAAA;QACA4B,MAAA,CAAAK,KAAA;MACA;QACAL,MAAA,CAAAG,IAAA;MACA;MACA,KAAA/B,SAAA,SAAAA,SAAA;IACA;IACA;IACAkC,aAAA;MACA,MAAAC,YAAA,QAAArC,KAAA,CAAAsC,SAAA,CAAAtB,IAAA,IAAAA,IAAA,UAAAf,WAAA;MACA,MAAAsC,YAAA,QAAAvC,KAAA,CAAAqC,YAAA,cAAArC,KAAA,MAAAA,KAAA,CAAAwC,MAAA;MACA,KAAAZ,QAAA,CAAAW,YAAA;IACA;IACA;IACAE,SAAA;MACA,MAAAJ,YAAA,QAAArC,KAAA,CAAAsC,SAAA,CAAAtB,IAAA,IAAAA,IAAA,UAAAf,WAAA;MACA,MAAAyC,QAAA,QAAA1C,KAAA,CAAAqC,YAAA,cAAArC,KAAA;MACA,KAAA4B,QAAA,CAAAc,QAAA;IACA;IACA;IACAC,SAAA;MACA;IAAA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}