{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  data() {\n    return {};\n  },\n  mounted() {\n    this.GetIntegralConsumeAndGainChart();\n  },\n  methods: {\n    // 统计最近30天积分的消耗和获取的折线图\n    async GetIntegralConsumeAndGainChart() {\n      try {\n        let {\n          Data\n        } = await this.$Post('/Integral/GetIntegralConsumeAndGainChart', this.searchForm);\n        this.DataList = Data;\n\n        // 在 DOM 更新后初始化 ECharts 图表\n        this.$nextTick(() => {\n          let myChart = echarts.init(document.getElementById(`echartDiv`));\n          var option = {\n            title: {\n              text: 'Temperature Change in the Coming Week'\n            },\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {},\n            toolbox: {\n              show: true,\n              feature: {\n                dataZoom: {\n                  yAxisIndex: 'none'\n                },\n                dataView: {\n                  readOnly: false\n                },\n                magicType: {\n                  type: ['line', 'bar']\n                },\n                restore: {},\n                saveAsImage: {}\n              }\n            },\n            xAxis: {\n              type: 'category',\n              boundaryGap: false,\n              data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n              type: 'value',\n              axisLabel: {\n                formatter: '{value} °C'\n              }\n            },\n            series: [{\n              name: 'Highest',\n              type: 'line',\n              data: [10, 11, 13, 11, 12, 12, 9],\n              markPoint: {\n                data: [{\n                  type: 'max',\n                  name: 'Max'\n                }, {\n                  type: 'min',\n                  name: 'Min'\n                }]\n              },\n              markLine: {\n                data: [{\n                  type: 'average',\n                  name: 'Avg'\n                }]\n              }\n            }, {\n              name: 'Lowest',\n              type: 'line',\n              data: [1, -2, 2, 5, 3, 2, 0],\n              markPoint: {\n                data: [{\n                  name: '周最低',\n                  value: -2,\n                  xAxis: 1,\n                  yAxis: -1.5\n                }]\n              },\n              markLine: {\n                data: [{\n                  type: 'average',\n                  name: 'Avg'\n                }, [{\n                  symbol: 'none',\n                  x: '90%',\n                  yAxis: 'max'\n                }, {\n                  symbol: 'circle',\n                  label: {\n                    position: 'start',\n                    formatter: 'Max'\n                  },\n                  type: 'max',\n                  name: '最高点'\n                }]]\n              }\n            }]\n          };\n          myChart.setOption(option); // 渲染图表\n          // 随着屏幕大小调节图表\n          window.addEventListener(\"resize\", () => {\n            myChart.resize();\n          });\n        });\n      } catch (error) {\n        console.error(\"获取数据失败:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","mounted","GetIntegralConsumeAndGainChart","methods","Data","$Post","searchForm","DataList","$nextTick","myChart","init","document","getElementById","option","title","text","tooltip","trigger","legend","toolbox","show","feature","dataZoom","yAxisIndex","dataView","readOnly","magicType","type","restore","saveAsImage","xAxis","boundaryGap","yAxis","axisLabel","formatter","series","markPoint","markLine","value","symbol","x","label","position","setOption","window","addEventListener","resize","error","console"],"sources":["src/views/Admin/GetIntegralConsumeAndGainChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n\r\n\r\n    <el-card class=\"box-card margin-top-lg\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        最近30天积分的消耗和获取\r\n      </div>\r\n      <div class=\"echart\" id=\"echartDiv\" :style=\"{ float: 'left', width: '100%', height: '500px' }\">\r\n      </div>\r\n    </el-card>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n\r\n\r\n    };\r\n  },\r\n  mounted() {\r\n    this.GetIntegralConsumeAndGainChart();\r\n  },\r\n  methods: {\r\n    // 统计最近30天积分的消耗和获取的折线图\r\n    async GetIntegralConsumeAndGainChart() {\r\n      try {\r\n        let { Data } = await this.$Post('/Integral/GetIntegralConsumeAndGainChart', this.searchForm);\r\n        this.DataList = Data;\r\n\r\n        // 在 DOM 更新后初始化 ECharts 图表\r\n        this.$nextTick(() => {\r\n\r\n          let myChart = echarts.init(document.getElementById(`echartDiv`));\r\n\r\n\r\n          var option = {\r\n            title: {\r\n              text: 'Temperature Change in the Coming Week'\r\n            },\r\n            tooltip: {\r\n              trigger: 'axis'\r\n            },\r\n            legend: {},\r\n            toolbox: {\r\n              show: true,\r\n              feature: {\r\n                dataZoom: {\r\n                  yAxisIndex: 'none'\r\n                },\r\n                dataView: { readOnly: false },\r\n                magicType: { type: ['line', 'bar'] },\r\n                restore: {},\r\n                saveAsImage: {}\r\n              }\r\n            },\r\n            xAxis: {\r\n              type: 'category',\r\n              boundaryGap: false,\r\n              data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\r\n            },\r\n            yAxis: {\r\n              type: 'value',\r\n              axisLabel: {\r\n                formatter: '{value} °C'\r\n              }\r\n            },\r\n            series: [\r\n              {\r\n                name: 'Highest',\r\n                type: 'line',\r\n                data: [10, 11, 13, 11, 12, 12, 9],\r\n                markPoint: {\r\n                  data: [\r\n                    { type: 'max', name: 'Max' },\r\n                    { type: 'min', name: 'Min' }\r\n                  ]\r\n                },\r\n                markLine: {\r\n                  data: [{ type: 'average', name: 'Avg' }]\r\n                }\r\n              },\r\n              {\r\n                name: 'Lowest',\r\n                type: 'line',\r\n                data: [1, -2, 2, 5, 3, 2, 0],\r\n                markPoint: {\r\n                  data: [{ name: '周最低', value: -2, xAxis: 1, yAxis: -1.5 }]\r\n                },\r\n                markLine: {\r\n                  data: [\r\n                    { type: 'average', name: 'Avg' },\r\n                    [\r\n                      {\r\n                        symbol: 'none',\r\n                        x: '90%',\r\n                        yAxis: 'max'\r\n                      },\r\n                      {\r\n                        symbol: 'circle',\r\n                        label: {\r\n                          position: 'start',\r\n                          formatter: 'Max'\r\n                        },\r\n                        type: 'max',\r\n                        name: '最高点'\r\n                      }\r\n                    ]\r\n                  ]\r\n                }\r\n              }\r\n            ]\r\n          };\r\n\r\n          myChart.setOption(option); // 渲染图表\r\n          // 随着屏幕大小调节图表\r\n          window.addEventListener(\"resize\", () => {\r\n            myChart.resize();\r\n          });\r\n\r\n        });\r\n      } catch (error) {\r\n        console.error(\"获取数据失败:\", error);\r\n      }\r\n    },\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tb-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 0;\r\n  /* 去掉默认的 margin-bottom */\r\n}\r\n\r\n.echart {\r\n  width: 100%;\r\n  height: 500px;\r\n}\r\n</style>"],"mappings":"AAiBA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA,QAGA;EACA;EACAC,QAAA;IACA,KAAAC,8BAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,+BAAA;MACA;QACA;UAAAE;QAAA,eAAAC,KAAA,kDAAAC,UAAA;QACA,KAAAC,QAAA,GAAAH,IAAA;;QAEA;QACA,KAAAI,SAAA;UAEA,IAAAC,OAAA,GAAAX,OAAA,CAAAY,IAAA,CAAAC,QAAA,CAAAC,cAAA;UAGA,IAAAC,MAAA;YACAC,KAAA;cACAC,IAAA;YACA;YACAC,OAAA;cACAC,OAAA;YACA;YACAC,MAAA;YACAC,OAAA;cACAC,IAAA;cACAC,OAAA;gBACAC,QAAA;kBACAC,UAAA;gBACA;gBACAC,QAAA;kBAAAC,QAAA;gBAAA;gBACAC,SAAA;kBAAAC,IAAA;gBAAA;gBACAC,OAAA;gBACAC,WAAA;cACA;YACA;YACAC,KAAA;cACAH,IAAA;cACAI,WAAA;cACA/B,IAAA;YACA;YACAgC,KAAA;cACAL,IAAA;cACAM,SAAA;gBACAC,SAAA;cACA;YACA;YACAC,MAAA,GACA;cACApC,IAAA;cACA4B,IAAA;cACA3B,IAAA;cACAoC,SAAA;gBACApC,IAAA,GACA;kBAAA2B,IAAA;kBAAA5B,IAAA;gBAAA,GACA;kBAAA4B,IAAA;kBAAA5B,IAAA;gBAAA;cAEA;cACAsC,QAAA;gBACArC,IAAA;kBAAA2B,IAAA;kBAAA5B,IAAA;gBAAA;cACA;YACA,GACA;cACAA,IAAA;cACA4B,IAAA;cACA3B,IAAA;cACAoC,SAAA;gBACApC,IAAA;kBAAAD,IAAA;kBAAAuC,KAAA;kBAAAR,KAAA;kBAAAE,KAAA;gBAAA;cACA;cACAK,QAAA;gBACArC,IAAA,GACA;kBAAA2B,IAAA;kBAAA5B,IAAA;gBAAA,GACA,CACA;kBACAwC,MAAA;kBACAC,CAAA;kBACAR,KAAA;gBACA,GACA;kBACAO,MAAA;kBACAE,KAAA;oBACAC,QAAA;oBACAR,SAAA;kBACA;kBACAP,IAAA;kBACA5B,IAAA;gBACA,EACA;cAEA;YACA;UAEA;UAEAU,OAAA,CAAAkC,SAAA,CAAA9B,MAAA;UACA;UACA+B,MAAA,CAAAC,gBAAA;YACApC,OAAA,CAAAqC,MAAA;UACA;QAEA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}