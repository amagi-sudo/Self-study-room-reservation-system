{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ValidCode from '@/components/Code/canvas.vue';\nimport store from '@/store';\nexport default {\n  components: {\n    ValidCode: ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        RoleType: \"\",\n        Code: \"\"\n      },\n      roleOptions: [],\n      rules: {\n        UserName: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        Password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        RoleType: [{\n          required: true,\n          message: '请选择角色',\n          trigger: 'blur'\n        }],\n        Code: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }, {\n          validator: (rule, value, callback) => {\n            let identifyCode = this.$refs.ValidCode.getCode();\n            if (value != identifyCode) {\n              callback(new Error('请输入正确的验证码'));\n            } else {\n              callback();\n            }\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {\n    this.GetRoleTypeApi();\n  },\n  methods: {\n    async GetRoleTypeApi() {\n      let {\n        Data: {\n          Items\n        }\n      } = await this.$Post(\"/Select/RoleType\");\n      this.roleOptions = Items;\n    },\n    LoginBtn() {\n      this.$refs.loginForm.validate(async valid => {\n        if (valid) {\n          let res = await store.dispatch(\"Login\", this.formData);\n          if (res.Success) {\n            this.$message.success(\"登录成功!\");\n            this.$router.push({\n              path: \"/Admin\"\n            });\n          } else {\n            this.$refs.ValidCode.refreshCode();\n          }\n        } else {\n          this.$message.error(\"登录验证不通过\");\n          this.$refs.ValidCode.refreshCode();\n          return false;\n        }\n      });\n    },\n    // 去往前台\n    ToHome() {\n      this.$router.push({\n        path: \"/Front/Home\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["ValidCode","store","components","data","formData","UserName","Password","RoleType","Code","roleOptions","rules","required","message","trigger","validator","rule","value","callback","identifyCode","$refs","getCode","Error","created","GetRoleTypeApi","methods","Data","Items","$Post","LoginBtn","loginForm","validate","valid","res","dispatch","Success","$message","success","$router","push","path","refreshCode","error","ToHome"],"sources":["src/views/Login.vue"],"sourcesContent":["<template>\n  <div>\n    <div\n      style=\"height: 100vh; display: flex; align-items: center; justify-content: center; background: linear-gradient(to bottom, #e0e0e0, #404040);\">\n      <div style=\"display: flex; justify-content: center; background-color: white; padding: 20px; border-radius: 10px;\">\n        <div style=\"flex: 1\">\n          <img style=\"width: 800px; border-radius: 5px;\" src=\"@/assets/hongxing.jpg\">\n        </div>\n        <div style=\"flex: 1; margin-left: 35px; display: flex; flex-direction: column; justify-content: space-between;\">\n          <div style=\"width: 500px\">\n            <h2 class=\"welcome-title\">欢迎您~来到诚凛自习室预约系统</h2> <!-- 添加类名 -->\n            <el-form style=\"margin-top: 30px\" ref=\"loginForm\" :model=\"formData\" label-width=\"70px\" label-position=\"left\"\n              :rules=\"rules\">\n\n              <el-form-item label=\"账号\" prop=\"UserName\">\n                <el-input type=\"text\" v-model.trim=\"formData.UserName\" placeholder=\"请输入账号\"></el-input>\n              </el-form-item>\n\n              <el-form-item label=\"密码\" prop=\"Password\">\n                <el-input type=\"password\" v-model.trim=\"formData.Password\" placeholder=\"请输入密码\"></el-input>\n              </el-form-item>\n\n              <el-form-item label=\"角色\" prop=\"RoleType\">\n                <el-radio-group v-model=\"formData.RoleType\">\n                  <el-radio v-for=\"(item, index) in roleOptions\" :key=\"item.Code\" :label=\"item.Code\">{{ item.Label\n                    }}</el-radio>\n                </el-radio-group>\n              </el-form-item>\n\n              <el-form-item label=\"验证码\" prop=\"Code\">\n                <div style=\"display: flex;\">\n                  <el-input text=\"Code\" v-model.trim=\"formData.Code\" placeholder=\"请输入验证码\"></el-input>\n                  <div style=\"margin-left: 10px\">\n                    <ValidCode ref=\"ValidCode\"></ValidCode>\n                  </div>\n                </div>\n              </el-form-item>\n\n              <el-form-item>\n                <el-button style=\"width: 200px;\" type=\"primary\" @click=\"LoginBtn\">登 录</el-button>\n              </el-form-item>\n\n              <el-form-item>\n                <el-button style=\"width: 200px;\" type=\"danger\" @click=\"ToHome\">前 台</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n\n          <div style=\"display: flex; justify-content: space-between;\">\n            <div>\n              <span>如果没有账号可以</span>\n              <RouterLink :to=\"{ path: '/Register' }\"><span style=\"padding-left: 10px; color: #F98C54;\" class=\"pointer\">\n                  立即注册\n                </span></RouterLink>\n            </div>\n            <div><span style=\"color: palevioletred\" class=\"pointer\">忘记密码</span></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ValidCode from '@/components/Code/canvas.vue'\nimport store from '@/store';\n\nexport default {\n  components: {\n    ValidCode: ValidCode\n  },\n  data() {\n    return {\n      formData: {\n        UserName: '',\n        Password: '',\n        RoleType: \"\",\n        Code: \"\"\n      },\n      roleOptions: [],\n      rules: {\n        UserName: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        Password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ],\n        RoleType: [\n          { required: true, message: '请选择角色', trigger: 'blur' },\n        ],\n        Code: [\n          { required: true, message: '请输入验证码', trigger: 'blur' },\n          {\n            validator: (rule, value, callback) => {\n              let identifyCode = this.$refs.ValidCode.getCode();\n\n              if (value != identifyCode) {\n                callback(new Error('请输入正确的验证码'));\n              } else {\n                callback();\n              }\n            },\n            trigger: 'blur'\n          }\n        ]\n      }\n    }\n  },\n  created() {\n    this.GetRoleTypeApi();\n  },\n  methods: {\n    async GetRoleTypeApi() {\n      let { Data: { Items } } = await this.$Post(\"/Select/RoleType\");\n      this.roleOptions = Items;\n    },\n    LoginBtn() {\n      this.$refs.loginForm.validate(async (valid) => {\n        if (valid) {\n          let res = await store.dispatch(\"Login\", this.formData);\n          if (res.Success) {\n            this.$message.success(\"登录成功!\");\n            this.$router.push({\n              path: \"/Admin\"\n            });\n          } else {\n            this.$refs.ValidCode.refreshCode();\n          }\n        } else {\n          this.$message.error(\"登录验证不通过\");\n          this.$refs.ValidCode.refreshCode();\n          return false;\n        }\n      });\n    },\n    // 去往前台\n    ToHome() {\n      this.$router.push({\n        path: \"/Front/Home\"\n      });\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 定义欢迎标题的样式 */\n.welcome-title {\n  font-size: 28px;\n  /* 字体大小 */\n  font-weight: bold;\n  /* 加粗字体 */\n  background: linear-gradient(90deg, #4f6d7a, #6a8b9a, #8b9bb7, #a2c1d6);\n  /* 冷色调渐变 */\n  -webkit-background-clip: text;\n  /* 让背景渐变作用于文字 */\n  color: transparent;\n  /* 设置文字颜色为透明 */\n  text-align: center;\n  /* 居中对齐 */\n  margin-bottom: 20px;\n  /* 下边距 */\n  letter-spacing: 2px;\n  /* 字母间距 */\n}\n</style>\n"],"mappings":";AAgEA,OAAAA,SAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IACAF,SAAA,EAAAA;EACA;EACAG,KAAA;IACA;MACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,QAAA;QACAC,IAAA;MACA;MACAC,WAAA;MACAC,KAAA;QACAL,QAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,QAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,QAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAL,IAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UACAC,SAAA,EAAAA,CAAAC,IAAA,EAAAC,KAAA,EAAAC,QAAA;YACA,IAAAC,YAAA,QAAAC,KAAA,CAAAnB,SAAA,CAAAoB,OAAA;YAEA,IAAAJ,KAAA,IAAAE,YAAA;cACAD,QAAA,KAAAI,KAAA;YACA;cACAJ,QAAA;YACA;UACA;UACAJ,OAAA;QACA;MAEA;IACA;EACA;EACAS,QAAA;IACA,KAAAC,cAAA;EACA;EACAC,OAAA;IACA,MAAAD,eAAA;MACA;QAAAE,IAAA;UAAAC;QAAA;MAAA,eAAAC,KAAA;MACA,KAAAlB,WAAA,GAAAiB,KAAA;IACA;IACAE,SAAA;MACA,KAAAT,KAAA,CAAAU,SAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,IAAAC,GAAA,SAAA/B,KAAA,CAAAgC,QAAA,eAAA7B,QAAA;UACA,IAAA4B,GAAA,CAAAE,OAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;cACAC,IAAA;YACA;UACA;YACA,KAAApB,KAAA,CAAAnB,SAAA,CAAAwC,WAAA;UACA;QACA;UACA,KAAAL,QAAA,CAAAM,KAAA;UACA,KAAAtB,KAAA,CAAAnB,SAAA,CAAAwC,WAAA;UACA;QACA;MACA;IACA;IACA;IACAE,OAAA;MACA,KAAAL,OAAA,CAAAC,IAAA;QACAC,IAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}