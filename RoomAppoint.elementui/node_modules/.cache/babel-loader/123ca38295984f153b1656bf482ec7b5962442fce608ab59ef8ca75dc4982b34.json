{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  data() {\n    return {};\n  },\n  mounted() {\n    this.GetIntegralConsumeAndGainChart();\n  },\n  methods: {\n    // 统计早中晚每个自习室的使用率&&空闲率\n    async GetIntegralConsumeAndGainChart() {\n      try {\n        let {\n          Data\n        } = await this.$Post('/AppointRecord/GetIntegralConsumeAndGainChart', this.searchForm);\n        this.DataList = Data;\n\n        // 在 DOM 更新后初始化 ECharts 图表\n        this.$nextTick(() => {\n          for (let item of this.DataList) {\n            let myChart = echarts.init(document.getElementById(`echartDiv${item.Room.Id}`));\n            var option = option = {\n              title: {\n                left: 'center'\n              },\n              tooltip: {\n                trigger: 'item'\n              },\n              legend: {\n                orient: 'vertical',\n                left: 'left'\n              },\n              series: [{\n                name: '预约次数统计',\n                type: 'pie',\n                radius: '50%',\n                data: item.DataList.map(x => ({\n                  name: x.Name,\n                  value: x.Value\n                })),\n                emphasis: {\n                  itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                  }\n                }\n              }]\n            };\n            myChart.setOption(option); // 渲染图表\n            // 随着屏幕大小调节图表\n            window.addEventListener(\"resize\", () => {\n              myChart.resize();\n            });\n          }\n        });\n      } catch (error) {\n        console.error(\"获取数据失败:\", error);\n      }\n    },\n    /**\r\n     * 点击表格搜索按钮会触发\r\n     */\n    async SearchClick() {\n      if (this.searchForm.DateRange.length > 0) {\n        this.searchForm.BeginDate = this.searchForm.DateRange[0];\n        this.searchForm.EndDate = this.searchForm.DateRange[1];\n      }\n      this.GetAppointRoomAppointStatusData();\n    },\n    /**\r\n     * 点击清空表单会触发\r\n     */\n    async ResetClick() {\n      this.searchForm = {\n        DateRange: []\n      };\n      this.GetAppointRoomAppointStatusData();\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","mounted","GetIntegralConsumeAndGainChart","methods","Data","$Post","searchForm","DataList","$nextTick","item","myChart","init","document","getElementById","Room","Id","option","title","left","tooltip","trigger","legend","orient","series","type","radius","map","x","Name","value","Value","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","window","addEventListener","resize","error","console","SearchClick","DateRange","length","BeginDate","EndDate","GetAppointRoomAppointStatusData","ResetClick"],"sources":["src/views/Admin/GetIntegralConsumeAndGainChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n\r\n\r\n    <el-card class=\"box-card margin-top-lg\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        傻逼李锐添\r\n      </div>\r\n      <div class=\"echart\" id=\"echartDiv\" :style=\"{ float: 'left', width: '100%', height: '500px' }\">\r\n      </div>\r\n    </el-card>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n\r\n\r\n    };\r\n  },\r\n  mounted() {\r\n    this.GetIntegralConsumeAndGainChart();\r\n  },\r\n  methods: {\r\n    // 统计早中晚每个自习室的使用率&&空闲率\r\n    async GetIntegralConsumeAndGainChart() {\r\n      try {\r\n        let { Data } = await this.$Post('/AppointRecord/GetIntegralConsumeAndGainChart', this.searchForm);\r\n        this.DataList = Data;\r\n\r\n        // 在 DOM 更新后初始化 ECharts 图表\r\n        this.$nextTick(() => {\r\n          for (let item of this.DataList) {\r\n            let myChart = echarts.init(document.getElementById(`echartDiv${item.Room.Id}`));\r\n\r\n\r\n            var option = option = {\r\n              title: {\r\n\r\n                left: 'center'\r\n              },\r\n              tooltip: {\r\n                trigger: 'item'\r\n              },\r\n              legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n              },\r\n              series: [\r\n                {\r\n                  name: '预约次数统计',\r\n                  type: 'pie',\r\n                  radius: '50%',\r\n                  data: item.DataList.map(x => ({\r\n                    name: x.Name,\r\n                    value: x.Value\r\n                  })),\r\n                  emphasis: {\r\n                    itemStyle: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            };\r\n\r\n            myChart.setOption(option); // 渲染图表\r\n            // 随着屏幕大小调节图表\r\n            window.addEventListener(\"resize\", () => {\r\n              myChart.resize();\r\n            });\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"获取数据失败:\", error);\r\n      }\r\n    },\r\n    /**\r\n     * 点击表格搜索按钮会触发\r\n     */\r\n    async SearchClick() {\r\n      if (this.searchForm.DateRange.length > 0) {\r\n        this.searchForm.BeginDate = this.searchForm.DateRange[0];\r\n        this.searchForm.EndDate = this.searchForm.DateRange[1];\r\n      }\r\n      this.GetAppointRoomAppointStatusData();\r\n\r\n    },\r\n    /**\r\n     * 点击清空表单会触发\r\n     */\r\n    async ResetClick() {\r\n      this.searchForm = {\r\n        DateRange: []\r\n      };\r\n      this.GetAppointRoomAppointStatusData();\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tb-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 0;\r\n  /* 去掉默认的 margin-bottom */\r\n}\r\n\r\n.echart {\r\n  width: 100%;\r\n  height: 500px;\r\n}\r\n</style>"],"mappings":"AAiBA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA,QAGA;EACA;EACAC,QAAA;IACA,KAAAC,8BAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,+BAAA;MACA;QACA;UAAAE;QAAA,eAAAC,KAAA,uDAAAC,UAAA;QACA,KAAAC,QAAA,GAAAH,IAAA;;QAEA;QACA,KAAAI,SAAA;UACA,SAAAC,IAAA,SAAAF,QAAA;YACA,IAAAG,OAAA,GAAAZ,OAAA,CAAAa,IAAA,CAAAC,QAAA,CAAAC,cAAA,aAAAJ,IAAA,CAAAK,IAAA,CAAAC,EAAA;YAGA,IAAAC,MAAA,GAAAA,MAAA;cACAC,KAAA;gBAEAC,IAAA;cACA;cACAC,OAAA;gBACAC,OAAA;cACA;cACAC,MAAA;gBACAC,MAAA;gBACAJ,IAAA;cACA;cACAK,MAAA,GACA;gBACAxB,IAAA;gBACAyB,IAAA;gBACAC,MAAA;gBACAzB,IAAA,EAAAS,IAAA,CAAAF,QAAA,CAAAmB,GAAA,CAAAC,CAAA;kBACA5B,IAAA,EAAA4B,CAAA,CAAAC,IAAA;kBACAC,KAAA,EAAAF,CAAA,CAAAG;gBACA;gBACAC,QAAA;kBACAC,SAAA;oBACAC,UAAA;oBACAC,aAAA;oBACAC,WAAA;kBACA;gBACA;cACA;YAEA;YAEAzB,OAAA,CAAA0B,SAAA,CAAApB,MAAA;YACA;YACAqB,MAAA,CAAAC,gBAAA;cACA5B,OAAA,CAAA6B,MAAA;YACA;UACA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IACA;AACA;AACA;IACA,MAAAE,YAAA;MACA,SAAApC,UAAA,CAAAqC,SAAA,CAAAC,MAAA;QACA,KAAAtC,UAAA,CAAAuC,SAAA,QAAAvC,UAAA,CAAAqC,SAAA;QACA,KAAArC,UAAA,CAAAwC,OAAA,QAAAxC,UAAA,CAAAqC,SAAA;MACA;MACA,KAAAI,+BAAA;IAEA;IACA;AACA;AACA;IACA,MAAAC,WAAA;MACA,KAAA1C,UAAA;QACAqC,SAAA;MACA;MACA,KAAAI,+BAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}