{"ast":null,"code":"import store from '@/store';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"RoomList\",\n  computed: {\n    ...mapGetters(['Token', 'UserInfo', 'RoleType', 'HasUserInfo', 'ColumnType', \"UserId\"])\n  },\n  data() {\n    return {\n      where: {},\n      searchForm: {},\n      //搜索定义的数据对象\n      dataColum: [{\n        key: \"Id\",\n        hidden: true\n      }, {\n        key: \"Name\",\n        title: \"名称\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"Cover\",\n        title: \"封面\",\n        type: store.getters.ColumnType.IMAGES\n      }, {\n        key: \"Address\",\n        title: \"地址\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"Content\",\n        title: \"介绍\",\n        width: \"140px\",\n        type: store.getters.ColumnType.RICHTEXT\n      }, {\n        key: \"SeatCount\",\n        title: \"总座位数\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"TotalCommentCount\",\n        title: \"评论数\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"TotalUseCount\",\n        title: \"使用次数\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"EveryMonCancelCount\",\n        title: \"每月可取消次数\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        title: \"操作\",\n        width: \"300px\",\n        key: \"Operate\",\n        type: store.getters.ColumnType.USERDEFINED\n      }],\n      editModalFormRules: {\n        \"Name\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"Cover\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"Address\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"EveryMonCancelCount\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"Content\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }]\n      },\n      formData: {},\n      //保存或者修改定义的数据对象\n      editorShow: false\n    };\n  },\n  created() {},\n  methods: {\n    //修改属性\n    async UpdateEntityAsync(Id, title, data) {\n      let {\n        Data\n      } = await this.$PostSigleUpdate(`/Room/Get`, `/Room/CreateOrEdit`, Id, title, data);\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击新增或者编辑的时候会触发\n     */\n    async ShowEditModal(Id) {\n      let {\n        Data\n      } = await this.$Post(`/Room/Get`, {\n        Id: Id\n      });\n      this.formData = Data;\n      this.editorShow = true;\n    },\n    /**\n     * 点击保存的时候会触发\n     */\n    async CreateOrEditForm() {\n      this.$refs.editModalForm.validate(async valid => {\n        if (valid) {\n          var {\n            Success\n          } = await this.$Post(`/Room/CreateOrEdit`, this.formData);\n          if (Success) {\n            this.editorShow = false;\n            this.$refs.PaginationTableId.Reload(this.searchForm);\n          }\n        }\n      });\n    },\n    /**\n     * 单个删除的时候会触发\n     */\n    async ShowDeleteModal(Id) {\n      await this.$PostDelete(`/Room/Delete`, {\n        Id: Id\n      });\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 批量删除的时候会触发\n     */\n    async ShowBatchDeleteModal() {\n      var ids = this.$refs.PaginationTableId.GetSelectionRow().map(x => x.Id);\n      if (ids.length == 0) {\n        this.$message.error(\"你选择需要删除的记录\");\n        return;\n      }\n      await this.$PostDelete(`/Room/BatchDelete`, {\n        Ids: ids\n      });\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击表格搜索按钮会触发\n     */\n    async SearchClick() {\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击清空表单会触发\n     */\n    async ResetClick() {\n      this.searchForm = {};\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    }\n  }\n};","map":{"version":3,"names":["store","mapGetters","name","computed","data","where","searchForm","dataColum","key","hidden","title","type","getters","ColumnType","SHORTTEXT","IMAGES","width","RICHTEXT","USERDEFINED","editModalFormRules","required","message","trigger","formData","editorShow","created","methods","UpdateEntityAsync","Id","Data","$PostSigleUpdate","$refs","PaginationTableId","Reload","ShowEditModal","$Post","CreateOrEditForm","editModalForm","validate","valid","Success","ShowDeleteModal","$PostDelete","ShowBatchDeleteModal","ids","GetSelectionRow","map","x","length","$message","error","Ids","SearchClick","ResetClick"],"sources":["src/views/Admin/RoomList.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-search\" @click=\"SearchClick\">搜 索</el-button>\n        <el-button type=\"warning\" size=\"mini\" @click=\"ResetClick\" icon=\"el-icon-s-promotion\">重 置</el-button>\n      </div>\n      <div class=\"tb-body\">\n        <el-form ref=\"searchFormRef\" :model=\"searchForm\" :inline=\"true\" label-width=\"120px\" :style=\"`flex:1;`\">\n          <el-form-item label=\"名称\" prop=\"NameLike\">\n            <el-input v-model.trim=\"searchForm.NameLike\" placeholder=\"请输入名称\" :clearable=\"true\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"地址\" prop=\"AddressLike\">\n            <el-input v-model.trim=\"searchForm.AddressLike\" placeholder=\"请输入地址\" :clearable=\"true\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"介绍\" prop=\"ContentLike\">\n            <el-input v-model.trim=\"searchForm.ContentLike\" placeholder=\"请输入介绍\" :clearable=\"true\"></el-input>\n          </el-form-item>\n        </el-form>\n      </div>\n\n    </el-card>\n\n\n    <el-dialog :title=\"formData.Id ? '修改自习室' : '添加自习室'\" :visible.sync=\"editorShow\" width=\"50%\" :lock-scroll=\"true\"\n      height=\"800px\">\n      <el-form v-if=\"editorShow == true\" ref=\"editModalForm\" :rules=\"editModalFormRules\" :model=\"formData\"\n        label-width=\"140px\" size=\"mini\">\n        <el-row :gutter=\"10\" class=\"EditFromBody\">\n          <el-col :span=\"24\">\n            <el-form-item label=\"名称\" prop=\"Name\">\n              <el-input type=\"text\" v-model.trim=\"formData.Name\" placeholder=\"请输入名称\" :clearable=\"true\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"封面\" prop=\"Cover\">\n              <UploadImages :limit=\"1\" v-model=\"formData.Cover\"></UploadImages>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"地址\" prop=\"Address\">\n              <el-input type=\"text\" v-model.trim=\"formData.Address\" placeholder=\"请输入地址\" :clearable=\"true\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"每月可取消次数\" prop=\"EveryMonCancelCount\">\n              <el-input type=\"number\" v-model.trim=\"formData.EveryMonCancelCount\" placeholder=\"请输入每月可取消次数\"\n                :clearable=\"true\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"介绍\" prop=\"Content\">\n              <QillRichText v-model=\"formData.Content\"></QillRichText>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n\n        <el-row type=\"flex\" justify=\"end\" align=\"bottom\">\n          <el-form-item>\n            <el-button type=\"primary\" plain @click=\"CreateOrEditForm()\">确 定</el-button>\n            <el-button @click=\"editorShow = false\">取 消</el-button>\n          </el-form-item>\n        </el-row>\n      </el-form>\n\n    </el-dialog>\n\n\n    <PaginationTable ref=\"PaginationTableId\" url=\"/Room/List\" :column=\"dataColum\" :where=\"where\">\n      <template v-slot:header>\n        <el-button type=\"primary\" size=\"mini\" plain icon=\"el-icon-edit\" @click=\"ShowEditModal()\">新 增</el-button>\n        <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" @click=\"ShowBatchDeleteModal()\">批 量 删 除</el-button>\n      </template>\n      <template v-slot:Operate=\"scope\">\n        <el-button type=\"primary\" size=\"mini\" @click=\"ShowEditModal(scope.row.Id)\">修 改</el-button>\n        <el-button type=\"danger\" size=\"mini\" @click=\"ShowDeleteModal(scope.row.Id)\">删 除</el-button>\n      </template>\n    </PaginationTable>\n  </div>\n</template>\n\n<script>\nimport store from '@/store';\nimport { mapGetters } from 'vuex'\nexport default {\n  name: \"RoomList\",\n  computed: {\n    ...mapGetters([\n      'Token', 'UserInfo', 'RoleType', 'HasUserInfo', 'ColumnType', \"UserId\"\n    ])\n  },\n  data() {\n\n    return {\n      where: {},\n      searchForm: {},//搜索定义的数据对象\n      dataColum: [\n        {\n          key: \"Id\",\n          hidden: true,\n\n        },\n        {\n          key: \"Name\",\n          title: \"名称\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"Cover\",\n          title: \"封面\",\n          type: store.getters.ColumnType.IMAGES,\n        },\n        {\n          key: \"Address\",\n          title: \"地址\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"Content\",\n          title: \"介绍\",\n          width: \"140px\",\n          type: store.getters.ColumnType.RICHTEXT,\n        },\n        {\n          key: \"SeatCount\",\n          title: \"总座位数\",\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"TotalCommentCount\",\n          title: \"评论数\",\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"TotalUseCount\",\n          title: \"使用次数\",\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"EveryMonCancelCount\",\n          title: \"每月可取消次数\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          title: \"操作\",\n          width: \"300px\",\n          key: \"Operate\",\n          type: store.getters.ColumnType.USERDEFINED,\n        },\n      ],\n      editModalFormRules: {\n        \"Name\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"Cover\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"Address\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"EveryMonCancelCount\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"Content\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n      },\n      formData: {\n\n      },//保存或者修改定义的数据对象\n      editorShow: false,\n\n    };\n  },\n  created() {\n\n  },\n  methods: {\n    //修改属性\n    async UpdateEntityAsync(Id, title, data) {\n      let { Data } = await this.$PostSigleUpdate(`/Room/Get`, `/Room/CreateOrEdit`, Id, title, data);\n\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击新增或者编辑的时候会触发\n     */\n    async ShowEditModal(Id) {\n\n      let { Data } = await this.$Post(`/Room/Get`, { Id: Id });\n      this.formData = Data;\n\n      this.editorShow = true;\n\n    },\n    /**\n     * 点击保存的时候会触发\n     */\n    async CreateOrEditForm() {\n\n      this.$refs.editModalForm.validate(async valid => {\n        if (valid) {\n          var { Success } = await this.$Post(`/Room/CreateOrEdit`, this.formData);\n\n          if (Success) {\n            this.editorShow = false;\n            this.$refs.PaginationTableId.Reload(this.searchForm);\n          }\n        }\n      })\n    },\n    /**\n     * 单个删除的时候会触发\n     */\n    async ShowDeleteModal(Id) {\n      await this.$PostDelete(`/Room/Delete`, { Id: Id });\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 批量删除的时候会触发\n     */\n    async ShowBatchDeleteModal() {\n      var ids = this.$refs.PaginationTableId.GetSelectionRow().map(x => x.Id);\n      if (ids.length == 0) {\n        this.$message.error(\"你选择需要删除的记录\");\n        return;\n      }\n      await this.$PostDelete(`/Room/BatchDelete`, { Ids: ids });\n\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击表格搜索按钮会触发\n     */\n    async SearchClick() {\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击清空表单会触发\n     */\n    async ResetClick() {\n      this.searchForm = {};\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n\n\n\n\n  },\n};\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}