{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport store from \"@/store/index.js\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  computed: {\n    ...mapGetters([\"UserInfo\", 'UserId'])\n  },\n  data() {\n    return {\n      formData: {},\n      rules: {\n        \"TwoPassword\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"OrginPassword\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"NewPassword\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    //创建或者修改\n    async CreateOrEdit() {\n      this.$refs.editModalForm.validate(async valid => {\n        if (valid) {\n          if (this.UserInfo.Password != this.formData.OrginPassword) {\n            this.$message.error(\"原始密码错误\");\n            return;\n          }\n          if (this.formData.TwoPassword != this.formData.NewPassword) {\n            this.$message.error(\"确认密码和新密码不一致\");\n            return;\n          }\n          if (this.formData.Password == this.formData.TwoPassword) {\n            this.$message.error(\"原始密码和新密码不能相同\");\n          }\n          this.UserInfo.Password = this.formData.TwoPassword;\n\n          //保存数据到数据库\n          let {\n            Success,\n            Msg,\n            Data\n          } = await this.$Post(\"/User/CreateOrEdit\", this.UserInfo);\n          if (Success) {\n            this.$message.success(\"修改成功!\");\n            store.dispatch(\"Logout\");\n            this.$router.push({\n              path: \"/Login\"\n            });\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["store","mapGetters","computed","data","formData","rules","required","message","trigger","created","methods","CreateOrEdit","$refs","editModalForm","validate","valid","UserInfo","Password","OrginPassword","$message","error","TwoPassword","NewPassword","Success","Msg","Data","$Post","success","dispatch","$router","push","path","console","log"],"sources":["src/views/Front/PasswordEdit.vue"],"sourcesContent":["<template>\n  <div>\n    <el-page-header class=\"Card margin-top-lg\" @back=\"goBack\" content=\"修改密码\">\n    </el-page-header>\n    <el-card class=\"margin-top-lg\">\n\n      <div>\n        <el-form ref=\"editModalForm\" :model=\"formData\" label-width=\"80px\" size=\"mini\" :rules=\"rules\">\n\n\n          <el-form-item label=\"原始密码\" prop=\"OrginPassword\" placeholder=\"请输入原始密码\">\n            <el-input type=\"password\" v-model.trim=\"formData.OrginPassword\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"新密码\" prop=\"NewPassword\" placeholder=\"请输入原始密码\">\n            <el-input type=\"password\" v-model.trim=\"formData.NewPassword\"></el-input>\n          </el-form-item>\n\n          <el-form-item label=\"确认密码\" prop=\"TwoPassword\" placeholder=\"请输入原始密码\">\n            <el-input type=\"password\" v-model.trim=\"formData.TwoPassword\"></el-input>\n          </el-form-item>\n\n\n        </el-form>\n        <div style=\"display: flex;justify-content: flex-end;\">\n          <el-button type=\"primary\" @click=\"CreateOrEdit\">确 定</el-button>\n        </div>\n      </div>\n    </el-card>\n\n  </div>\n</template>\n\n<script>\nimport store from \"@/store/index.js\"\nimport { mapGetters } from \"vuex\";\nexport default {\n\n  computed: {\n    ...mapGetters([\"UserInfo\", 'UserId'])\n  },\n  data() {\n    return {\n\n      formData: {},\n      rules: {\n        \"TwoPassword\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"OrginPassword\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"NewPassword\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n\n        ],\n      },\n\n    }\n  },\n  created() {\n\n  },\n  methods: {\n\n\n    //创建或者修改\n    async CreateOrEdit() {\n      this.$refs.editModalForm.validate(async (valid) => {\n        if (valid) {\n\n          if (this.UserInfo.Password != this.formData.OrginPassword) {\n            this.$message.error(\"原始密码错误\");\n            return;\n          }\n          if (this.formData.TwoPassword != this.formData.NewPassword) {\n            this.$message.error(\"确认密码和新密码不一致\");\n            return;\n          }\n          if (this.formData.Password == this.formData.TwoPassword) {\n            this.$message.error(\"原始密码和新密码不能相同\");\n          }\n\n          this.UserInfo.Password = this.formData.TwoPassword;\n\n          //保存数据到数据库\n          let { Success, Msg, Data } = await this.$Post(\"/User/CreateOrEdit\", this.UserInfo);\n          if (Success) {\n\n            this.$message.success(\"修改成功!\");\n            store.dispatch(\"Logout\");\n            this.$router.push({\n              path: \"/Login\"\n            })\n\n          }\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n\n  }\n}\n</script>\n\n<style></style>"],"mappings":";AAkCA,OAAAA,KAAA;AACA,SAAAC,UAAA;AACA;EAEAC,QAAA;IACA,GAAAD,UAAA;EACA;EACAE,KAAA;IACA;MAEAC,QAAA;MACAC,KAAA;QACA,gBACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA,kBACA;UAAAF,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACA,gBACA;UAAAF,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAGA;IAEA;EACA;EACAC,QAAA,GAEA;EACAC,OAAA;IAGA;IACA,MAAAC,aAAA;MACA,KAAAC,KAAA,CAAAC,aAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UAEA,SAAAC,QAAA,CAAAC,QAAA,SAAAb,QAAA,CAAAc,aAAA;YACA,KAAAC,QAAA,CAAAC,KAAA;YACA;UACA;UACA,SAAAhB,QAAA,CAAAiB,WAAA,SAAAjB,QAAA,CAAAkB,WAAA;YACA,KAAAH,QAAA,CAAAC,KAAA;YACA;UACA;UACA,SAAAhB,QAAA,CAAAa,QAAA,SAAAb,QAAA,CAAAiB,WAAA;YACA,KAAAF,QAAA,CAAAC,KAAA;UACA;UAEA,KAAAJ,QAAA,CAAAC,QAAA,QAAAb,QAAA,CAAAiB,WAAA;;UAEA;UACA;YAAAE,OAAA;YAAAC,GAAA;YAAAC;UAAA,eAAAC,KAAA,4BAAAV,QAAA;UACA,IAAAO,OAAA;YAEA,KAAAJ,QAAA,CAAAQ,OAAA;YACA3B,KAAA,CAAA4B,QAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;cACAC,IAAA;YACA;UAEA;QACA;UACAC,OAAA,CAAAC,GAAA;UACA;QACA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}