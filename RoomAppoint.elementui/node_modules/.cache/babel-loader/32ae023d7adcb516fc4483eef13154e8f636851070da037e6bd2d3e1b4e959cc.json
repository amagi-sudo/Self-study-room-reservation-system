{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      searchForm: {},\n      DataList: []\n    };\n  },\n  mounted() {\n    this.GetAppointRoomAppointStatusData();\n  },\n  methods: {\n    // 统计早中晚每个自习室的使用率&&空闲率\n    async GetAppointRoomAppointStatusData() {\n      try {\n        let {\n          Data\n        } = await this.$Post('/AppointRecord/GetAppointRoomAppointStatusData', this.searchForm);\n        this.DataList = Data || [];\n\n        // 在 DOM 更新后初始化 ECharts 图表\n        this.$nextTick(() => {\n          for (let item of this.DataList) {\n            const chartDom = document.getElementById(`echartDiv${item.Room.Id}`);\n            if (!chartDom) continue; // 确保 DOM 元素存在\n\n            const myChart = echarts.init(chartDom);\n\n            // 检查 item.DataList 是否存在且为数组\n            const chartData = Array.isArray(item.DataList) ? item.DataList : [];\n            const option = {\n              title: {\n                text: '预约次数统计',\n                left: 'center'\n              },\n              tooltip: {\n                trigger: 'item'\n              },\n              legend: {\n                orient: 'vertical',\n                left: 'left'\n              },\n              series: [{\n                name: '预约次数统计',\n                type: 'pie',\n                radius: '50%',\n                data: chartData.map(x => ({\n                  name: x.Name,\n                  value: x.Value\n                })),\n                emphasis: {\n                  itemStyle: {\n                    shadowBlur: 10,\n                    shadowOffsetX: 0,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)'\n                  }\n                }\n              }]\n            };\n            myChart.setOption(option); // 渲染图表\n\n            // 随着屏幕大小调节图表\n            window.addEventListener(\"resize\", () => {\n              myChart.resize();\n            });\n          }\n        });\n      } catch (error) {\n        console.error(\"获取数据失败:\", error);\n      }\n    },\n    /**\r\n     * 点击表格搜索按钮会触发\r\n     */\n    async SearchClick() {\n      console.log(\"搜索:\", this.searchForm);\n    },\n    /**\r\n     * 点击清空表单会触发\r\n     */\n    async ResetClick() {\n      this.searchForm = {};\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","searchForm","DataList","mounted","GetAppointRoomAppointStatusData","methods","Data","$Post","$nextTick","item","chartDom","document","getElementById","Room","Id","myChart","init","chartData","Array","isArray","option","title","text","left","tooltip","trigger","legend","orient","series","type","radius","map","x","Name","value","Value","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","window","addEventListener","resize","error","console","SearchClick","log","ResetClick"],"sources":["src/views/Admin/AppointRoomAppointStatusData.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-search\" @click=\"SearchClick\">搜 索</el-button>\r\n        <el-button type=\"warning\" size=\"mini\" @click=\"ResetClick\" icon=\"el-icon-s-promotion\">重 置</el-button>\r\n      </div>\r\n      <div class=\"tb-body\">\r\n        <el-form ref=\"searchFormRef\" :model=\"searchForm\" :inline=\"true\" label-width=\"80px\">\r\n          <el-row :gutter=\"10\">\r\n            <el-col :xs=\"24\" :sm=\"12\" :md=\"6\" :lg=\"6\">\r\n              <el-form-item label=\"时间范围\">\r\n                <el-date-picker v-model=\"searchForm.DateRange\" type=\"datetimerange\" start-placeholder=\"起始时间\"\r\n                  end-placeholder=\"结束时间\" :default-time=\"['00:00:00']\" value-format=\"yyyy-MM-dd HH:mm:ss\">\r\n                </el-date-picker>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </div>\r\n    </el-card>\r\n\r\n    <el-row :gutter=\"10\">\r\n      <el-col :span=\"6\" v-for=\"(item, index) in DataList\" :key=\"index\">\r\n        <el-card class=\"box-card margin-top-lg\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>{{ item.Room.Name }}</span>\r\n          </div>\r\n          <div class=\"echart\" :id=\"'echartDiv' + item.Room.Id\"\r\n            :style=\"{ float: 'left', width: '100%', height: '500px' }\">\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n      searchForm: {},\r\n      DataList: [],\r\n\r\n    };\r\n  },\r\n  mounted() {\r\n    this.GetAppointRoomAppointStatusData();\r\n  },\r\n  methods: {\r\n    // 统计早中晚每个自习室的使用率&&空闲率\r\n    async GetAppointRoomAppointStatusData() {\r\n      try {\r\n        let { Data } = await this.$Post('/AppointRecord/GetAppointRoomAppointStatusData', this.searchForm);\r\n        this.DataList = Data || [];\r\n\r\n        // 在 DOM 更新后初始化 ECharts 图表\r\n        this.$nextTick(() => {\r\n          for (let item of this.DataList) {\r\n            const chartDom = document.getElementById(`echartDiv${item.Room.Id}`);\r\n            if (!chartDom) continue; // 确保 DOM 元素存在\r\n\r\n            const myChart = echarts.init(chartDom);\r\n\r\n            // 检查 item.DataList 是否存在且为数组\r\n            const chartData = Array.isArray(item.DataList) ? item.DataList : [];\r\n\r\n            const option = {\r\n              title: {\r\n                text: '预约次数统计',\r\n                left: 'center'\r\n              },\r\n              tooltip: {\r\n                trigger: 'item'\r\n              },\r\n              legend: {\r\n                orient: 'vertical',\r\n                left: 'left'\r\n              },\r\n              series: [\r\n                {\r\n                  name: '预约次数统计',\r\n                  type: 'pie',\r\n                  radius: '50%',\r\n                  data: chartData.map(x => ({\r\n                    name: x.Name,\r\n                    value: x.Value\r\n                  })),\r\n                  emphasis: {\r\n                    itemStyle: {\r\n                      shadowBlur: 10,\r\n                      shadowOffsetX: 0,\r\n                      shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            };\r\n\r\n            myChart.setOption(option); // 渲染图表\r\n\r\n            // 随着屏幕大小调节图表\r\n            window.addEventListener(\"resize\", () => {\r\n              myChart.resize();\r\n            });\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error(\"获取数据失败:\", error);\r\n      }\r\n    },\r\n    /**\r\n     * 点击表格搜索按钮会触发\r\n     */\r\n    async SearchClick() {\r\n      console.log(\"搜索:\", this.searchForm);\r\n    },\r\n    /**\r\n     * 点击清空表单会触发\r\n     */\r\n    async ResetClick() {\r\n      this.searchForm = {\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tb-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 0;\r\n  /* 去掉默认的 margin-bottom */\r\n}\r\n\r\n.echart {\r\n  width: 100%;\r\n  height: 500px;\r\n}\r\n</style>"],"mappings":"AAsCA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,UAAA;MACAC,QAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAC,+BAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,gCAAA;MACA;QACA;UAAAE;QAAA,eAAAC,KAAA,wDAAAN,UAAA;QACA,KAAAC,QAAA,GAAAI,IAAA;;QAEA;QACA,KAAAE,SAAA;UACA,SAAAC,IAAA,SAAAP,QAAA;YACA,MAAAQ,QAAA,GAAAC,QAAA,CAAAC,cAAA,aAAAH,IAAA,CAAAI,IAAA,CAAAC,EAAA;YACA,KAAAJ,QAAA;;YAEA,MAAAK,OAAA,GAAAjB,OAAA,CAAAkB,IAAA,CAAAN,QAAA;;YAEA;YACA,MAAAO,SAAA,GAAAC,KAAA,CAAAC,OAAA,CAAAV,IAAA,CAAAP,QAAA,IAAAO,IAAA,CAAAP,QAAA;YAEA,MAAAkB,MAAA;cACAC,KAAA;gBACAC,IAAA;gBACAC,IAAA;cACA;cACAC,OAAA;gBACAC,OAAA;cACA;cACAC,MAAA;gBACAC,MAAA;gBACAJ,IAAA;cACA;cACAK,MAAA,GACA;gBACA7B,IAAA;gBACA8B,IAAA;gBACAC,MAAA;gBACA9B,IAAA,EAAAiB,SAAA,CAAAc,GAAA,CAAAC,CAAA;kBACAjC,IAAA,EAAAiC,CAAA,CAAAC,IAAA;kBACAC,KAAA,EAAAF,CAAA,CAAAG;gBACA;gBACAC,QAAA;kBACAC,SAAA;oBACAC,UAAA;oBACAC,aAAA;oBACAC,WAAA;kBACA;gBACA;cACA;YAEA;YAEAzB,OAAA,CAAA0B,SAAA,CAAArB,MAAA;;YAEA;YACAsB,MAAA,CAAAC,gBAAA;cACA5B,OAAA,CAAA6B,MAAA;YACA;UACA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IACA;AACA;AACA;IACA,MAAAE,YAAA;MACAD,OAAA,CAAAE,GAAA,aAAA/C,UAAA;IACA;IACA;AACA;AACA;IACA,MAAAgD,WAAA;MACA,KAAAhD,UAAA,IACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}