{"ast":null,"code":"export default {\n  name: 'SIdentify',\n  props: {\n    fontSizeMin: {\n      type: Number,\n      default: 30\n    },\n    fontSizeMax: {\n      type: Number,\n      default: 40\n    },\n    backgroundColorMin: {\n      type: Number,\n      default: 180\n    },\n    backgroundColorMax: {\n      type: Number,\n      default: 240\n    },\n    colorMin: {\n      type: Number,\n      default: 50\n    },\n    colorMax: {\n      type: Number,\n      default: 160\n    },\n    lineColorMin: {\n      type: Number,\n      default: 40\n    },\n    lineColorMax: {\n      type: Number,\n      default: 180\n    },\n    dotColorMin: {\n      type: Number,\n      default: 0\n    },\n    dotColorMax: {\n      type: Number,\n      default: 255\n    },\n    contentWidth: {\n      type: Number,\n      default: 180\n    },\n    contentHeight: {\n      type: Number,\n      default: 40\n    }\n  },\n  data() {\n    return {\n      identifyCode: \"\",\n      identifyCodes: '1234567890'\n    };\n  },\n  // watch: {\n  //     identifyCode() {\n  //         this.drawPic()\n  //     }\n  // },\n  mounted() {\n    this.makeCode(this.identifyCodes, 4);\n    this.drawPic();\n  },\n  methods: {\n    // 生成一个随机数\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    // 生成一个随机的颜色\n    randomColor(min, max) {\n      let r = this.randomNum(min, max);\n      let g = this.randomNum(min, max);\n      let b = this.randomNum(min, max);\n      return 'rgb(' + r + ',' + g + ',' + b + ')';\n    },\n    drawPic() {\n      let canvas = document.getElementById('s-canvas');\n      let ctx = canvas.getContext('2d');\n      ctx.textBaseline = 'bottom';\n      // 绘制背景\n      ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax);\n      ctx.fillRect(0, 0, this.contentWidth, this.contentHeight);\n      // 绘制文字\n      for (let i = 0; i < this.identifyCode.length; i++) {\n        this.drawText(ctx, this.identifyCode[i], i);\n      }\n      this.drawLine(ctx);\n      this.drawDot(ctx);\n    },\n    drawText(ctx, txt, i) {\n      ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax);\n      ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei';\n      let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1));\n      let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5);\n      var deg = this.randomNum(-45, 45);\n      // 修改坐标原点和旋转角度\n      ctx.translate(x, y);\n      ctx.rotate(deg * Math.PI / 180);\n      ctx.fillText(txt, 0, 0);\n      // 恢复坐标原点和旋转角度\n      ctx.rotate(-deg * Math.PI / 180);\n      ctx.translate(-x, -y);\n    },\n    drawLine(ctx) {\n      // 绘制干扰线\n      for (let i = 0; i < 8; i++) {\n        ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax);\n        ctx.beginPath();\n        ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight));\n        ctx.stroke();\n      }\n    },\n    drawDot(ctx) {\n      // 绘制干扰点\n      for (let i = 0; i < 100; i++) {\n        ctx.fillStyle = this.randomColor(0, 255);\n        ctx.beginPath();\n        ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI);\n        ctx.fill();\n      }\n    },\n    // 切换验证码\n    refreshCode() {\n      this.identifyCode = '';\n      this.makeCode(this.identifyCodes, 4);\n      this.drawPic();\n    },\n    randomNum(min, max) {\n      return Math.floor(Math.random() * (max - min) + min);\n    },\n    makeCode(o, l) {\n      for (let i = 0; i < l; i++) {\n        this.identifyCode += this.identifyCodes[this.randomNum(0, this.identifyCodes.length)];\n      }\n    },\n    getCode() {\n      return this.identifyCode;\n    }\n  }\n};","map":{"version":3,"names":["name","props","fontSizeMin","type","Number","default","fontSizeMax","backgroundColorMin","backgroundColorMax","colorMin","colorMax","lineColorMin","lineColorMax","dotColorMin","dotColorMax","contentWidth","contentHeight","data","identifyCode","identifyCodes","mounted","makeCode","drawPic","methods","randomNum","min","max","Math","floor","random","randomColor","r","g","b","canvas","document","getElementById","ctx","getContext","textBaseline","fillStyle","fillRect","i","length","drawText","drawLine","drawDot","txt","font","x","y","deg","translate","rotate","PI","fillText","strokeStyle","beginPath","moveTo","lineTo","stroke","arc","fill","refreshCode","o","l","getCode"],"sources":["src/components/Code/canvas.vue"],"sourcesContent":["<template>\r\n    <div class=\"s-canvas\" @click=\"refreshCode\">\r\n        <canvas id=\"s-canvas\" :width=\"contentWidth\" :height=\"contentHeight\"></canvas>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    name: 'SIdentify',\r\n    props: {\r\n\r\n        fontSizeMin: {\r\n            type: Number,\r\n            default: 30\r\n        },\r\n        fontSizeMax: {\r\n            type: Number,\r\n            default: 40\r\n        },\r\n        backgroundColorMin: {\r\n            type: Number,\r\n            default: 180\r\n        },\r\n        backgroundColorMax: {\r\n            type: Number,\r\n            default: 240\r\n        },\r\n        colorMin: {\r\n            type: Number,\r\n            default: 50\r\n        },\r\n        colorMax: {\r\n            type: Number,\r\n            default: 160\r\n        },\r\n        lineColorMin: {\r\n            type: Number,\r\n            default: 40\r\n        },\r\n        lineColorMax: {\r\n            type: Number,\r\n            default: 180\r\n        },\r\n        dotColorMin: {\r\n            type: Number,\r\n            default: 0\r\n        },\r\n        dotColorMax: {\r\n            type: Number,\r\n            default: 255\r\n        },\r\n        contentWidth: {\r\n            type: Number,\r\n            default: 180\r\n        },\r\n        contentHeight: {\r\n            type: Number,\r\n            default: 40\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            identifyCode: \"\",\r\n            identifyCodes: '1234567890',\r\n        };\r\n    },\r\n    // watch: {\r\n    //     identifyCode() {\r\n    //         this.drawPic()\r\n    //     }\r\n    // },\r\n    mounted() {\r\n        this.makeCode(this.identifyCodes, 4);\r\n        this.drawPic()\r\n    },\r\n\r\n    methods: {\r\n        // 生成一个随机数\r\n        randomNum(min, max) {\r\n            return Math.floor(Math.random() * (max - min) + min)\r\n        },\r\n        // 生成一个随机的颜色\r\n        randomColor(min, max) {\r\n            let r = this.randomNum(min, max)\r\n            let g = this.randomNum(min, max)\r\n            let b = this.randomNum(min, max)\r\n            return 'rgb(' + r + ',' + g + ',' + b + ')'\r\n        },\r\n        drawPic() {\r\n            let canvas = document.getElementById('s-canvas')\r\n            let ctx = canvas.getContext('2d')\r\n            ctx.textBaseline = 'bottom'\r\n            // 绘制背景\r\n            ctx.fillStyle = this.randomColor(this.backgroundColorMin, this.backgroundColorMax)\r\n            ctx.fillRect(0, 0, this.contentWidth, this.contentHeight)\r\n            // 绘制文字\r\n            for (let i = 0; i < this.identifyCode.length; i++) {\r\n                this.drawText(ctx, this.identifyCode[i], i)\r\n            }\r\n            this.drawLine(ctx)\r\n            this.drawDot(ctx)\r\n        },\r\n        drawText(ctx, txt, i) {\r\n            ctx.fillStyle = this.randomColor(this.colorMin, this.colorMax)\r\n            ctx.font = this.randomNum(this.fontSizeMin, this.fontSizeMax) + 'px SimHei'\r\n            let x = (i + 1) * (this.contentWidth / (this.identifyCode.length + 1))\r\n            let y = this.randomNum(this.fontSizeMax, this.contentHeight - 5)\r\n            var deg = this.randomNum(-45, 45)\r\n            // 修改坐标原点和旋转角度\r\n            ctx.translate(x, y)\r\n            ctx.rotate(deg * Math.PI / 180)\r\n            ctx.fillText(txt, 0, 0)\r\n            // 恢复坐标原点和旋转角度\r\n            ctx.rotate(-deg * Math.PI / 180)\r\n            ctx.translate(-x, -y)\r\n        },\r\n        drawLine(ctx) {\r\n            // 绘制干扰线\r\n            for (let i = 0; i < 8; i++) {\r\n                ctx.strokeStyle = this.randomColor(this.lineColorMin, this.lineColorMax)\r\n                ctx.beginPath()\r\n                ctx.moveTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n                ctx.lineTo(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight))\r\n                ctx.stroke()\r\n            }\r\n        },\r\n        drawDot(ctx) {\r\n            // 绘制干扰点\r\n            for (let i = 0; i < 100; i++) {\r\n                ctx.fillStyle = this.randomColor(0, 255)\r\n                ctx.beginPath()\r\n                ctx.arc(this.randomNum(0, this.contentWidth), this.randomNum(0, this.contentHeight), 1, 0, 2 * Math.PI)\r\n                ctx.fill()\r\n            }\r\n        },\r\n        // 切换验证码\r\n        refreshCode() {\r\n\r\n            this.identifyCode = ''\r\n            this.makeCode(this.identifyCodes, 4)\r\n            this.drawPic()\r\n        },\r\n        randomNum(min, max) {\r\n            return Math.floor(Math.random() * (max - min) + min)\r\n        },\r\n        makeCode(o, l) {\r\n            for (let i = 0; i < l; i++) {\r\n                this.identifyCode += this.identifyCodes[\r\n                    this.randomNum(0, this.identifyCodes.length)]\r\n            }\r\n        },\r\n        getCode() {\r\n            return this.identifyCode;\r\n        },\r\n\r\n\r\n    },\r\n\r\n}\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}