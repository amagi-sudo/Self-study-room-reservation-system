{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  props: {},\n  data() {\n    return {\n      myChart: null\n    };\n  },\n  created() {},\n  mounted() {\n    this.GetAppointRoomUseRate();\n    this.LoadData();\n  },\n  methods: {\n    async GetAppointRoomUseRate() {},\n    LoadData() {\n      let option = {\n        title: {\n          text: '堆叠区域图'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        legend: {\n          data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        }],\n        yAxis: [{\n          type: 'value'\n        }],\n        series: [{\n          name: '邮件营销',\n          type: 'line',\n          stack: '总量',\n          areaStyle: {},\n          data: [120, 132, 101, 134, 90, 230, 210]\n        }, {\n          name: '联盟广告',\n          type: 'line',\n          stack: '总量',\n          areaStyle: {},\n          data: [220, 182, 191, 234, 290, 330, 310]\n        }, {\n          name: '视频广告',\n          type: 'line',\n          stack: '总量',\n          areaStyle: {},\n          data: [150, 232, 201, 154, 190, 330, 410]\n        }, {\n          name: '直接访问',\n          type: 'line',\n          stack: '总量',\n          areaStyle: {},\n          data: [320, 332, 301, 334, 390, 330, 320]\n        }, {\n          name: '搜索引擎',\n          type: 'line',\n          stack: '总量',\n          label: {\n            normal: {\n              show: true,\n              position: 'top'\n            }\n          },\n          areaStyle: {},\n          data: [820, 932, 901, 934, 1290, 1330, 1320]\n        }]\n      };\n      this.myChart = echarts.init(document.getElementById(\"echartDiv\")); // 图标初始化\n      this.myChart.setOption(option); // 渲染页面\n      //随着屏幕大小调节图表\n      window.addEventListener(\"resize\", () => {\n        this.myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","props","data","myChart","created","mounted","GetAppointRoomUseRate","LoadData","methods","option","title","text","tooltip","trigger","axisPointer","type","label","backgroundColor","legend","toolbox","feature","saveAsImage","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","stack","areaStyle","normal","show","position","init","document","getElementById","setOption","window","addEventListener","resize"],"sources":["src/views/Admin/Home.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"echart\" id=\"echartDiv\" :style=\"{ float: 'left', width: '100%', height: '500px' }\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: 'Home',\r\n  props: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      myChart: null\r\n    };\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n    this.GetAppointRoomUseRate();\r\n    this.LoadData();\r\n  },\r\n  methods: {\r\n    async GetAppointRoomUseRate() {\r\n\r\n    },\r\n    LoadData() {\r\n      let option = {\r\n        title: {\r\n          text: '堆叠区域图'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        legend: {\r\n          data: ['邮件营销', '联盟广告', '视频广告', '直接访问', '搜索引擎']\r\n        },\r\n        toolbox: {\r\n          feature: {\r\n            saveAsImage: {}\r\n          }\r\n        },\r\n        grid: {\r\n          left: '3%',\r\n          right: '4%',\r\n          bottom: '3%',\r\n          containLabel: true\r\n        },\r\n        xAxis: [\r\n          {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\r\n          }\r\n        ],\r\n        yAxis: [\r\n          {\r\n            type: 'value'\r\n          }\r\n        ],\r\n        series: [\r\n          {\r\n            name: '邮件营销',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [120, 132, 101, 134, 90, 230, 210]\r\n          },\r\n          {\r\n            name: '联盟广告',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [220, 182, 191, 234, 290, 330, 310]\r\n          },\r\n          {\r\n            name: '视频广告',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [150, 232, 201, 154, 190, 330, 410]\r\n          },\r\n          {\r\n            name: '直接访问',\r\n            type: 'line',\r\n            stack: '总量',\r\n            areaStyle: {},\r\n            data: [320, 332, 301, 334, 390, 330, 320]\r\n          },\r\n          {\r\n            name: '搜索引擎',\r\n            type: 'line',\r\n            stack: '总量',\r\n            label: {\r\n              normal: {\r\n                show: true,\r\n                position: 'top'\r\n              }\r\n            },\r\n            areaStyle: {},\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320]\r\n          }\r\n        ]\r\n      }; this.myChart = echarts.init(document.getElementById(\"echartDiv\"));// 图标初始化\r\n      this.myChart.setOption(option);// 渲染页面\r\n      //随着屏幕大小调节图表\r\n      window.addEventListener(\"resize\", () => {\r\n        this.myChart.resize();\r\n      });\r\n\r\n\r\n    }\r\n  }\r\n}       \r\n</script>\r\n\r\n\r\n<style scoped></style>"],"mappings":"AAQA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA,GAEA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,QAAA;IACA,KAAAC,qBAAA;IACA,KAAAC,QAAA;EACA;EACAC,OAAA;IACA,MAAAF,sBAAA,GAEA;IACAC,SAAA;MACA,IAAAE,MAAA;QACAC,KAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;YACAC,IAAA;YACAC,KAAA;cACAC,eAAA;YACA;UACA;QACA;QACAC,MAAA;UACAhB,IAAA;QACA;QACAiB,OAAA;UACAC,OAAA;YACAC,WAAA;UACA;QACA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA,GACA;UACAZ,IAAA;UACAa,WAAA;UACA1B,IAAA;QACA,EACA;QACA2B,KAAA,GACA;UACAd,IAAA;QACA,EACA;QACAe,MAAA,GACA;UACA9B,IAAA;UACAe,IAAA;UACAgB,KAAA;UACAC,SAAA;UACA9B,IAAA;QACA,GACA;UACAF,IAAA;UACAe,IAAA;UACAgB,KAAA;UACAC,SAAA;UACA9B,IAAA;QACA,GACA;UACAF,IAAA;UACAe,IAAA;UACAgB,KAAA;UACAC,SAAA;UACA9B,IAAA;QACA,GACA;UACAF,IAAA;UACAe,IAAA;UACAgB,KAAA;UACAC,SAAA;UACA9B,IAAA;QACA,GACA;UACAF,IAAA;UACAe,IAAA;UACAgB,KAAA;UACAf,KAAA;YACAiB,MAAA;cACAC,IAAA;cACAC,QAAA;YACA;UACA;UACAH,SAAA;UACA9B,IAAA;QACA;MAEA;MAAA,KAAAC,OAAA,GAAAJ,OAAA,CAAAqC,IAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,KAAAnC,OAAA,CAAAoC,SAAA,CAAA9B,MAAA;MACA;MACA+B,MAAA,CAAAC,gBAAA;QACA,KAAAtC,OAAA,CAAAuC,MAAA;MACA;IAGA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}