{"ast":null,"code":"// 引入样式\nimport 'quill/dist/quill.core.css';\nimport 'quill/dist/quill.snow.css';\nimport 'quill/dist/quill.bubble.css';\nimport { quillEditor } from 'vue-quill-editor';\nimport Quill from 'quill';\nimport ImageResize from 'quill-image-resize-module';\nQuill.register('modules/imageResize', ImageResize);\nconst toolbarOptions = [['bold', 'italic', 'underline', 'strike'],\n//加粗，斜体，下划线，删除线\n['blockquote', 'code-block'],\n//引用，代码块\n[{\n  'header': 1\n}, {\n  'header': 2\n}],\n// 标题，键值对的形式；1、2表示字体大小\n[{\n  'list': 'ordered'\n}, {\n  'list': 'bullet'\n}],\n//列表\n[{\n  'script': 'sub'\n}, {\n  'script': 'super'\n}],\n// 上下标\n[{\n  'indent': '-1'\n}, {\n  'indent': '+1'\n}],\n// 缩进\n[{\n  'direction': 'rtl'\n}],\n// 文本方向\n[{\n  'size': ['small', false, 'large', 'huge']\n}],\n// 字体大小\n[{\n  'header': [1, 2, 3, 4, 5, 6, false]\n}],\n//几级标题\n[{\n  'color': []\n}, {\n  'background': []\n}],\n// 字体颜色，字体背景颜色\n[{\n  'font': []\n}],\n//字体\n[{\n  'align': []\n}],\n//对齐方式\n['clean'],\n//清除字体样式\n['image'] //上传图片、\n];\nexport default {\n  name: \"QillRichText\",\n  props: {\n    value: {\n      type: String,\n      default: ''\n    }\n  },\n  components: {\n    \"quill-editor\": quillEditor\n  },\n  data() {\n    let that = this;\n    return {\n      content: ``,\n      //双向数据绑定数据\n      editorOption: {\n        modules: {\n          toolbar: {\n            container: toolbarOptions,\n            // 工具栏\n\n            handlers: {\n              'image': function (value) {\n                that.$refs[\"upload\"].$refs[\"upload-inner\"].handleClick();\n              }\n            }\n          },\n          imageResize: {\n            //添加\n            displayStyles: {\n              //添加\n              backgroundColor: 'black',\n              border: 'none',\n              color: 'white'\n            },\n            modules: ['Resize', 'DisplaySize', 'Toolbar'] //添加\n          }\n        } //\n      },\n      //编辑器配置项\n      uploadUrl: process.env.VUE_APP_BASE_API + \"/File/BatchUpload\",\n      fileList: []\n    };\n  },\n  created() {\n    console.log(\"aa\", this.value);\n    this.content = this.value;\n  },\n  methods: {\n    handleSuccess(res) {\n      console.log(res);\n      // 获取富文本组件实例\n      let quill = this.$refs.myQuillEditor.quill;\n\n      // 如果上传成功\n      if (res.Success == true) {\n        res.Data.forEach(item => {\n          // 获取光标所在位置\n          let length = quill.getSelection().index;\n          // 插入图片，url为服务器返回的图片链接地址\n          quill.insertEmbed(length, 'image', item.Url);\n          // 调整光标到最后\n          quill.setSelection(length + 1);\n        });\n      } else {\n        // 提示信息，需引入Message\n        this.$message.error('图片插入失败');\n      }\n    },\n    onEditorBlur() {},\n    // 失去焦点触发事件\n    onEditorFocus() {},\n    // 获得焦点触发事件\n    onEditorChange() {\n      this.$emit('input', this.content);\n    } // 内容改变触发事件\n  }\n};","map":{"version":3,"names":["quillEditor","Quill","ImageResize","register","toolbarOptions","name","props","value","type","String","default","components","data","that","content","editorOption","modules","toolbar","container","handlers","image","$refs","handleClick","imageResize","displayStyles","backgroundColor","border","color","uploadUrl","process","env","VUE_APP_BASE_API","fileList","created","console","log","methods","handleSuccess","res","quill","myQuillEditor","Success","Data","forEach","item","length","getSelection","index","insertEmbed","Url","setSelection","$message","error","onEditorBlur","onEditorFocus","onEditorChange","$emit"],"sources":["src/components/RichText/QillRichText.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-upload v-show='false' :on-success='handleSuccess' ref=\"upload\" :limit=\"8\" :multiple=\"true\"\r\n            accept=\".jpg,.png,.jpeg\" :action=\"uploadUrl\">\r\n        </el-upload>\r\n        <quill-editor v-model=\"content\" ref=\"myQuillEditor\" :options=\"editorOption\" @blur=\"onEditorBlur($event)\"\r\n            @focus=\"onEditorFocus($event)\" @change=\"onEditorChange($event)\">\r\n        </quill-editor>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n// 引入样式\r\nimport 'quill/dist/quill.core.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport 'quill/dist/quill.bubble.css'\r\n\r\nimport { quillEditor } from 'vue-quill-editor'\r\n\r\nimport Quill from 'quill'\r\nimport ImageResize from 'quill-image-resize-module'\r\nQuill.register('modules/imageResize', ImageResize)\r\n\r\nconst toolbarOptions = [\r\n    ['bold', 'italic', 'underline', 'strike'], //加粗，斜体，下划线，删除线\r\n    ['blockquote', 'code-block'], //引用，代码块\r\n    [{ 'header': 1 }, { 'header': 2 }], // 标题，键值对的形式；1、2表示字体大小\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' }], //列表\r\n    [{ 'script': 'sub' }, { 'script': 'super' }], // 上下标\r\n    [{ 'indent': '-1' }, { 'indent': '+1' }], // 缩进\r\n    [{ 'direction': 'rtl' }], // 文本方向\r\n    [{ 'size': ['small', false, 'large', 'huge'] }], // 字体大小\r\n    [{ 'header': [1, 2, 3, 4, 5, 6, false] }], //几级标题\r\n    [{ 'color': [] }, { 'background': [] }], // 字体颜色，字体背景颜色\r\n    [{ 'font': [] }], //字体\r\n    [{ 'align': [] }], //对齐方式\r\n    ['clean'], //清除字体样式\r\n    ['image'] //上传图片、\r\n];\r\nexport default {\r\n    name: \"QillRichText\",\r\n    props: {\r\n        value: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n    },\r\n    components: {\r\n        \"quill-editor\": quillEditor\r\n    },\r\n\r\n    data() {\r\n        let that = this;\r\n        return {\r\n            content: ``, //双向数据绑定数据\r\n            editorOption: {\r\n                modules: {\r\n                    toolbar: {\r\n                        container: toolbarOptions, // 工具栏\r\n\r\n                        handlers: {\r\n                            'image': function (value) {\r\n                                that.$refs[\"upload\"].$refs[\"upload-inner\"].handleClick()\r\n                            }\r\n                        }\r\n                    },\r\n                    imageResize: { //添加\r\n                        displayStyles: { //添加\r\n                            backgroundColor: 'black',\r\n                            border: 'none',\r\n                            color: 'white'\r\n                        },\r\n                        modules: ['Resize', 'DisplaySize', 'Toolbar'] //添加\r\n                    },\r\n\r\n                }, //\r\n            }, //编辑器配置项\r\n            uploadUrl: process.env.VUE_APP_BASE_API + \"/File/BatchUpload\",\r\n            fileList: []\r\n        };\r\n    },\r\n    created() {\r\n        console.log(\"aa\", this.value)\r\n        this.content = this.value;\r\n\r\n    },\r\n    methods: {\r\n        handleSuccess(res) {\r\n            console.log(res);\r\n            // 获取富文本组件实例\r\n            let quill = this.$refs.myQuillEditor.quill;\r\n\r\n            // 如果上传成功\r\n            if (res.Success == true) {\r\n                res.Data.forEach((item) => {\r\n                    // 获取光标所在位置\r\n                    let length = quill.getSelection().index;\r\n                    // 插入图片，url为服务器返回的图片链接地址\r\n                    quill.insertEmbed(length, 'image', item.Url);\r\n                    // 调整光标到最后\r\n                    quill.setSelection(length + 1);\r\n                })\r\n\r\n            } else {\r\n                // 提示信息，需引入Message\r\n                this.$message.error('图片插入失败');\r\n            }\r\n        },\r\n        onEditorBlur() { }, // 失去焦点触发事件\r\n        onEditorFocus() { }, // 获得焦点触发事件\r\n        onEditorChange() {\r\n            this.$emit('input', this.content);\r\n        }, // 内容改变触发事件\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.ql-editor {\r\n    height: 600px;\r\n}\r\n</style>"],"mappings":"AAcA;AACA;AACA;AACA;AAEA,SAAAA,WAAA;AAEA,OAAAC,KAAA;AACA,OAAAC,WAAA;AACAD,KAAA,CAAAE,QAAA,wBAAAD,WAAA;AAEA,MAAAE,cAAA,IACA;AAAA;AACA;AAAA;AACA;EAAA;AAAA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;AAAA;AACA;EAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA,CACA;AACA;EACAC,IAAA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;EACA;EACAC,UAAA;IACA,gBAAAX;EACA;EAEAY,KAAA;IACA,IAAAC,IAAA;IACA;MACAC,OAAA;MAAA;MACAC,YAAA;QACAC,OAAA;UACAC,OAAA;YACAC,SAAA,EAAAd,cAAA;YAAA;;YAEAe,QAAA;cACA,kBAAAC,CAAAb,KAAA;gBACAM,IAAA,CAAAQ,KAAA,WAAAA,KAAA,iBAAAC,WAAA;cACA;YACA;UACA;UACAC,WAAA;YAAA;YACAC,aAAA;cAAA;cACAC,eAAA;cACAC,MAAA;cACAC,KAAA;YACA;YACAX,OAAA;UACA;QAEA;MACA;MAAA;MACAY,SAAA,EAAAC,OAAA,CAAAC,GAAA,CAAAC,gBAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA,YAAA5B,KAAA;IACA,KAAAO,OAAA,QAAAP,KAAA;EAEA;EACA6B,OAAA;IACAC,cAAAC,GAAA;MACAJ,OAAA,CAAAC,GAAA,CAAAG,GAAA;MACA;MACA,IAAAC,KAAA,QAAAlB,KAAA,CAAAmB,aAAA,CAAAD,KAAA;;MAEA;MACA,IAAAD,GAAA,CAAAG,OAAA;QACAH,GAAA,CAAAI,IAAA,CAAAC,OAAA,CAAAC,IAAA;UACA;UACA,IAAAC,MAAA,GAAAN,KAAA,CAAAO,YAAA,GAAAC,KAAA;UACA;UACAR,KAAA,CAAAS,WAAA,CAAAH,MAAA,WAAAD,IAAA,CAAAK,GAAA;UACA;UACAV,KAAA,CAAAW,YAAA,CAAAL,MAAA;QACA;MAEA;QACA;QACA,KAAAM,QAAA,CAAAC,KAAA;MACA;IACA;IACAC,aAAA;IAAA;IACAC,cAAA;IAAA;IACAC,eAAA;MACA,KAAAC,KAAA,eAAA1C,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}