{"ast":null,"code":"import axios from 'axios';\nimport { MessageBox, Message } from 'element-ui';\nimport store from '@/store';\nimport { getToken } from '@/utils/cache';\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // 请求的url地址\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 //请求超时时间\n});\n\n// request interceptor\nservice.interceptors.request.use(config => {\n  let token = getToken();\n  if (token) {\n    config.headers['Authorization'] = token;\n  }\n  return config;\n}, error => {\n  // do something with request error\n  console.log(error); // for debug\n  return Promise.reject(error);\n});\n\n// response interceptor\nservice.interceptors.response.use(response => {\n  const res = response.data;\n  let {\n    Success,\n    Code,\n    Msg\n  } = res;\n  if (Success == true) {\n    return res;\n  } else {\n    if (Code == 500) {\n      Message({\n        message: Msg,\n        type: 'error',\n        duration: 5 * 1000\n      });\n      return res;\n    } else if (Code == 401) {\n      Message({\n        message: '用户信息已过期',\n        type: 'error',\n        duration: 5 * 1000\n      });\n      store.dispatch('Logout').then(() => {\n        location.reload();\n      });\n      return Promise.reject(new Error(error || 'Error'));\n    } else {\n      return Promise.reject(new Error(Msg || 'Error'));\n    }\n  }\n}, error => {\n  //如果网络错误就是后端没有启动\n  if (error.message.indexOf(\"Network Error\") != -1) {\n    Message({\n      message: '后端服务没有启动',\n      type: 'error',\n      duration: 5 * 1000\n    });\n    return Promise.reject(new Error(error || 'Error'));\n  }\n  console.log('err' + error); // for debug\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","MessageBox","Message","store","getToken","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","token","headers","error","console","log","Promise","reject","response","res","data","Success","Code","Msg","message","type","duration","dispatch","then","location","reload","Error","indexOf"],"sources":["D:/自习室预约系统/RoomAppoint.elementui/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport { MessageBox, Message } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/cache'\n\n// create an axios instance\nconst service = axios.create({\n  baseURL: process.env.VUE_APP_BASE_API, // 请求的url地址\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 5000 //请求超时时间\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n\n    let token = getToken();\n    if (token) {\n      config.headers['Authorization'] = token;\n    }\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n\n  response => {\n    const res = response.data\n    let { Success, Code, Msg } = res;\n\n\n    if (Success == true) {\n      return res;\n    }\n    else {\n      if (Code == 500) {\n        Message({\n          message: Msg,\n          type: 'error',\n          duration: 5 * 1000\n        })\n        return res\n\n      }\n      else if (Code == 401) {\n        Message({\n          message: '用户信息已过期',\n          type: 'error',\n          duration: 5 * 1000\n        })\n        store.dispatch('Logout').then(() => {\n          location.reload()\n        })\n        return Promise.reject(new Error(error || 'Error'))\n      }\n      else {\n        return Promise.reject(new Error(Msg || 'Error'))\n      }\n\n    }\n\n  },\n  error => {\n    //如果网络错误就是后端没有启动\n    if (error.message.indexOf(\"Network Error\") != -1) {\n      Message({\n        message: '后端服务没有启动',\n        type: 'error',\n        duration: 5 * 1000\n      })\n\n      return Promise.reject(new Error(error || 'Error'))\n    }\n\n    console.log('err' + error) // for debug\n    Message({\n      message: error.message,\n      type: 'error',\n      duration: 5 * 1000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,OAAO,QAAQ,YAAY;AAChD,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,QAAQ,QAAQ,eAAe;;AAExC;AACA,MAAMC,OAAO,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,gBAAgB;EAAE;EACvC;EACAC,OAAO,EAAE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC9BC,MAAM,IAAI;EAER,IAAIC,KAAK,GAAGZ,QAAQ,CAAC,CAAC;EACtB,IAAIY,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAAC,eAAe,CAAC,GAAGD,KAAK;EACzC;EACA,OAAOD,MAAM;AACf,CAAC,EACDG,KAAK,IAAI;EACP;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,EAAC;EACnB,OAAOG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,OAAO,CAACO,YAAY,CAACW,QAAQ,CAACT,GAAG,CAE/BS,QAAQ,IAAI;EACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAI;IAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAI,CAAC,GAAGJ,GAAG;EAGhC,IAAIE,OAAO,IAAI,IAAI,EAAE;IACnB,OAAOF,GAAG;EACZ,CAAC,MACI;IACH,IAAIG,IAAI,IAAI,GAAG,EAAE;MACfzB,OAAO,CAAC;QACN2B,OAAO,EAAED,GAAG;QACZE,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE,CAAC,GAAG;MAChB,CAAC,CAAC;MACF,OAAOP,GAAG;IAEZ,CAAC,MACI,IAAIG,IAAI,IAAI,GAAG,EAAE;MACpBzB,OAAO,CAAC;QACN2B,OAAO,EAAE,SAAS;QAClBC,IAAI,EAAE,OAAO;QACbC,QAAQ,EAAE,CAAC,GAAG;MAChB,CAAC,CAAC;MACF5B,KAAK,CAAC6B,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAC,MAAM;QAClCC,QAAQ,CAACC,MAAM,CAAC,CAAC;MACnB,CAAC,CAAC;MACF,OAAOd,OAAO,CAACC,MAAM,CAAC,IAAIc,KAAK,CAAClB,KAAK,IAAI,OAAO,CAAC,CAAC;IACpD,CAAC,MACI;MACH,OAAOG,OAAO,CAACC,MAAM,CAAC,IAAIc,KAAK,CAACR,GAAG,IAAI,OAAO,CAAC,CAAC;IAClD;EAEF;AAEF,CAAC,EACDV,KAAK,IAAI;EACP;EACA,IAAIA,KAAK,CAACW,OAAO,CAACQ,OAAO,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE;IAChDnC,OAAO,CAAC;MACN2B,OAAO,EAAE,UAAU;MACnBC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;IAEF,OAAOV,OAAO,CAACC,MAAM,CAAC,IAAIc,KAAK,CAAClB,KAAK,IAAI,OAAO,CAAC,CAAC;EACpD;EAEAC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,KAAK,CAAC,EAAC;EAC3BhB,OAAO,CAAC;IACN2B,OAAO,EAAEX,KAAK,CAACW,OAAO;IACtBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOV,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}