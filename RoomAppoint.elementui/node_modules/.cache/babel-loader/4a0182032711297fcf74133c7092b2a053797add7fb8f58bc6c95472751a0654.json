{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  data() {\n    return {};\n  },\n  mounted() {\n    this.GetIntegralConsumeAndGainChart();\n  },\n  methods: {\n    // 统计最近30天积分的消耗和获取的折线图\n    async GetIntegralConsumeAndGainChart() {\n      let {\n        Data\n      } = await this.$Post('/Integral/GetIntegralConsumeAndGainChart', this.searchForm);\n      console.log(Data);\n      this.$nextTick(() => {\n        let myChart = echarts.init(document.getElementById(`GetIntegralConsumeAndGainChart`)); // 图标初始化\n\n        var option = {\n          title: {\n            text: '最近30天积分的获取和使用'\n          },\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {},\n          toolbox: {\n            show: true,\n            feature: {\n              dataZoom: {\n                yAxisIndex: 'none'\n              },\n              dataView: {\n                readOnly: false\n              },\n              magicType: {\n                type: ['line', 'bar']\n              },\n              restore: {},\n              saveAsImage: {}\n            }\n          },\n          xAxis: {\n            type: 'category',\n            boundaryGap: false,\n            data: Data.map(x => x.Date)\n          },\n          yAxis: {\n            type: 'value',\n            axisLabel: {\n              formatter: '{value} 积分'\n            }\n          },\n          series: [{\n            name: '获取积分',\n            type: 'line',\n            data: Data.map(x => x.GainIntegral),\n            markPoint: {\n              data: [{\n                type: 'max',\n                name: 'Max'\n              }, {\n                type: 'min',\n                name: 'Min'\n              }]\n            },\n            markLine: {\n              data: [{\n                type: 'average',\n                name: 'Avg'\n              }]\n            }\n          }, {\n            name: '使用积分',\n            type: 'line',\n            data: Data.map(x => x.UseIntegral),\n            markPoint: {\n              data: [{\n                name: '月最低',\n                value: -2,\n                xAxis: 1,\n                yAxis: -1.5\n              }]\n            },\n            markLine: {\n              data: [{\n                type: 'average',\n                name: 'Avg'\n              }, [{\n                symbol: 'none',\n                x: '90%',\n                yAxis: 'max'\n              }, {\n                symbol: 'circle',\n                label: {\n                  position: 'start',\n                  formatter: 'Max'\n                },\n                type: 'max',\n                name: '最高点'\n              }]]\n            }\n          }]\n        };\n        myChart.setOption(option); // 渲染页面\n        //随着屏幕大小调节图表\n        window.addEventListener(\"resize\", () => {\n          myChart.resize();\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","data","mounted","GetIntegralConsumeAndGainChart","methods","Data","$Post","searchForm","console","log","$nextTick","myChart","init","document","getElementById","option","title","text","tooltip","trigger","legend","toolbox","show","feature","dataZoom","yAxisIndex","dataView","readOnly","magicType","type","restore","saveAsImage","xAxis","boundaryGap","map","x","Date","yAxis","axisLabel","formatter","series","GainIntegral","markPoint","markLine","UseIntegral","value","symbol","label","position","setOption","window","addEventListener","resize"],"sources":["src/views/Admin/GetIntegralConsumeAndGainChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div class=\"echart Card\" id=\"GetIntegralConsumeAndGainChart\"\r\n      :style=\"{ float: 'left', width: '100%', height: '500px' }\">\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n\r\n\r\n    };\r\n  },\r\n  mounted() {\r\n    this.GetIntegralConsumeAndGainChart();\r\n\r\n  },\r\n  methods: {\r\n    // 统计最近30天积分的消耗和获取的折线图\r\n    async GetIntegralConsumeAndGainChart() {\r\n      let { Data } = await this.$Post('/Integral/GetIntegralConsumeAndGainChart', this.searchForm);\r\n      console.log(Data);\r\n\r\n\r\n\r\n      this.$nextTick(() => {\r\n\r\n        let myChart = echarts.init(document.getElementById(`GetIntegralConsumeAndGainChart`));// 图标初始化\r\n\r\n        var option = {\r\n          title: {\r\n            text: '最近30天积分的获取和使用'\r\n          },\r\n          tooltip: {\r\n            trigger: 'axis'\r\n          },\r\n          legend: {},\r\n          toolbox: {\r\n            show: true,\r\n            feature: {\r\n              dataZoom: {\r\n                yAxisIndex: 'none'\r\n              },\r\n              dataView: { readOnly: false },\r\n              magicType: { type: ['line', 'bar'] },\r\n              restore: {},\r\n              saveAsImage: {}\r\n            }\r\n          },\r\n          xAxis: {\r\n            type: 'category',\r\n            boundaryGap: false,\r\n            data: Data.map(x => x.Date)\r\n          },\r\n          yAxis: {\r\n            type: 'value',\r\n            axisLabel: {\r\n              formatter: '{value} 积分'\r\n            }\r\n          },\r\n          series: [\r\n            {\r\n              name: '获取积分',\r\n              type: 'line',\r\n              data: Data.map(x => x.GainIntegral),\r\n              markPoint: {\r\n                data: [\r\n                  { type: 'max', name: 'Max' },\r\n                  { type: 'min', name: 'Min' }\r\n                ]\r\n              },\r\n              markLine: {\r\n                data: [{ type: 'average', name: 'Avg' }]\r\n              }\r\n            },\r\n            {\r\n              name: '使用积分',\r\n              type: 'line',\r\n              data: Data.map(x => x.UseIntegral),\r\n              markPoint: {\r\n                data: [{ name: '月最低', value: -2, xAxis: 1, yAxis: -1.5 }]\r\n              },\r\n              markLine: {\r\n                data: [\r\n                  { type: 'average', name: 'Avg' },\r\n                  [\r\n                    {\r\n                      symbol: 'none',\r\n                      x: '90%',\r\n                      yAxis: 'max'\r\n                    },\r\n                    {\r\n                      symbol: 'circle',\r\n                      label: {\r\n                        position: 'start',\r\n                        formatter: 'Max'\r\n                      },\r\n                      type: 'max',\r\n                      name: '最高点'\r\n                    }\r\n                  ]\r\n                ]\r\n              }\r\n            }\r\n          ]\r\n        };\r\n\r\n        myChart.setOption(option);// 渲染页面\r\n        //随着屏幕大小调节图表\r\n        window.addEventListener(\"resize\", () => {\r\n          myChart.resize();\r\n        });\r\n\r\n      })\r\n    },\r\n\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.box-card {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.tb-body {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.el-form-item {\r\n  margin-bottom: 0;\r\n  /* 去掉默认的 margin-bottom */\r\n}\r\n\r\n.echart {\r\n  width: 100%;\r\n  height: 500px;\r\n}\r\n</style>"],"mappings":"AAWA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA,QAGA;EACA;EACAC,QAAA;IACA,KAAAC,8BAAA;EAEA;EACAC,OAAA;IACA;IACA,MAAAD,+BAAA;MACA;QAAAE;MAAA,eAAAC,KAAA,kDAAAC,UAAA;MACAC,OAAA,CAAAC,GAAA,CAAAJ,IAAA;MAIA,KAAAK,SAAA;QAEA,IAAAC,OAAA,GAAAZ,OAAA,CAAAa,IAAA,CAAAC,QAAA,CAAAC,cAAA;;QAEA,IAAAC,MAAA;UACAC,KAAA;YACAC,IAAA;UACA;UACAC,OAAA;YACAC,OAAA;UACA;UACAC,MAAA;UACAC,OAAA;YACAC,IAAA;YACAC,OAAA;cACAC,QAAA;gBACAC,UAAA;cACA;cACAC,QAAA;gBAAAC,QAAA;cAAA;cACAC,SAAA;gBAAAC,IAAA;cAAA;cACAC,OAAA;cACAC,WAAA;YACA;UACA;UACAC,KAAA;YACAH,IAAA;YACAI,WAAA;YACAhC,IAAA,EAAAI,IAAA,CAAA6B,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,IAAA;UACA;UACAC,KAAA;YACAR,IAAA;YACAS,SAAA;cACAC,SAAA;YACA;UACA;UACAC,MAAA,GACA;YACAxC,IAAA;YACA6B,IAAA;YACA5B,IAAA,EAAAI,IAAA,CAAA6B,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAM,YAAA;YACAC,SAAA;cACAzC,IAAA,GACA;gBAAA4B,IAAA;gBAAA7B,IAAA;cAAA,GACA;gBAAA6B,IAAA;gBAAA7B,IAAA;cAAA;YAEA;YACA2C,QAAA;cACA1C,IAAA;gBAAA4B,IAAA;gBAAA7B,IAAA;cAAA;YACA;UACA,GACA;YACAA,IAAA;YACA6B,IAAA;YACA5B,IAAA,EAAAI,IAAA,CAAA6B,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAS,WAAA;YACAF,SAAA;cACAzC,IAAA;gBAAAD,IAAA;gBAAA6C,KAAA;gBAAAb,KAAA;gBAAAK,KAAA;cAAA;YACA;YACAM,QAAA;cACA1C,IAAA,GACA;gBAAA4B,IAAA;gBAAA7B,IAAA;cAAA,GACA,CACA;gBACA8C,MAAA;gBACAX,CAAA;gBACAE,KAAA;cACA,GACA;gBACAS,MAAA;gBACAC,KAAA;kBACAC,QAAA;kBACAT,SAAA;gBACA;gBACAV,IAAA;gBACA7B,IAAA;cACA,EACA;YAEA;UACA;QAEA;QAEAW,OAAA,CAAAsC,SAAA,CAAAlC,MAAA;QACA;QACAmC,MAAA,CAAAC,gBAAA;UACAxC,OAAA,CAAAyC,MAAA;QACA;MAEA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}