{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport store from '@/store';\nimport { mapGetters } from 'vuex';\nexport default {\n  name: \"SeatList\",\n  computed: {\n    ...mapGetters(['Token', 'UserInfo', 'RoleType', 'HasUserInfo', 'ColumnType', \"UserId\"])\n  },\n  data() {\n    return {\n      where: {},\n      searchForm: {},\n      //搜索定义的数据对象\n      dataColum: [{\n        key: \"Id\",\n        hidden: true\n      }, {\n        key: \"No\",\n        title: \"编号\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"Row\",\n        title: \"行\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"Col\",\n        title: \"列\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"IsMaintain\",\n        title: \"是否维修\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        key: \"RoomId\",\n        hidden: true\n      }, {\n        key: \"RoomDto.Name\",\n        title: \"自习室名称\",\n        type: store.getters.ColumnType.SHORTTEXT\n      }, {\n        title: \"操作\",\n        width: \"300px\",\n        key: \"Operate\",\n        type: store.getters.ColumnType.USERDEFINED\n      }],\n      editModalFormRules: {\n        \"No\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"RoomId\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"IsMaintain\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"Row\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }],\n        \"Col\": [{\n          required: true,\n          message: '该项为必填项',\n          trigger: 'blur'\n        }]\n      },\n      formData: {},\n      //保存或者修改定义的数据对象\n      editorShow: false,\n      batchEditShow: false\n    };\n  },\n  created() {},\n  methods: {\n    //修改属性\n    async UpdateEntityAsync(Id, title, data) {\n      let {\n        Data\n      } = await this.$PostSigleUpdate(`/Seat/Get`, `/Seat/CreateOrEdit`, Id, title, data);\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击新增或者编辑的时候会触发\n     */\n    async ShowEditModal(Id) {\n      let {\n        Data\n      } = await this.$Post(`/Seat/Get`, {\n        Id: Id\n      });\n      this.formData = Data;\n      this.editorShow = true;\n    },\n    /**\n     * 点击保存的时候会触发\n     */\n    async CreateOrEditForm() {\n      this.$refs.editModalForm.validate(async valid => {\n        if (valid) {\n          var {\n            Success\n          } = await this.$Post(`/Seat/CreateOrEdit`, this.formData);\n          if (Success) {\n            this.editorShow = false;\n            this.$refs.PaginationTableId.Reload(this.searchForm);\n          }\n        }\n      });\n    },\n    /**\n     * 单个删除的时候会触发\n     */\n    async ShowDeleteModal(Id) {\n      await this.$PostDelete(`/Seat/Delete`, {\n        Id: Id\n      });\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n    * 批量弹窗 \n    * */\n    async BatchShowEditModal() {\n      this.formData = {};\n      this.batchEditShow = true;\n    },\n    /**\n     * 批量创建\n     */\n    async BatchCreateOrEditForm() {\n      this.$refs.editModalForm.validate(async valid => {\n        if (valid) {\n          let body = [];\n          for (let row = 1; i < this.formData.Row; row++) {\n            for (let col = 1; i < this.formData.Col; col++) {\n              body.push({\n                Row: row,\n                Col: col,\n                IsMaintain: this.formData.IsMaintain,\n                RoomId: this.formData.RoomId\n              });\n            }\n          }\n          var {\n            Success\n          } = await this.$Post(`/Seat/BatchCreate`, this.formData);\n          if (Success) {\n            this.editorShow = false;\n            this.$refs.PaginationTableId.Reload(this.searchForm);\n          }\n        }\n      });\n    },\n    /**\n     * 批量删除的时候会触发\n     */\n    async ShowBatchDeleteModal() {\n      var ids = this.$refs.PaginationTableId.GetSelectionRow().map(x => x.Id);\n      if (ids.length == 0) {\n        this.$message.error(\"你选择需要删除的记录\");\n        return;\n      }\n      await this.$PostDelete(`/Seat/BatchDelete`, {\n        Ids: ids\n      });\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击表格搜索按钮会触发\n     */\n    async SearchClick() {\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击清空表单会触发\n     */\n    async ResetClick() {\n      this.searchForm = {};\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    }\n  }\n};","map":{"version":3,"names":["store","mapGetters","name","computed","data","where","searchForm","dataColum","key","hidden","title","type","getters","ColumnType","SHORTTEXT","width","USERDEFINED","editModalFormRules","required","message","trigger","formData","editorShow","batchEditShow","created","methods","UpdateEntityAsync","Id","Data","$PostSigleUpdate","$refs","PaginationTableId","Reload","ShowEditModal","$Post","CreateOrEditForm","editModalForm","validate","valid","Success","ShowDeleteModal","$PostDelete","BatchShowEditModal","BatchCreateOrEditForm","body","row","i","Row","col","Col","push","IsMaintain","RoomId","ShowBatchDeleteModal","ids","GetSelectionRow","map","x","length","$message","error","Ids","SearchClick","ResetClick"],"sources":["src/views/Admin/SeatList.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-card class=\"box-card\">\n      <div slot=\"header\" class=\"clearfix\">\n        <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-search\" @click=\"SearchClick\">搜 索</el-button>\n        <el-button type=\"warning\" size=\"mini\" @click=\"ResetClick\" icon=\"el-icon-s-promotion\">重 置</el-button>\n      </div>\n      <div class=\"tb-body\">\n        <el-form ref=\"searchFormRef\" :model=\"searchForm\" :inline=\"true\" label-width=\"120px\" :style=\"`flex:1;`\">\n          <el-form-item label=\"编号\" prop=\"NoLike\">\n            <el-input v-model.trim=\"searchForm.NoLike\" placeholder=\"请输入编号\" :clearable=\"true\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"自习室\">\n            <SigleSelect url=\"/Room/List\" columnName=\"Name\" :clearable=\"true\" columnValue=\"Id\"\n              v-model=\"searchForm.RoomId\">\n            </SigleSelect>\n          </el-form-item>\n          <el-form-item label=\"是否维修\">\n            <el-select v-model=\"searchForm.IsMaintain\" :clearable=\"true\" placeholder=\"请选择是否维修\">\n              <el-option key=\"true\" label=\"是\" value=\"true\">\n              </el-option>\n              <el-option key=\"false\" label=\"否\" value=\"false\">\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </el-form>\n      </div>\n\n    </el-card>\n\n\n    <el-dialog :title=\"formData.Id ? '修改座位' : '添加座位'\" :visible.sync=\"editorShow\" width=\"50%\" :lock-scroll=\"true\"\n      height=\"800px\">\n      <el-form v-if=\"editorShow == true\" ref=\"editModalForm\" :rules=\"editModalFormRules\" :model=\"formData\"\n        label-width=\"140px\" size=\"mini\">\n        <el-row :gutter=\"10\" class=\"EditFromBody\">\n          <el-col :span=\"24\">\n            <el-form-item label=\"自习室\" prop=\"RoomId\">\n              <SigleSelect url=\"/Room/List\" columnName=\"Name\" columnValue=\"Id\" v-model=\"formData.RoomId\">\n              </SigleSelect>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"是否维修\" prop=\"IsMaintain\">\n              <el-switch v-model=\"formData.IsMaintain\">\n              </el-switch>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"行\" prop=\"Row\">\n              <el-input type=\"number\" v-model.trim=\"formData.Row\" placeholder=\"请输入行\" :clearable=\"true\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"列\" prop=\"Col\">\n              <el-input type=\"number\" v-model.trim=\"formData.Col\" placeholder=\"请输入列\" :clearable=\"true\"></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n\n\n        <el-row type=\"flex\" justify=\"end\" align=\"bottom\">\n          <el-form-item>\n            <el-button type=\"primary\" plain @click=\"CreateOrEditForm()\">确 定</el-button>\n            <el-button @click=\"editorShow = false\">取 消</el-button>\n          </el-form-item>\n        </el-row>\n      </el-form>\n\n    </el-dialog>\n\n    <el-dialog :title=\"批量添加座位\" :visible.sync=\"batchEditShow\" width=\"50%\" :lock-scroll=\"true\" height=\"800px\">\n      <el-form v-if=\"batchEditShow == true\" ref=\"editModalForm\" :rules=\"editModalFormRules\" :model=\"formData\"\n        label-width=\"140px\" size=\"mini\">\n        <el-row :gutter=\"10\" class=\"EditFromBody\">\n          <el-col :span=\"24\">\n            <el-form-item label=\"自习室\" prop=\"RoomId\">\n              <SigleSelect url=\"/Room/List\" columnName=\"Name\" columnValue=\"Id\" v-model=\"formData.RoomId\">\n              </SigleSelect>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"是否维修\" prop=\"IsMaintain\">\n              <el-switch v-model=\"formData.IsMaintain\">\n              </el-switch>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"行\" prop=\"Row\">\n              <el-input type=\"number\" v-model.trim=\"formData.Row\" placeholder=\"请输入行\" :clearable=\"true\"></el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"列\" prop=\"Col\">\n              <el-input type=\"number\" v-model.trim=\"formData.Col\" placeholder=\"请输入列\" :clearable=\"true\"></el-input>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <el-row type=\"flex\" justify=\"end\" align=\"bottom\">\n          <el-form-item>\n            <el-button type=\"primary\" plain @click=\"BatchCreateOrEditForm()\">确 定</el-button>\n            <el-button @click=\"batchEditShow = false\">取 消</el-button>\n          </el-form-item>\n        </el-row>\n      </el-form>\n\n    </el-dialog>\n\n    <PaginationTable ref=\"PaginationTableId\" url=\"/Seat/List\" :column=\"dataColum\" :where=\"where\">\n      <template v-slot:header>\n        <el-button type=\"primary\" size=\"mini\" plain icon=\"el-icon-edit\" @click=\"ShowEditModal()\">新 增</el-button>\n        <el-button type=\"primary\" size=\"mini\" plain icon=\"el-icon-edit\" @click=\"BatchShowEditModal()\">批 量 新\n          增</el-button>\n        <el-button type=\"danger\" size=\"mini\" icon=\"el-icon-delete\" @click=\"ShowBatchDeleteModal()\">批 量 删 除</el-button>\n      </template>\n      <template v-slot:Operate=\"scope\">\n        <el-button type=\"primary\" size=\"mini\" @click=\"ShowEditModal(scope.row.Id)\">修 改</el-button>\n        <el-button type=\"danger\" size=\"mini\" @click=\"ShowDeleteModal(scope.row.Id)\">删 除</el-button>\n      </template>\n    </PaginationTable>\n  </div>\n</template>\n\n<script>\nimport store from '@/store';\nimport { mapGetters } from 'vuex'\nexport default {\n  name: \"SeatList\",\n  computed: {\n    ...mapGetters([\n      'Token', 'UserInfo', 'RoleType', 'HasUserInfo', 'ColumnType', \"UserId\"\n    ])\n  },\n  data() {\n\n    return {\n      where: {},\n      searchForm: {},//搜索定义的数据对象\n      dataColum: [\n        {\n          key: \"Id\",\n          hidden: true,\n\n        },\n        {\n          key: \"No\",\n          title: \"编号\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"Row\",\n          title: \"行\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"Col\",\n          title: \"列\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"IsMaintain\",\n          title: \"是否维修\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          key: \"RoomId\",\n          hidden: true,\n        },\n        {\n          key: \"RoomDto.Name\",\n          title: \"自习室名称\",\n\n          type: store.getters.ColumnType.SHORTTEXT,\n        },\n        {\n          title: \"操作\",\n          width: \"300px\",\n          key: \"Operate\",\n          type: store.getters.ColumnType.USERDEFINED,\n        },\n      ],\n      editModalFormRules: {\n        \"No\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"RoomId\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"IsMaintain\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"Row\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n        \"Col\": [\n          { required: true, message: '该项为必填项', trigger: 'blur' },\n        ],\n      },\n      formData: {\n\n      },//保存或者修改定义的数据对象\n      editorShow: false,\n      batchEditShow: false,\n    };\n  },\n  created() {\n\n  },\n  methods: {\n    //修改属性\n    async UpdateEntityAsync(Id, title, data) {\n      let { Data } = await this.$PostSigleUpdate(`/Seat/Get`, `/Seat/CreateOrEdit`, Id, title, data);\n\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击新增或者编辑的时候会触发\n     */\n    async ShowEditModal(Id) {\n\n      let { Data } = await this.$Post(`/Seat/Get`, { Id: Id });\n      this.formData = Data;\n\n      this.editorShow = true;\n\n    },\n\n    /**\n     * 点击保存的时候会触发\n     */\n    async CreateOrEditForm() {\n\n      this.$refs.editModalForm.validate(async valid => {\n        if (valid) {\n          var { Success } = await this.$Post(`/Seat/CreateOrEdit`, this.formData);\n\n          if (Success) {\n            this.editorShow = false;\n            this.$refs.PaginationTableId.Reload(this.searchForm);\n          }\n        }\n      })\n    },\n    /**\n     * 单个删除的时候会触发\n     */\n    async ShowDeleteModal(Id) {\n      await this.$PostDelete(`/Seat/Delete`, { Id: Id });\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n    * 批量弹窗 \n    * */\n    async BatchShowEditModal() {\n\n      this.formData = {};\n      this.batchEditShow = true;\n\n    },\n    /**\n     * 批量创建\n     */\n    async BatchCreateOrEditForm() {\n\n      this.$refs.editModalForm.validate(async valid => {\n        if (valid) {\n          let body = [];\n          for (let row = 1; i < this.formData.Row; row++) {\n\n            for (let col = 1; i < this.formData.Col; col++) {\n\n              body.push({\n                Row: row,\n                Col: col,\n                IsMaintain: this.formData.IsMaintain,\n                RoomId: this.formData.RoomId,\n              })\n            }\n          }\n          var { Success } = await this.$Post(`/Seat/BatchCreate`, this.formData);\n\n          if (Success) {\n            this.editorShow = false;\n            this.$refs.PaginationTableId.Reload(this.searchForm);\n          }\n        }\n      })\n    },\n    /**\n     * 批量删除的时候会触发\n     */\n    async ShowBatchDeleteModal() {\n      var ids = this.$refs.PaginationTableId.GetSelectionRow().map(x => x.Id);\n      if (ids.length == 0) {\n        this.$message.error(\"你选择需要删除的记录\");\n        return;\n      }\n      await this.$PostDelete(`/Seat/BatchDelete`, { Ids: ids });\n\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击表格搜索按钮会触发\n     */\n    async SearchClick() {\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n    /**\n     * 点击清空表单会触发\n     */\n    async ResetClick() {\n      this.searchForm = {};\n      this.$refs.PaginationTableId.Reload(this.searchForm);\n    },\n\n\n\n\n  },\n};\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}