{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  name: 'Home',\n  props: {},\n  data() {\n    return {\n      DataList: []\n    };\n  },\n  created() {},\n  mounted() {\n    this.GetAppointRoomAppointStatusData();\n  },\n  methods: {\n    //统计早中晚每个自习室的使用率&&空闲率\n    async GetAppointRoomAppointStatusData() {\n      let {\n        Data\n      } = await this.$Post('AppointRecord/GetAppointRoomUseRate', {});\n      this.DataList = Data;\n      let myChart = echarts.init(document.getElementById(\"echartDiv\")); // 图标初始化\n\n      let option = option = {\n        title: {\n          text: 'Referer of a Website',\n          subtext: 'Fake Data',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          orient: 'vertical',\n          left: 'left'\n        },\n        series: [{\n          name: 'Access From',\n          type: 'pie',\n          radius: '50%',\n          data: [{\n            value: 1048,\n            name: 'Search Engine'\n          }, {\n            value: 735,\n            name: 'Direct'\n          }, {\n            value: 580,\n            name: 'Email'\n          }, {\n            value: 484,\n            name: 'Union Ads'\n          }, {\n            value: 300,\n            name: 'Video Ads'\n          }],\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      myChart.setOption(option); // 渲染页面\n      //随着屏幕大小调节图表\n      window.addEventListener(\"resize\", () => {\n        myChart.resize();\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","props","data","DataList","created","mounted","GetAppointRoomAppointStatusData","methods","Data","$Post","myChart","init","document","getElementById","option","title","text","subtext","left","tooltip","trigger","legend","orient","series","type","radius","value","emphasis","itemStyle","shadowBlur","shadowOffsetX","shadowColor","setOption","window","addEventListener","resize"],"sources":["src/views/Admin/AppointRoomAppointStatusData.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row :gutter=\"10\">\r\n      <el-col :span=\"6\" v-for=\"(item, index) in DataList\" :key=\"index\">\r\n        <el-card class=\"box-card margin-top-lg\">\r\n          <div slot=\"header\" class=\"clearfix\">\r\n            <span>{{ item.Room.Name }}</span>\r\n          </div>\r\n          <div class=\"echart\" :id=\"'echartDiv' + item.Room.Id\" :style=\"{ float: 'left', width: '100%', height: '500px' }\">\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n    </el-row>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nexport default {\r\n  name: 'Home',\r\n  props: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      DataList: []\r\n    };\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n    this.GetAppointRoomAppointStatusData();\r\n\r\n  },\r\n  methods: {\r\n    //统计早中晚每个自习室的使用率&&空闲率\r\n    async GetAppointRoomAppointStatusData() {\r\n      let { Data } = await this.$Post('AppointRecord/GetAppointRoomUseRate', {});\r\n      this.DataList = Data;\r\n\r\n\r\n\r\n      let myChart = echarts.init(document.getElementById(\"echartDiv\"));// 图标初始化\r\n\r\n      let option = option = {\r\n        title: {\r\n          text: 'Referer of a Website',\r\n          subtext: 'Fake Data',\r\n          left: 'center'\r\n        },\r\n        tooltip: {\r\n          trigger: 'item'\r\n        },\r\n        legend: {\r\n          orient: 'vertical',\r\n          left: 'left'\r\n        },\r\n        series: [\r\n          {\r\n            name: 'Access From',\r\n            type: 'pie',\r\n            radius: '50%',\r\n            data: [\r\n              { value: 1048, name: 'Search Engine' },\r\n              { value: 735, name: 'Direct' },\r\n              { value: 580, name: 'Email' },\r\n              { value: 484, name: 'Union Ads' },\r\n              { value: 300, name: 'Video Ads' }\r\n            ],\r\n            emphasis: {\r\n              itemStyle: {\r\n                shadowBlur: 10,\r\n                shadowOffsetX: 0,\r\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      };\r\n\r\n\r\n      myChart.setOption(option);// 渲染页面\r\n      //随着屏幕大小调节图表\r\n      window.addEventListener(\"resize\", () => {\r\n        myChart.resize();\r\n      });\r\n\r\n\r\n    },\r\n\r\n\r\n  }\r\n}       \r\n</script>\r\n\r\n\r\n<style scoped></style>"],"mappings":"AAmBA,YAAAA,OAAA;AACA;EACAC,IAAA;EACAC,KAAA,GAEA;EACAC,KAAA;IACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA,GAEA;EACAC,QAAA;IACA,KAAAC,+BAAA;EAEA;EACAC,OAAA;IACA;IACA,MAAAD,gCAAA;MACA;QAAAE;MAAA,eAAAC,KAAA;MACA,KAAAN,QAAA,GAAAK,IAAA;MAIA,IAAAE,OAAA,GAAAX,OAAA,CAAAY,IAAA,CAAAC,QAAA,CAAAC,cAAA;;MAEA,IAAAC,MAAA,GAAAA,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,MAAA;UACAC,MAAA;UACAJ,IAAA;QACA;QACAK,MAAA,GACA;UACAvB,IAAA;UACAwB,IAAA;UACAC,MAAA;UACAvB,IAAA,GACA;YAAAwB,KAAA;YAAA1B,IAAA;UAAA,GACA;YAAA0B,KAAA;YAAA1B,IAAA;UAAA,GACA;YAAA0B,KAAA;YAAA1B,IAAA;UAAA,GACA;YAAA0B,KAAA;YAAA1B,IAAA;UAAA,GACA;YAAA0B,KAAA;YAAA1B,IAAA;UAAA,EACA;UACA2B,QAAA;YACAC,SAAA;cACAC,UAAA;cACAC,aAAA;cACAC,WAAA;YACA;UACA;QACA;MAEA;MAGArB,OAAA,CAAAsB,SAAA,CAAAlB,MAAA;MACA;MACAmB,MAAA,CAAAC,gBAAA;QACAxB,OAAA,CAAAyB,MAAA;MACA;IAGA;EAGA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}